{"version":3,"file":"static/js/16.9e1e504d.chunk.js","mappings":"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","sources":["../../core/src/runs/AssetKeyTagCollection.tsx","../../core/src/runs/DeletionDialog.tsx","../../core/src/runs/NavigationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx","../../core/src/runs/RunTags.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/runs/useJobAvailabilityErrorForRun.tsx","../../core/src/ui/AnchorButton.tsx","../../core/src/workspace/useRepositoryForRun.ts"],"sourcesContent":["import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Table,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey, tokenForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\n\nconst MAX_ASSET_TAGS = 3;\n\nexport const AssetKeyTagCollection: React.FC<{\n  assetKeys: AssetKey[] | null;\n  modalTitle?: string;\n  useTags?: boolean;\n}> = React.memo(({assetKeys, useTags, modalTitle = 'Assets in Run'}) => {\n  const [showMore, setShowMore] = React.useState(false);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  const assetCount = assetKeys.length;\n  const displayed = assetCount <= MAX_ASSET_TAGS ? assetKeys : [];\n  const hidden = assetCount - displayed.length;\n\n  const showMoreDialog =\n    hidden > 0 ? (\n      <Dialog\n        title={modalTitle}\n        onClose={() => setShowMore(false)}\n        style={{minWidth: '400px', maxWidth: '80vw', maxHeight: '70vh'}}\n        isOpen={showMore}\n      >\n        {showMore ? (\n          <Box\n            padding={{bottom: 12}}\n            border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n            style={{overflowY: 'auto'}}\n            background={Colors.White}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Asset key</th>\n                </tr>\n              </thead>\n              <tbody>\n                {assetKeys.map((assetKey, ii) => (\n                  <tr key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n                    <td>\n                      <Link to={assetDetailsPathForKey(assetKey)} key={tokenForAssetKey(assetKey)}>\n                        {displayNameForAssetKey(assetKey)}\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Box>\n        ) : null}\n        <DialogFooter>\n          <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    ) : undefined;\n\n  if (useTags) {\n    return (\n      <>\n        {displayed.map((assetKey, ii) => (\n          <Link to={assetDetailsPathForKey(assetKey)} key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          </Link>\n        ))}\n        {hidden > 0 && (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Tag intent=\"none\" icon=\"asset\">\n              {hidden} assets\n            </Tag>\n          </ButtonLink>\n        )}\n        {showMoreDialog}\n      </>\n    );\n  }\n\n  return (\n    <Box flex={{direction: 'row', gap: 8}}>\n      <Icon color={Colors.Gray400} name=\"asset\" size={16} style={{marginTop: 2}} />\n      <Box style={{flex: 1}} flex={{wrap: 'wrap', display: 'inline-flex'}}>\n        {displayed.map((assetKey, idx) => (\n          <Link\n            to={assetDetailsPathForKey(assetKey)}\n            key={tokenForAssetKey(assetKey)}\n            style={{marginRight: 4}}\n          >\n            {`${displayNameForAssetKey(assetKey)}${idx < displayed.length - 1 ? ',' : ''}`}\n          </Link>\n        ))}\n\n        {hidden > 0 && displayed.length > 0 ? (\n          <ButtonLink onClick={() => setShowMore(true)}>{` + ${hidden} more`}</ButtonLink>\n        ) : hidden > 0 ? (\n          <ButtonLink onClick={() => setShowMore(true)}>{`${hidden} assets`}</ButtonLink>\n        ) : undefined}\n      </Box>\n      {showMoreDialog}\n    </Box>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {DeleteMutation, DeleteMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst refineToError = (data: DeleteMutation | null | undefined) => {\n  if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.deletePipelineRun;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<DeleteMutation, DeleteMutationVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n","import {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {__ASSET_JOB_PREFIX} from '../asset-graph/Utils';\n\nimport {DagsterTag, RunTag, TagAction, TagType} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\n\n// Sort these tags to the start of the list.\nconst priorityTagSet = new Set([\n  DagsterTag.ScheduleName as string,\n  DagsterTag.SensorName as string,\n  DagsterTag.Backfill as string,\n]);\n\nconst renamedTags = {\n  [DagsterTag.SolidSelection]: DagsterTag.OpSelection,\n};\n\nconst canAddTagToFilter = (key: string) => {\n  return key !== DagsterTag.SolidSelection && key !== DagsterTag.OpSelection;\n};\n\nexport const RunTags: React.FC<{\n  tags: TagType[];\n  mode: string | null;\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({tags, onAddTag, mode}) => {\n  const copy = useCopyToClipboard();\n\n  const copyAction = React.useMemo(\n    () => ({\n      label: 'Copy tag',\n      onClick: async (tag: TagType) => {\n        copy(`${tag.key}:${tag.value}`);\n        await showSharedToaster({intent: 'success', message: 'Copied tag!'});\n      },\n    }),\n    [copy],\n  );\n\n  const addToFilterAction = React.useMemo(\n    () =>\n      onAddTag\n        ? {\n            label: 'Add tag to filter',\n            onClick: (tag: TagType) => {\n              onAddTag({token: 'tag', value: `${tag.key}=${tag.value}`});\n            },\n          }\n        : null,\n    [onAddTag],\n  );\n\n  const actionsForTag = (tag: TagType) => {\n    const list: TagAction[] = [copyAction];\n    if (addToFilterAction && canAddTagToFilter(tag.key)) {\n      list.push(addToFilterAction);\n    }\n    return list.filter((item) => !!item);\n  };\n\n  const displayedTags = React.useMemo(() => {\n    const priority = [];\n    const others = [];\n    const copiedTags = tags.map(({key, value, link}) => ({key, value, link}));\n    for (const tag of copiedTags) {\n      const {key} = tag;\n      if (renamedTags.hasOwnProperty(key)) {\n        tag.key = renamedTags[key as keyof typeof renamedTags];\n      }\n\n      if (\n        tag.value.startsWith(__ASSET_JOB_PREFIX) &&\n        (key === DagsterTag.PartitionSet || key === DagsterTag.StepSelection)\n      ) {\n        continue;\n      } else if (priorityTagSet.has(key)) {\n        priority.push(tag);\n      } else {\n        others.push(tag);\n      }\n    }\n    return [...priority, ...others];\n  }, [tags]);\n\n  if (!tags.length) {\n    return null;\n  }\n\n  return (\n    <Box flex={{direction: 'row', wrap: 'wrap', gap: 4}}>\n      {mode ? <RunTag tag={{key: 'mode', value: mode}} /> : null}\n      {displayedTags.map((tag, idx) => (\n        <RunTag tag={tag} key={idx} actions={actionsForTag(tag)} />\n      ))}\n    </Box>\n  );\n});\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TerminateRunPolicy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {TerminateMutation, TerminateMutationVariables} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\nconst refineToError = (data: TerminateMutation | null | undefined) => {\n  if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n    throw new ErrorEvent('Not an error!');\n  }\n  return data?.terminatePipelineExecution;\n};\n\ntype Error = ReturnType<typeof refineToError> | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<TerminateMutation, TerminateMutationVariables>(\n    TERMINATE_MUTATION,\n  );\n  const policy = state.mustForce\n    ? TerminateRunPolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminateRunPolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <>\n                  <Checkbox\n                    checked={state.mustForce}\n                    size=\"small\"\n                    label=\"Force termination immediately\"\n                    onChange={onToggleForce}\n                  />\n                  {state.mustForce ? (\n                    <Box flex={{display: 'flex', direction: 'row', gap: 8}} margin={{top: 8}}>\n                      <Icon name=\"warning\" color={Colors.Yellow500} />\n                      <div>\n                        <strong>Warning:</strong> computational resources created by runs may not be\n                        cleaned up.\n                      </div>\n                    </Box>\n                  ) : null}\n                </>\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {Group, IconName} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {buildRepoAddress, buildRepoPathForHuman} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {\n  TargetRunWithParentSnapshot,\n  useRepositoryForRunWithParentSnapshot,\n} from '../workspace/useRepositoryForRun';\n\nexport const useJobAvailabilityErrorForRun = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} => {\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (!run.pipelineSnapshotId) {\n    return {\n      icon: 'error',\n      tooltip: `\"${run.pipelineName}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the job. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: 'warning',\n        tooltip: `The loaded version of \"${run.pipelineName}\" may be different than the one used for the original run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      const originRepoName = run.repositoryOrigin\n        ? repoAddressAsHumanString(\n            buildRepoAddress(\n              run.repositoryOrigin.repositoryName,\n              run.repositoryOrigin.repositoryLocationName,\n            ),\n          )\n        : null;\n\n      return {\n        icon: 'warning',\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The original run loaded \"${run.pipelineName}\" from ${\n              originRepoName || 'a different code location'\n            }.`}</div>\n            {originRepoName ? (\n              <div>\n                Original definition in: <strong>{originRepoName}</strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the job name matched. This could be from any repo in the workspace.\n    return {\n      icon: 'warning',\n      tooltip: `The job \"${run.pipelineName}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this job. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipelineName}\" is not available in your definitions.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load definitions for ${buildRepoPathForHuman(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: 'error',\n    tooltip,\n    disabled: true,\n  };\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {\n  intentToFillColor,\n  intentToStrokeColor,\n  intentToTextColor,\n  StyledButton,\n  StyledButtonText,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ntype AnchorButtonProps = Omit<\n  React.ComponentProps<typeof BlueprintAnchorButton>,\n  'loading' | 'onClick' | 'onFocus' | 'type'\n> &\n  LinkProps & {\n    label?: React.ReactNode;\n  };\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={intentToFillColor(intent, outlined)}\n        $strokeColor={intentToStrokeColor(intent, outlined)}\n        $textColor={intentToTextColor(intent, outlined)}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","import {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin' | 'pipeline-name-only';\n};\n\ntype MatchTypeWithSnapshot = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\nexport interface TargetRunWithParentSnapshot extends TargetRun {\n  parentPipelineSnapshotId?: string | null;\n}\n\ninterface TargetRun {\n  pipelineName: string;\n  repositoryOrigin: null | {\n    repositoryLocationName: string;\n    repositoryName: string;\n  };\n  pipelineSnapshotId: string | null;\n}\n\nconst repoOriginMatchForRun = (options: DagsterRepoOption[], run: TargetRun | null | undefined) => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n  // Try to match the pipeline name within the specified origin, if possible.\n  const origin = run.repositoryOrigin;\n\n  if (!origin) {\n    return null;\n  }\n\n  const location = origin?.repositoryLocationName;\n  const name = origin?.repositoryName;\n\n  const match = options.find(\n    (option) => option.repository.name === name && option.repositoryLocation.name === location,\n  );\n\n  // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n  return match && repoContainsPipeline(match, pipelineName) ? match : null;\n};\n\nconst jobNameMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRun | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // There is no origin repo. Find any repos that might contain a matching pipeline name.\n  const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n  return possibleMatches.length ? possibleMatches : null;\n};\n\nconst snapshotMatchesForRun = (\n  options: DagsterRepoOption[],\n  run: TargetRunWithParentSnapshot | null | undefined,\n): DagsterRepoOption[] | null => {\n  if (!run) {\n    return null;\n  }\n\n  const pipelineName = run.pipelineName;\n\n  // When jobs are subsetted (with an opSelection or assetSelection), only their\n  // parentPipelineSnapshotId (the id of the pipelineSnapshot that they were subsetted from) will\n  // be found in the repository, so look for that instead.\n  const snapshotId = run.parentPipelineSnapshotId ?? run.pipelineSnapshotId;\n\n  // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n  if (pipelineName && snapshotId) {\n    const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n    if (snapshotMatches.length) {\n      return snapshotMatches;\n    }\n  }\n\n  return null;\n};\n\n/**\n * The simple case. Find the repo match for this job name, or the first available\n * repo match for that job name.\n */\nexport const useRepositoryForRunWithoutSnapshot = (\n  run: TargetRun | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n  const repoMatch = repoOriginMatchForRun(options, run);\n  if (repoMatch) {\n    return {match: repoMatch, type: 'origin'};\n  }\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n  if (jobNameMatches && jobNameMatches.length) {\n    return {match: jobNameMatches[0]!, type: 'pipeline-name-only'};\n  }\n  return null;\n};\n\n/**\n * The more complex case, where a parent snapshot has been fetched. Here, use a\n * repo match and try to pair it with the snapshot ID. If that fails, use any repo\n * match, then any snapshot ID match, then any job name match.\n *\n * Retrieving a parent snapshot ID is expensive, so this should only be used for\n * one run at a time.\n */\nexport const useRepositoryForRunWithParentSnapshot = (\n  run: TargetRunWithParentSnapshot | null | undefined,\n): MatchTypeWithSnapshot | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = repoOriginMatchForRun(options, run);\n  const snapshotMatches = snapshotMatchesForRun(options, run);\n  const jobNameMatches = jobNameMatchesForRun(options, run);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches && snapshotMatches[0]) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (jobNameMatches && jobNameMatches[0]) {\n    return {match: jobNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n"],"names":["AssetKeyTagCollection","React","_ref","assetKeys","useTags","_ref$modalTitle","modalTitle","_React$useState","_React$useState2","_slicedToArray","showMore","setShowMore","length","assetCount","displayed","hidden","showMoreDialog","_jsxs","Dialog","title","onClose","style","minWidth","maxWidth","maxHeight","isOpen","children","_jsx","Box","padding","bottom","border","side","color","Colors","width","overflowY","background","Table","map","assetKey","ii","Link","to","assetDetailsPathForKey","displayNameForAssetKey","tokenForAssetKey","concat","DialogFooter","Button","intent","autoFocus","onClick","undefined","_Fragment","Tag","interactive","icon","ButtonLink","flex","direction","gap","Icon","name","size","marginTop","wrap","display","idx","marginRight","refineToError","data","deletePipelineRun","__typename","Error","initializeState","frozenRuns","step","deletion","completed","errors","deletionDialogReducer","prevState","action","type","_objectSpread","_defineProperty","id","error","DeletionDialog","props","onComplete","onTerminateInstead","selectedRuns","_React$useReducer","current","_React$useReducer2","state","dispatch","runIDs","Object","keys","count","terminatableCount","filter","_useMutation","useMutation","DELETE_MUTATION","destroy","mutate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","runList","_i","_runList","runId","_yield$destroy","_context","prev","next","variables","sent","stop","apply","arguments","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","value","ProgressBar","Math","max","animate","NavigationBlock","message","progressContent","errorCount","successCount","alignItems","_errors$runId","Mono","slice","completionContent","disabled","buttons","handler","e","preventDefault","returnValue","window","addEventListener","removeEventListener","Prompt","priorityTagSet","Set","DagsterTag","renamedTags","RunTags","tags","onAddTag","mode","copy","useCopyToClipboard","copyAction","label","_onClick","tag","key","showSharedToaster","_x","addToFilterAction","token","actionsForTag","list","push","item","displayedTags","_step","priority","others","copiedTags","_ref2","link","_iterator","_createForOfIteratorHelper","s","n","done","hasOwnProperty","startsWith","__ASSET_JOB_PREFIX","has","err","f","RunTag","actions","terminatePipelineExecution","ErrorEvent","mustForce","some","termination","terminationDialogReducer","checked","TerminationDialog","TERMINATE_MUTATION","terminate","policy","TerminateRunPolicy","_yield$terminate","terminatePolicy","onToggleForce","event","target","showCheckbox","Checkbox","onChange","margin","top","useJobAvailabilityErrorForRun","run","_run$repositoryOrigin","_run$repositoryOrigin2","repoMatch","useRepositoryForRunWithParentSnapshot","pipelineSnapshotId","tooltip","pipelineName","matchType","originRepoName","repositoryOrigin","repoAddressAsHumanString","buildRepoAddress","repositoryName","repositoryLocationName","repoForRun","repoLocationForRun","buildRepoPathForHuman","AnchorButton","ref","outlined","rightIcon","rest","_objectWithoutProperties","_excluded","StyledButton","as","$fillColor","intentToFillColor","$strokeColor","intentToStrokeColor","$textColor","intentToTextColor","StyledButtonText","displayName","repoOriginMatchForRun","options","origin","location","match","find","option","repository","repositoryLocation","repoContainsPipeline","jobNameMatchesForRun","possibleMatches","findRepoContainingPipeline","useRepositoryForRunWithoutSnapshot","useRepositoryOptions","jobNameMatches","snapshotMatches","_run$parentPipelineSn","snapshotId","parentPipelineSnapshotId","snapshotMatchesForRun","repoAndSnapshotMatch","repoOption"],"sourceRoot":""}