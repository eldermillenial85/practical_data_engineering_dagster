{"version":3,"file":"static/js/500.28daa8f6.chunk.js","mappings":"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","sources":["../../core/src/instance/useCanSeeConfig.tsx","../../core/src/runs/RunListTabs.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/hooks/usePortalSlot.tsx","../../core/src/runs/RunsRoot.tsx","../../core/src/runs/useCursorPaginatedQuery.tsx","../../core/src/ui/Loading.tsx","../../core/src/ui/StickyTableContainer.tsx","../../ui/src/components/Alert.tsx","../../ui/src/components/CursorControls.tsx","../../ui/src/components/Page.tsx","../../ui/src/components/PageHeader.tsx","../../../node_modules/lodash/_arrayAggregator.js","../../../node_modules/lodash/_baseAggregator.js","../../../node_modules/lodash/_createAggregator.js","../../../node_modules/lodash/partition.js"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, JoinedButtons, TokenizingFieldValue} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {RunStatus, RunsFilter} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nimport {failedStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {runsPathWithFilters, useQueryPersistedRunFilters} from './RunsFilterInput';\nimport {RunTabsCountQuery, RunTabsCountQueryVariables} from './types/RunListTabs.types';\n\nconst getDocumentTitle = (selected: ReturnType<typeof useSelectedRunsTab>) => {\n  switch (selected) {\n    case 'all':\n      return 'Runs | All runs';\n    case 'failed':\n      return 'Runs | Failed';\n    case 'in-progress':\n      return 'Runs | In progress';\n    case 'queued':\n      return 'Runs | Queued';\n    case 'scheduled':\n      return 'Runs | Scheduled';\n    default:\n      return 'Runs';\n  }\n};\n\nexport const useRunListTabs = (filter: RunsFilter = {}) => {\n  const queryResult = useQuery<RunTabsCountQuery, RunTabsCountQueryVariables>(\n    RUN_TABS_COUNT_QUERY,\n    {\n      variables: {\n        queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n        inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n      },\n    },\n  );\n\n  const {data: countData} = queryResult;\n  const {queuedCount, inProgressCount} = React.useMemo(() => {\n    return {\n      queuedCount:\n        countData?.queuedCount?.__typename === 'Runs' ? countData.queuedCount.count : null,\n      inProgressCount:\n        countData?.inProgressCount?.__typename === 'Runs' ? countData.inProgressCount.count : null,\n    };\n  }, [countData]);\n\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const selectedTab = useSelectedRunsTab(filterTokens);\n\n  useDocumentTitle(getDocumentTitle(selectedTab));\n\n  const urlForStatus = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    return runsPathWithFilters([...statusTokens, ...tokensMinusStatus]);\n  };\n\n  const tabs = (\n    <JoinedButtons>\n      <ActivatableButton to={urlForStatus([])} id=\"all\" $active={selectedTab === 'all'}>\n        All runs\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(queuedStatuses))}\n        id=\"queued\"\n        $active={selectedTab === 'queued'}\n      >\n        Queued ({queuedCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(inProgressStatuses))}\n        id=\"in-progress\"\n        $active={selectedTab === 'in-progress'}\n      >\n        In progress ({inProgressCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(failedStatuses))}\n        id=\"failed\"\n        $active={selectedTab === 'failed'}\n      >\n        Failed\n      </ActivatableButton>\n      <ActivatableButton\n        title=\"Scheduled\"\n        to=\"/runs/scheduled\"\n        id=\"scheduled\"\n        $active={selectedTab === 'scheduled'}\n      >\n        Scheduled\n      </ActivatableButton>\n    </JoinedButtons>\n  );\n\n  return {tabs, queryResult};\n};\n\nexport const ActivatableButton = styled(AnchorButton)<{$active: boolean}>`\n  ${(props) =>\n    props.$active &&\n    `\n    background: ${Colors.Gray200};\n  `}\n`;\n\nexport const useSelectedRunsTab = (filterTokens: TokenizingFieldValue[]) => {\n  const {pathname} = useLocation();\n  if (pathname === '/runs/timeline') {\n    return 'timeline';\n  }\n  if (pathname === '/runs/scheduled') {\n    return 'scheduled';\n  }\n  if (pathname === '/overview/backfills') {\n    return 'backfills';\n  }\n\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(failedStatuses, statusTokens)) {\n    return 'failed';\n  }\n  return 'all';\n};\n\nexport const RUN_TABS_COUNT_QUERY = gql`\n  query RunTabsCountQuery($queuedFilter: RunsFilter!, $inProgressFilter: RunsFilter!) {\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ... on Runs {\n        count\n      }\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        count\n      }\n    }\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.MANAGED:\n    case RunStatus.CANCELING:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.STARTING:\n      return 'none';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n      return 'danger';\n    case RunStatus.STARTED:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst runStatusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const runStatusToBackfillStateString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n      return 'In progress';\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Completed';\n    case RunStatus.MANAGED:\n    case RunStatus.NOT_STARTED:\n      return 'Missing';\n    default:\n      return assertUnreachable(status);\n  }\n};\nexport const RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{runStatusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import React from 'react';\nimport {createPortal} from 'react-dom';\n\n/**\n * Allows you to move a component around in the tree without it losing its state.\n */\nexport function usePortalSlot(reactNode: React.ReactNode) {\n  const [targetEl, setTargetEl] = React.useState<HTMLDivElement | null>(null);\n\n  React.useLayoutEffect(() => {\n    setTargetEl((e) => (e === null ? document.createElement('div') : e));\n  }, []);\n\n  return [\n    targetEl ? createPortal(reactNode, targetEl) : null,\n    targetEl ? <DOMNodeHost node={targetEl} /> : null,\n  ];\n}\n\nfunction DOMNodeHost({node}: {node: HTMLElement}) {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  React.useLayoutEffect(() => {\n    const ownDiv = ref.current;\n    if (node.parentNode === ownDiv) {\n      return;\n    }\n    if (node.parentNode !== null && node.parentNode !== ownDiv) {\n      throw Error('Cannot render the same node twice');\n    }\n    ownDiv?.appendChild(node);\n    return () => {\n      ownDiv?.removeChild(node);\n    };\n  }, [node]);\n  return <div ref={ref} />;\n}\n","import {ApolloError, gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  ButtonLink,\n  Colors,\n  CursorHistoryControls,\n  Heading,\n  NonIdealState,\n  Page,\n  PageHeader,\n  tokenToString,\n} from '@dagster-io/ui';\nimport partition from 'lodash/partition';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {usePortalSlot} from '../hooks/usePortalSlot';\nimport {InstancePageContext} from '../instance/InstancePageContext';\nimport {useCanSeeConfig} from '../instance/useCanSeeConfig';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\n\nimport {useRunListTabs, useSelectedRunsTab} from './RunListTabs';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from './RunTable';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {\n  RunFilterTokenType,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  RunFilterToken,\n  useRunsFilterInput,\n} from './RunsFilterInput';\nimport {\n  QueueDaemonStatusQuery,\n  QueueDaemonStatusQueryVariables,\n  RunsRootQuery,\n  RunsRootQueryVariables,\n} from './types/RunsRoot.types';\nimport {useCursorPaginatedQuery} from './useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 25;\n\nexport const RunsRoot = () => {\n  useTrackPageView();\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n  const canSeeConfig = useCanSeeConfig();\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    RunsRootQuery,\n    RunsRootQueryVariables\n  >({\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.id;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n    variables: {\n      filter,\n    },\n    query: RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const currentTab = useSelectedRunsTab(filterTokens);\n  const staticStatusTags = currentTab !== 'all';\n  const [statusTokens, nonStatusTokens] = partition(\n    filterTokens,\n    (token) => token.token === 'status',\n  );\n\n  const setFilterTokensWithStatus = React.useCallback(\n    (tokens: RunFilterToken[]) => {\n      if (staticStatusTags) {\n        setFilterTokens([...statusTokens, ...tokens]);\n      } else {\n        setFilterTokens(tokens);\n      }\n    },\n    [setFilterTokens, staticStatusTags, statusTokens],\n  );\n\n  const onAddTag = React.useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!nonStatusTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokensWithStatus([...nonStatusTokens, token]);\n      }\n    },\n    [nonStatusTokens, setFilterTokensWithStatus],\n  );\n\n  const enabledFilters = React.useMemo(() => {\n    const filters: RunFilterTokenType[] = [\n      'tag',\n      'snapshotId',\n      'id',\n      'job',\n      'pipeline',\n      'backfill',\n    ];\n\n    if (!staticStatusTags) {\n      filters.push('status');\n    }\n\n    return filters;\n  }, [staticStatusTags]);\n\n  const mutableTokens = React.useMemo(() => {\n    if (staticStatusTags) {\n      return filterTokens.filter((token) => token.token !== 'status');\n    }\n    return filterTokens;\n  }, [filterTokens, staticStatusTags]);\n\n  const {tabs, queryResult: runQueryResult} = useRunListTabs(filter);\n  const countRefreshState = useQueryRefreshAtInterval(runQueryResult, FIFTEEN_SECONDS);\n  const combinedRefreshState = useMergedRefresh(countRefreshState, refreshState);\n\n  const {button, activeFiltersJsx} = useRunsFilterInput({\n    tokens: mutableTokens,\n    onChange: setFilterTokensWithStatus,\n    enabledFilters,\n  });\n\n  const [filtersPortal, filtersSlot] = usePortalSlot(button);\n\n  function actionBar() {\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        {tabs}\n        {filtersSlot}\n      </Box>\n    );\n  }\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>Runs</Heading>}\n        right={<QueryRefreshCountdown refreshState={combinedRefreshState} />}\n      />\n      {filtersPortal}\n      {currentTab === 'queued' && canSeeConfig ? (\n        <Box\n          flex={{direction: 'column', gap: 8}}\n          padding={{horizontal: 24, vertical: 16}}\n          border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n        >\n          <Alert\n            intent=\"info\"\n            title={<Link to=\"/config#run_coordinator\">View queue configuration</Link>}\n          />\n          <QueueDaemonAlert />\n        </Box>\n      ) : null}\n      <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n        <Loading\n          queryResult={queryResult}\n          allowStaleData\n          renderError={(error: ApolloError) => {\n            // In this case, a 400 is most likely due to invalid run filters, which are a GraphQL\n            // validation error but surfaced as a 400.\n            const badRequest = !!(\n              error?.networkError &&\n              'statusCode' in error.networkError &&\n              error.networkError.statusCode === 400\n            );\n            return (\n              <Box\n                flex={{direction: 'column', gap: 32}}\n                padding={{vertical: 8, left: 24, right: 12}}\n              >\n                {actionBar()}\n                <NonIdealState\n                  icon=\"warning\"\n                  title={badRequest ? 'Invalid run filters' : 'Unexpected error'}\n                  description={\n                    badRequest\n                      ? 'The specified run filters are not valid. Please check the filters and try again.'\n                      : 'An unexpected error occurred. Check the console for details.'\n                  }\n                />\n              </Box>\n            );\n          }}\n        >\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n\n            return (\n              <>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={pipelineRunsOrError.results.slice(0, PAGE_SIZE)}\n                    onAddTag={onAddTag}\n                    filter={filter}\n                    actionBarComponents={actionBar()}\n                    belowActionBarComponents={\n                      activeFiltersJsx.length ? (\n                        <>\n                          {activeFiltersJsx}\n                          <ButtonLink\n                            onClick={() => {\n                              setFilterTokensWithStatus([]);\n                            }}\n                          >\n                            Clear All\n                          </ButtonLink>\n                        </>\n                      ) : null\n                    }\n                  />\n                </StickyTableContainer>\n                {pipelineRunsOrError.results.length > 0 ? (\n                  <div style={{marginTop: '16px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </RunsQueryRefetchContext.Provider>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default RunsRoot;\n\nconst RUNS_ROOT_QUERY = gql`\n  query RunsRootQuery($limit: Int, $cursor: String, $filter: RunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst QueueDaemonAlert = () => {\n  const {data} = useQuery<QueueDaemonStatusQuery, QueueDaemonStatusQueryVariables>(\n    QUEUE_DAEMON_STATUS_QUERY,\n  );\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const status = data?.instance.daemonHealth.daemonStatus;\n  if (status?.required && !status?.healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The queued run coordinator is not healthy.\"\n        description={\n          <div>\n            View <Link to=\"/health\">{pageTitle}</Link> for details.\n          </div>\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst QUEUE_DAEMON_STATUS_QUERY = gql`\n  query QueueDaemonStatusQuery {\n    instance {\n      id\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"QUEUED_RUN_COORDINATOR\") {\n          id\n          daemonType\n          healthy\n          required\n        }\n      }\n    }\n  }\n`;\n","import {useQuery} from '@apollo/client';\nimport {CursorPaginationProps} from '@dagster-io/ui';\nimport {DocumentNode} from 'graphql';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\ninterface CursorPaginationQueryVariables {\n  cursor?: string | null;\n  limit?: number | null;\n}\n\n/**\n * This is a React hook that makes it easier to build paginated list views based on a GraphQL\n * query. It is intended to be used in place of Apollo's `useQuery` and assumes that the query\n * takes at least `cursor` and `limit` variables. It manages those two variables internally,\n * and you can pass additional variables via the options.\n *\n * The current pagination \"cursor\" is saved to the URL query string, which allows the user to\n * navigate \"back\" in their browser history to move to previous pages.\n *\n * The returned paginationProps expose methods for moving to the next / previous page and are\n * used by <CursorPaginationControls /> to render the pagination buttons.\n */\nexport function useCursorPaginatedQuery<T, TVars extends CursorPaginationQueryVariables>(options: {\n  query: DocumentNode;\n  nextCursorForResult: (result: T) => string | undefined;\n  skip?: boolean;\n  variables: Omit<Omit<TVars, 'cusor'>, 'limit'>;\n  pageSize: number;\n  getResultArray: (result: T | undefined) => any[];\n}) {\n  const [cursorStack, setCursorStack] = React.useState<string[]>(() => []);\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n\n  const queryVars: any = {\n    ...options.variables,\n    cursor,\n    limit: options.pageSize + 1,\n  };\n\n  const queryResult = useQuery<T, TVars>(options.query, {\n    skip: options.skip,\n    variables: queryVars,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const resultArray = options.getResultArray(queryResult.data);\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!cursor,\n    hasNextCursor: resultArray.length === options.pageSize + 1,\n    popCursor: () => {\n      const nextStack = [...cursorStack];\n      setCursor(nextStack.pop());\n      setCursorStack(nextStack);\n    },\n    advanceCursor: () => {\n      if (cursor) {\n        setCursorStack((current) => [...current, cursor]);\n      }\n      const nextCursor = queryResult.data && options.nextCursorForResult(queryResult.data);\n      if (!nextCursor) {\n        return;\n      }\n      setCursor(nextCursor);\n    },\n    reset: () => {\n      setCursorStack([]);\n      setCursor(undefined);\n    },\n  };\n\n  return {queryResult, paginationProps};\n}\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ERROR_CODES_TO_SURFACE, errorCodeToMessage} from '../app/HTTPErrorCodes';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n\n    const {networkError} = error;\n    if (!networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n\n    if ('statusCode' in networkError && ERROR_CODES_TO_SURFACE.has(networkError.statusCode)) {\n      const statusCode = networkError.statusCode;\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"Network error\"\n            description={errorCodeToMessage(statusCode)}\n          />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\ninterface Props {\n  $top?: number;\n}\n\n/**\n * Wrap a `Table` component with this to cause its `thead` to be sticky while scrolling.\n *\n * `$top` is the pixel value of the point in the scrolling container that the `thead`\n * should stick to. Probably `0`.\n */\nexport const StickyTableContainer = styled.div<Props>`\n  thead tr {\n    position: sticky;\n    top: ${({$top = 0}) => $top}px;\n    background-color: ${Colors.White};\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ${Colors.KeylineGray};\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasPrevCursor} onClick={popCursor}>\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n"],"names":["useCanSeeConfig","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","_templateObject","_taggedTemplateLiteral","useRunListTabs","filter","arguments","length","undefined","queryResult","RUN_TABS_COUNT_QUERY","variables","queuedFilter","_objectSpread","statuses","Array","from","queuedStatuses","inProgressFilter","inProgressStatuses","countData","_React$useMemo","React","_countData$queuedCoun","_countData$inProgress","queuedCount","__typename","count","inProgressCount","_useQueryPersistedRun","useQueryPersistedRunFilters","filterTokens","_slicedToArray","selectedTab","useSelectedRunsTab","useDocumentTitle","selected","getDocumentTitle","urlForStatus","tokensMinusStatus","token","statusTokens","map","status","value","runsPathWithFilters","concat","_toConsumableArray","tabs","_jsxs","JoinedButtons","children","_jsx","ActivatableButton","to","id","$active","failedStatuses","title","styled","AnchorButton","withConfig","displayName","componentId","props","Colors","pathname","useLocation","Set","isEqual","RunStats","_ref","runId","stats","RUN_STATS_QUERY","loading","RunStatsDetailsContainer","Box","padding","flex","justifyContent","Spinner","purpose","result","pipelineRunOrError","PythonErrorInfo","error","runPath","Link","stepsSucceeded","stepsFailed","materializations","expectations","PYTHON_ERROR_FRAGMENT","RunStatusWithStats","rest","_objectWithoutProperties","_excluded","Popover","position","interactionKind","content","hoverOpenDelay","RunStatusIndicator","_ref2","size","RunStatusDot","pulse","pulseAnimation","keyframes","_ref3","_ref4","_ref5","_ref6","css","_templateObject2","_ref7","RUN_STATUS_COLORS","statusToIntent","RunStatus","assertUnreachable","runStatusToString","runStatusToBackfillStateString","QUEUED","NOT_STARTED","MANAGED","STARTED","STARTING","SUCCESS","FAILURE","CANCELING","CANCELED","SCHEDULED","RunStatusTag","Tag","intent","direction","alignItems","gap","RunStatusTagWithStats","usePortal","DOMNodeHost","node","ref","ownDiv","current","parentNode","Error","appendChild","removeChild","RunsRoot","useTrackPageView","_useQueryPersistedRun2","setFilterTokens","runsFilterForSearchTokens","canSeeConfig","_useCursorPaginatedQu","useCursorPaginatedQuery","nextCursorForResult","runs","_runs$pipelineRunsOrE","pipelineRunsOrError","results","PAGE_SIZE","getResultArray","query","RUNS_ROOT_QUERY","pageSize","paginationProps","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","currentTab","staticStatusTags","_partition","partition","_partition2","nonStatusTokens","setFilterTokensWithStatus","tokens","onAddTag","tokenAsString","tokenToString","some","enabledFilters","filters","push","mutableTokens","_useRunListTabs","runQueryResult","countRefreshState","combinedRefreshState","useMergedRefresh","_useRunsFilterInput","useRunsFilterInput","onChange","button","activeFiltersJsx","_usePortalSlot","reactNode","_React$useState","_React$useState2","targetEl","setTargetEl","e","document","createElement","createPortal","usePortalSlot","_usePortalSlot2","filtersPortal","filtersSlot","actionBar","Page","PageHeader","Heading","right","QueryRefreshCountdown","horizontal","vertical","border","side","width","color","Alert","QueueDaemonAlert","RunsQueryRefetchContext","refetch","Loading","allowStaleData","renderError","badRequest","networkError","statusCode","left","NonIdealState","icon","description","message","_Fragment","StickyTableContainer","$top","RunTable","slice","actionBarComponents","belowActionBarComponents","ButtonLink","onClick","style","marginTop","CursorHistoryControls","RUN_TABLE_RUN_FRAGMENT","QUEUE_DAEMON_STATUS_QUERY","pageTitle","InstancePageContext","daemonHealth","daemonStatus","required","healthy","options","cursorStack","setCursorStack","_useQueryPersistedSta","useQueryPersistedState","queryKey","_useQueryPersistedSta2","cursor","setCursor","queryVars","limit","skip","notifyOnNetworkStatusChange","resultArray","hasPrevCursor","hasNextCursor","popCursor","nextStack","pop","advanceCursor","nextCursor","reset","_props$allowStaleData","_props$queryResult","blankLoading","setBlankLoading","isLoading","Object","keys","timer","setTimeout","clearTimeout","ERROR_CODES_TO_SURFACE","errorCodeToMessage","LoadingSpinner","isPage","grow","height","defaultProps","_ref$$top","onClose","backgroundColor","borderColor","iconColor","textColor","AlertContainer","background","$borderColor","$textColor","Group","spacing","Icon","name","AlertTitle","AlertDescription","ButtonWrapper","CursorPaginationControls","CursorControlsContainer","Button","disabled","rightIcon","className","tags","PageHeaderContainer","top","bottom","wrap","module","exports","array","setter","iteratee","accumulator","index","baseEach","require","collection","key","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","createAggregator"],"sourceRoot":""}