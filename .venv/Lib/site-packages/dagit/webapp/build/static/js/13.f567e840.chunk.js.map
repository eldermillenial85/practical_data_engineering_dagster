{"version":3,"file":"static/js/13.f567e840.chunk.js","mappings":"+QA2EIA,E,gVCtESC,EAIRC,EAAAA,MAAW,SAAAC,GAAuC,IAArCC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAUC,EAAaH,EAAbG,cAC3BC,EAA6C,CACjD,CAACC,GAAIC,EAAAA,GAAAA,KAAqBC,KAAM,aAAcC,QAAS,aACvD,CAACH,GAAIC,EAAAA,GAAAA,UAA0BC,KAAM,kBAAmBC,QAAS,mBAG9DL,GACHC,EAAQK,KAAK,CACXJ,GAAIC,EAAAA,GAAAA,gBACJC,KAAM,QACNC,QAAS,eAIb,IAAME,EAAcX,EAAAA,SAAc,kBAAM,IAAIY,IAAI,CAACV,GAAO,GAAE,CAACA,IACrDW,EAAUb,EAAAA,aAAkB,SAACM,GAAkB,OAAKH,EAASG,EAAG,GAAE,CAACH,IAEzE,OAAOW,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACJ,YAAaA,EAAaN,QAASA,EAASQ,QAASA,GAC3E,ICnBMG,EAAU,IAKVC,EAA2B,SAACC,GAAU,OAC1CA,EAAK,KAAcC,EAAAA,EAAAA,IAAkBD,GAAG,GAAAE,QAAOF,EAAK,KAAMG,QAAQ,GAAE,IAAI,EACpEC,EAAwB,SAACJ,GAAU,OACvCA,EAAK,KAAcC,EAAAA,EAAAA,IAAkBD,GAAG,GAAAE,QAAOF,EAAK,KAAMG,QAAQ,GAAE,IAAI,EACpEE,EAAwB,SAACL,GAAU,OACvCA,EAAK,OAAeC,EAAAA,EAAAA,IAAkBD,GAAG,GAAAE,OAAMI,KAAKC,MAAMP,EAAKF,GAAQ,IAAI,EACvEU,EAAsB,SAACR,GAAU,SAAAE,OAAQI,KAAKC,MAAMP,EAVzC,MAUuD,MAUlES,EAAc,CAClB,CACEC,eAAgB,IAChBC,WAAYZ,GAEd,CACEW,eAAgB,IAChBC,WAAYP,GAEd,CACEM,eAAgB,IAChBC,WAAYP,GAEd,CACEM,eAAgB,IAChBC,WAAYP,GAEd,CACEM,eAAgB,IAChBC,WAAYP,GAEd,CACEM,eAAgB,IAChBC,WAAYP,GAEd,CACEM,eAAgB,KAChBC,WAAYN,GAEd,CACEK,eAAgB,IAChBC,WAAYN,GAEd,CACEK,eAAgB,IAChBC,WAAYN,GAEd,CACEK,eAAgB,KAChBC,WAAYN,GAEd,CACEK,eAAgB,KAChBC,WAAYH,GAEd,CACEE,eAAgB,MAChBC,WAAYH,GAEd,CACEE,eAAgB,MAChBC,WAAYH,GAEd,CACEE,eAAgB,MAChBC,WAAYH,IAiBHI,EAAsB,SAAH7B,GAOC,IAN/B8B,EAAK9B,EAAL8B,MACAC,EAAQ/B,EAAR+B,SACAC,EAAKhC,EAALgC,MACAC,EAAOjC,EAAPiC,QACAC,EAAalC,EAAbkC,cACAC,EAAUnC,EAAVmC,WAEMC,EAAS,aAAAjB,OAAgBkB,EAAAA,GAAaN,EAASO,KAAI,OACnDC,EAA2B,GAC3BC,EAA2B,GAE3BC,EAAUX,EACVY,EAAahB,EAAYiB,MAAK,SAACC,GAAC,OAAKA,EAAEjB,eAAiBc,EAfnC,EAeiE,IAC5F,GAAIC,EAOF,IANA,IAAOf,EAA8Be,EAA9Bf,eAAgBC,EAAcc,EAAdd,WACjBiB,EAAYlB,EAAiBc,EAE/BK,EAASvB,KAAKwB,MAAMhB,EAASO,KAAOO,GAAalB,EACjDqB,EAAQF,EAASL,EAEdO,EAAQjB,EAASO,KAAOP,EAASkB,OAGtC,GAFAH,GAAUnB,KACVqB,GAASH,GACGd,EAASO,KAAO,IAA5B,CAGA,IAAMY,EAAG,GAAA/B,OAAM2B,EAAO1B,QAAQ,IACxB+B,EAAQvB,EAAWkB,GACzBN,EAAM/B,MAAKI,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,OAAiBC,MAAO,CAACf,KAAMU,EAAOZ,UAAAA,IAA1Bc,IACtCX,EAAM9B,MACJI,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,OAAiBC,MAAO,CAACf,KAAMU,EAAQM,GAAsBlB,UAAAA,GAAWmB,SACpFJ,GADwBD,GAL7B,CAYJ,OACEM,EAAAA,EAAAA,MAACC,EAAkB,CAAAF,SAAA,EACjBC,EAAAA,EAAAA,MAACE,EAAuB,CAAAH,SAAA,CACrBhB,EACyB,IAAzBL,EAAcyB,SACb9C,EAAAA,EAAAA,KAAA,OAEEuC,UAAU,gBACVC,MAAO,CACLf,MAAOJ,EAAc,GAAMD,GAAWQ,EAAU,EAChDQ,OAAQf,EAAc,GAAMA,EAAc,IAAOO,EAAU,EAC3DL,UAAAA,GACAmB,UAEDrC,EAAAA,EAAAA,IAAkBgB,EAAc,GAAMA,EAAc,KARjD,sBAWPA,EAAc0B,KAAI,SAAC3C,EAAI4C,GACtB,IAAMC,GAAS7C,EAAKgB,GAAWQ,EACzBsB,EACI,IAARF,GAAaC,EA7DA,GA6D2B/B,EAASO,MAAQ,GAAyB,EAEpF,OACEzB,EAAAA,EAAAA,KAAA,OAEEuC,UAAU,iBACVC,MAAO,CAACf,KAAMwB,EAAQC,EAAa3B,UAAAA,GAAWmB,SAE7CvC,EAAyBC,EAAKgB,IAAQ,aAAAd,OAJrB0C,GAOxB,QAEFL,EAAAA,EAAAA,MAACQ,EAAuB,CAACX,MAAO,CAACJ,MAAOlB,EAASkB,MAAOgB,OAAQlC,EAASkC,QAAQV,SAAA,CAC9Ef,EACAN,EAAc0B,KAAI,SAAC3C,EAAI4C,GAAG,OACzBhD,EAAAA,EAAAA,KAAA,OACEuC,UAAU,iBAEVC,MAAO,CAACf,MAAOrB,EAAKgB,GAAWQ,GAAmB,IAARoB,GAAa,EAAI,GAAIzB,UAAAA,IAAW,aAAAjB,OADxD0C,GAElB,IAEH7B,EAAQC,IACPpB,EAAAA,EAAAA,KAAA,OACEuC,UAAU,aACVC,MAAO,CACLf,MAAON,EAAQC,GAAWQ,EAC1BQ,MAAO1B,KAAK2C,IAAI/B,EAAWc,MAAOlB,EAASkB,QAAUjB,EAAQC,GAAWQ,EAAU,IAClFL,UAAAA,UAOd,EAEMqB,EAAqBU,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,0CAAAC,YAAA,eAAVF,CAAU,8kBAlGZ,GADA,GA4GFG,EAAAA,GAAgCA,EAAAA,GAI1CC,EAAAA,EAAAA,QACKA,EAAAA,EAAAA,QAKJC,GACID,EAAAA,EAAAA,QAKKD,EAAAA,GAKMC,EAAAA,EAAAA,QAOXA,EAAAA,EAAAA,OACKD,EAAAA,IAOjBZ,EAA0BS,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,+CAAAC,YAAA,eAAVF,CAAU,+JAhJjB,GAoJTI,EAAAA,EAAAA,MAELA,EAAAA,EAAAA,QAEME,EAAAA,EAAAA,UACYF,EAAAA,EAAAA,aAIvBP,EAA0BG,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,+CAAAC,YAAA,eAAVF,CAAU,sFA7JjB,I,iCCxFZO,EAGR3E,EAAAA,MAAW,SAAC4E,GACf,OACEnB,EAAAA,EAAAA,MAACoB,EAAmB,CAClBC,WAAYN,EAAAA,EAAAA,QACZnB,UAAU,kCACV0B,YAAa,SAACC,GACZ,IAEIC,EAFEC,EAAOF,EAAEG,cAAcC,QAAQ,eAAgBC,wBAInDJ,EADED,EAAEM,kBAAkBC,aAAeP,EAAEM,OAAOE,UAAUC,SAAS,qBACtDT,EAAEU,MAEFR,EAAK3C,KAAQqC,EAAM1E,MAAQ,IAAOgF,EAAKhC,MAGpD,IAAMyC,EAAW,SAACX,GAChB,IAAMY,EAAYhB,EAAM1E,OAAS8E,EAAEU,MAAQT,IAAa,IAAMC,EAAKhC,OACnE0B,EAAMzE,SAASqB,KAAK2C,IAAI,EAAG3C,KAAKqE,IAAI,IAAKD,IAC3C,EAMAE,SAASC,iBAAiB,YAAaJ,GACvCG,SAASC,iBAAiB,WANR,SAAZC,EAAahB,GACjBW,EAASX,GACTc,SAASG,oBAAoB,YAAaN,GAC1CG,SAASG,oBAAoB,UAAWD,EAC1C,GAGF,EAAExC,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,mBAAkBG,SAAA,EAC/B1C,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,sBAAsBC,MAAO,CAACf,KAAM,EAAG2D,MAAO,EAAGC,IAAK,MACrErF,EAAAA,EAAAA,KAAA,OACEuC,UAAU,yCACVC,MAAO,CAACf,KAAM,EAAG2D,MAAM,GAAD9E,OAAK,IAAMwD,EAAM1E,MAAK,KAAKiG,IAAK,SAG1DrF,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,qBACfvC,EAAAA,EAAAA,KAAA,QACEuC,UAAU,oBACVC,MAAO,CAACf,KAAK,QAADnB,OAAUwD,EAAM1E,MAAK,aACjCkG,SAAU,MAIlB,IAEMvB,EAAsBT,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kCAAAC,YAAA,eAAVF,CAAU,QAClCiC,EAAAA,I,WCpDEC,EAAoB,SAACC,GAAmB,OAC5CA,IAAgBhG,EAAAA,GAAAA,MAChBgG,IAAgBhG,EAAAA,GAAAA,WAChBgG,IAAgBhG,EAAAA,GAAAA,gBACZgG,EACAhG,EAAAA,GAAAA,eAA+B,EJ8D/BiG,EAAuB,uBAQtB,SAASC,GAA6BC,GAA6C,IAAnBC,IAASC,UAAAhD,OAAA,QAAAiD,IAAAD,UAAA,KAAAA,UAAA,GAC9EE,aAAahH,GAET6G,EACF7G,EAAiBiH,YAAW,kBAAMN,GAA6BC,GAAW,EAAM,GAAE,KAElFZ,SAASkB,cAAc,IAAIC,YAAYT,EAAsB,CAACU,OAAQR,IAE1E,CAsBO,IAAMS,GAAwC,SAACvC,GACpD,IAAOwC,EAA6DxC,EAA7DwC,MAAOC,EAAsDzC,EAAtDyC,eAAgBC,EAAsC1C,EAAtC0C,QAASC,EAA6B3C,EAA7B2C,UAAWC,EAAkB5C,EAAlB4C,eAClDC,GInGOC,EAAAA,EAAAA,GAVoB,2BAUsBpB,GJmGNqB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA0B/H,EAAAA,UAAe,kBAAAgI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EACpCC,EAAAA,IACAX,GAAO,IACVO,KAAAA,GAAI,IACHK,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAJII,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAMhBG,EAAerI,EAAAA,OAAsC,MACrDsI,EAAqBtI,EAAAA,OAAuC,MAC5DuI,GAAgBC,EAAAA,EAAAA,GAAcpB,EAAOG,EAAUkB,OAC/CC,EAAe1I,EAAAA,SACnB,iBAAO,CACL2I,MAAOR,EAAMS,oBAAsBL,EAAcM,IAAMzB,EACvDS,KAAMM,EAAMN,KACb,GACD,CAACT,EAAOmB,EAAcM,IAAKV,EAAMS,oBAAqBT,EAAMN,OAGxDiB,EAAS9I,EAAAA,SAAc,WAC3B,IAAM+I,EAAQ,SAACC,GAAoB,OAAKA,EAAGnF,KAAI,SAACoF,GAAC,OAAKA,EAAEC,IAAI,IAAEC,KAAK,IAAK,EASxE,OAPGb,EAAmBc,SACpBL,EAAMT,EAAmBc,QAAQT,SAAWI,EAAML,EAAaC,QAC/DL,EAAmBc,QAAQvB,OAASa,EAAab,OAEjDQ,EAAae,SAAUC,EAAAA,EAAAA,IAAYX,GACnCJ,EAAmBc,QAAUV,GAExBL,EAAae,OACtB,GAAG,CAACV,IAEEY,EAAgBtJ,EAAAA,aAAkB,SAACuJ,GACvCnB,GAAS,SAACgB,GAAO,OAAApB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUoB,GAAYG,EAAO,GAChD,GAAG,IAEGC,EAAexJ,EAAAA,aACnB,SAAC6H,GACCyB,EAAc,CAACzB,KAAAA,IACfC,EAAQD,EACV,GACA,CAACC,EAASwB,IAGNG,EAAgBzJ,EAAAA,aACpB,SAACyI,GACCpB,EAAeoB,GAAS,IAC1B,GACA,CAACpB,IAGGqC,EAAoB1J,EAAAA,aACxB,SAAC2J,GACC,IAAMlB,EAAK,IAAArH,OAAOuI,EAAO,KACzBF,EAAclC,EAAUkB,QAAUA,EAAQA,EAAQ,IACpD,GACA,CAACgB,EAAelC,EAAUkB,QAG5B,OACEhF,EAAAA,EAAAA,MAACmG,GAAmB,CAAApG,SAAA,EAClBC,EAAAA,EAAAA,MAACoG,EAAAA,GAAgB,CAAArG,SAAA,EACf1C,EAAAA,EAAAA,KAACf,EAAqB,CACpBG,MAAOiI,EAAMN,KACb1H,SAAUqJ,EACVpJ,cAAe+H,EAAM/H,gBAEtB+H,EAAMN,OAAStH,EAAAA,GAAAA,kBACdkD,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACiJ,EAAAA,GAAa,KACdjJ,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACJ,MAAO,KAAKM,UACvB1C,EAAAA,EAAAA,KAAC6D,EAAU,CAACzE,MAAOiI,EAAM6B,KAAM7J,SAAU,SAAC8J,GAAC,OAAKX,EAAc,CAACU,KAAMC,GAAG,OAE1EnJ,EAAAA,EAAAA,KAACiJ,EAAAA,GAAa,KACdjJ,EAAAA,EAAAA,KAACoJ,EAAAA,EAAQ,CACP5G,MAAO,CAAC6G,aAAc,GACtB/G,MAAM,yBACNgH,QAASjC,EAAMkC,YACflK,SAAU,SAAC6E,GAAsC,OAC/CsE,EAAc,CAACe,YAAarF,EAAEM,OAAO8E,SAAS,QAKtDtJ,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACgH,KAAM,KAClB9C,MAEH1G,EAAAA,EAAAA,KAACyJ,IAAevC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVpD,GAAK,IACT0C,SAAOU,EAAAA,EAAAA,GAAA,GAAMG,GACbW,OAAQA,EACR1B,MAAOA,EACPqC,cAAeA,EACfC,kBAAmBA,EACnBvJ,SAAU,kBACRmJ,EAAc,CACZV,qBAAsBT,EAAMS,qBAC5B,OAKZ,EAWM2B,GAAkB,SAAC3F,GACvB,IAAA4F,GAAqDC,EAAAA,EAAAA,KAA9CzI,EAAQwI,EAARxI,SAAU0I,EAAcF,EAAdE,eAAgBC,EAAgBH,EAAhBG,iBACjCC,EAA0C5K,EAAAA,SAA8B,MAAK6K,GAAAjD,EAAAA,EAAAA,GAAAgD,EAAA,GAAtEE,EAAWD,EAAA,GAAEE,EAAkBF,EAAA,GACtCG,EAAsChL,EAAAA,SAA8B,MAAKiL,GAAArD,EAAAA,EAAAA,GAAAoD,EAAA,GAAlEE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA0BpL,EAAAA,UAAuB,kBAAM4E,EAAMyG,iBAAmBC,KAAKC,KAAK,IAACC,GAAA5D,EAAAA,EAAAA,GAAAwD,EAAA,GAApFnJ,EAAKuJ,EAAA,GAAEC,EAAQD,EAAA,GACflE,EAAgC1C,EAAhC0C,QAASoE,EAAuB9G,EAAvB8G,SAAUnE,EAAa3C,EAAb2C,UACpBoE,EAAmB3L,EAAAA,OAA4B,MAE9C4L,EAAiB5L,EAAAA,WAAiB6L,EAAAA,GAAlCD,cAEPE,EAAyC9L,EAAAA,WAAiB+L,EAAAA,IAAnDC,EAAYF,EAAZE,aAAcC,EAAQH,EAARG,SAAUC,EAAMJ,EAANI,OACzBC,GAAiBF,GAA6B,cAAjBD,GAAgCE,IAAWE,UAAUC,OAKpFC,EAAWC,EAAAA,GACXvK,EAASkB,OAASwI,GAAYA,EAASc,oBAGzCF,EAFyB9K,KAAK2C,IAAI,EAAGnC,EAASkB,MAAQ,KACpC1B,KAAK2C,IAAI,EAAGlC,EAAQyJ,EAASc,oBAIjD,IAAMzK,EAAQP,KAAKiL,IACjBjL,KAAKkL,IAAIJ,IAAc9K,KAAKkL,IAAIC,EAAAA,IAAanL,KAAKkL,IAAIJ,IAAa,IAAOhF,EAAQ0C,MAG9E4C,EAAU5M,EAAAA,aAAkB,WAChCyL,EAAS7G,EAAMyG,iBAAmBC,KAAKC,OACvCI,EAAiBvC,QAAUyD,sBAAsBD,EACnD,GAAG,CAAChI,EAAMyG,kBAEJyB,EAAmB,OAARpB,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,SAI3B9M,EAAAA,WAAgB,YACA,IAAV+B,GAAeoK,GAAiBW,IAClCnB,EAAiBvC,SAAW2D,qBAAqBpB,EAAiBvC,SAIhE0D,GACFrB,EAASqB,EAEb,GAAG,CAAC/K,EAAOoK,EAAeW,IAI1B9M,EAAAA,WAAgB,WAEd,OADA2L,EAAiBvC,QAAUyD,sBAAsBD,GAC1C,WACLjB,EAAiBvC,SAAW2D,qBAAqBpB,EAAiBvC,QACpE,CACF,GAAG,CAACwD,IAIJ5M,EAAAA,WAAgB,WACd,IAAMgN,EAAW,SAAChI,GAAc,OAAKmG,EAAenG,EAAEkC,OAAQ,EAE9D,OADApB,SAASC,iBAAiBS,EAAsBwG,GACzC,kBAAMlH,SAASG,oBAAoBO,EAAsBwG,EAA2B,CAC7F,IAKA,IAAMlE,GAASmE,EAAAA,EAAAA,IACbrI,EAAMkE,OACNxB,EACAoE,GAAYwB,EAAAA,GACZnL,EACAE,GAEIG,EAAa,CACjBc,MAAO1B,KAAK2C,IAAGgJ,MAAR3L,KAAI,CAAK,GAACJ,QAAAgM,EAAAA,EAAAA,GAAKtE,EAAOuE,MAAMxJ,KAAI,SAACyJ,GAAC,OAAKA,EAAEC,EAAID,EAAEpK,MAAQsK,EAAAA,EAAa,OAC3EtJ,OAAQ1C,KAAK2C,IAAGgJ,MAAR3L,KAAI,CAAK,GAACJ,QAAAgM,EAAAA,EAAAA,GAAKtE,EAAOuE,MAAMxJ,KAAI,SAACyJ,GAAC,OAAKG,EAAAA,GAAYH,EAAEI,EAAIC,EAAAA,EAAaC,EAAAA,CAAY,QAG5F5N,EAAAA,WAAgB,WACd,IAAM6N,EAAO/E,EAAOuE,MAAMzK,MAAK,SAAC0K,GAAC,OAAK/F,EAAUuG,KAAKC,SAAST,EAAEO,KAAK3E,KAAK,IAC1E,GAAK2E,EAAL,CAGA,IAAMG,EAASC,GAAaJ,GACtBN,GAAKS,EAAOE,KAAOF,EAAOG,MAAQ,EAAInM,EAASkB,MAAQ,EACvDwK,GAAKM,EAAOI,KAAOJ,EAAOK,MAAQ,EAAIrM,EAASkC,OAAS,EAC9DyG,EAAiB,CAACpI,KAAMgL,EAAGpH,IAAKuH,IAAI,EAJpC,CAKF,GAAG,CAACnG,IAEJ,IAAMpF,GAA0B,GAKhC,GAJIyC,EAAM0J,aACRnM,GAAczB,KAAKkE,EAAM0J,aAGvBpD,EACF/I,GAAczB,KAAKwK,QACd,GAAI3D,EAAUuG,KAAKlK,OAAS,EAAG,CACpC,IAGM2K,GAHehH,EAAUuG,KAC5BjK,KAAI,SAAC8F,GAAO,OAAa,OAAR+B,QAAQ,IAARA,OAAQ,EAARA,EAAU8C,MAAM7E,EAAQ,IACzC8E,QAAO,SAAClB,GAAC,YAA+B1G,IAAN0G,CAAe,IACXmB,MAAK,SAACC,EAAGrB,GAAC,OACjDqB,EAAEC,OAAStB,EAAEsB,MAAQD,EAAEC,MAAQtB,EAAEsB,MAAQ,CAAC,IAEtCC,GAAYN,GAAoB,GAChCO,GAAWP,GAAoBA,GAAoB3K,OAAS,GACrD,OAATiL,SAAS,IAATA,IAAAA,GAAWD,OACbzM,GAAczB,KAAKmO,GAAUD,OAEnB,OAARE,SAAQ,IAARA,IAAAA,GAAUC,KACZ5M,GAAczB,KAAKoO,GAASC,IAEhC,CAEA,IAAMC,GAAsBhN,EAASkB,MAAQ,EAEvC+L,IACJxL,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,CACG8D,EAAQO,OAAStH,EAAAA,GAAAA,iBAAkCyO,KAClDlO,EAAAA,EAAAA,KAACgB,EAAmB,CAClBC,MAAOA,EACPC,SAAUA,EACVI,WAAYA,EACZF,SAAiB,OAARwJ,QAAQ,IAARA,OAAQ,EAARA,EAAUc,oBAAqB,EACxCrK,cAAeA,GACfF,MAAOA,KAGXnB,EAAAA,EAAAA,KAAA,OAAAkH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAK1E,MAAO,CAAC4L,SAAU,SAAU5E,KAAM,IAAQI,GAAc,IAAAlH,UAC3D1C,EAAAA,EAAAA,KAAA,OAAKwC,OAAK0E,EAAAA,EAAAA,GAAA,CAAGmH,SAAU,WAAYhF,aAAc,IAAO/H,GAAYoB,SACjEwL,KACClO,EAAAA,EAAAA,KAACsO,GAA0B,CACzB9H,QAASA,EACToE,SAAUA,GAAYwB,EAAAA,GACtBpE,OAAQA,EACRgC,YAAaA,EACbuE,aAAc9H,EAAUuG,KACxB9L,SAAUA,EACV+I,mBAAoBA,EACpBuE,YAAa1K,EAAM0K,YACnB5F,kBAAmB9E,EAAM8E,0BAMjCjG,EAAAA,EAAAA,MAAC8L,GAAwB,CAAA/L,SAAA,CACtB2I,GACCrL,EAAAA,EAAAA,KAAC0O,GAAgB,CAAAhM,UACf1C,EAAAA,EAAAA,KAAC2O,EAAAA,EAAG,CAACnF,KAAM,CAACoF,eAAgB,gBAAiBC,OAAQ,CAACC,OAAQ,IAAIpM,UAChEC,EAAAA,EAAAA,MAACoM,EAAAA,EAAK,CACJC,UAAU,MACVC,QAAS,EACTC,WAAU,GAAA5O,OAAKoD,EAAAA,EAAAA,UAAgB,MAC/ByL,QAAS,CAACC,SAAU,EAAGC,WAAY,IACnCC,WAAW,aAAY5M,SAAA,EAEvB1C,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,UAAUoH,MAAO9L,EAAAA,EAAAA,aAC5Bf,EAAAA,EAAAA,MAAA,OAAKH,MAAO,CAACiN,SAAU,QAASC,WAAY,SAAUtB,SAAU,UAAU1L,SAAA,EACxE1C,EAAAA,EAAAA,KAAA,UAAA0C,SAAQ,sCACR1C,EAAAA,EAAAA,KAAA,QAAA0C,SAAA,2DAAApC,OAC8DwK,EAAa,qCAMjF,MACJnI,EAAAA,EAAAA,MAACgN,GAAyB,CAACnG,KAAM,CAACwF,UAAW,MAAOM,WAAY,SAAUM,IAAK,IAAIlN,SAAA,EACjF1C,EAAAA,EAAAA,KAAC6P,EAAAA,EAAe,CACdC,MAAOhM,EAAMwC,MACblH,MAAO0E,EAAM2C,UAAUkB,MACvBoI,YAAY,qBACZ1Q,SAAUyE,EAAM6E,cAChBqH,QAASpF,GAAWqF,EAAAA,EAAAA,IAAsBrF,EAAU5C,QAAUjC,EAC9DxD,UAAWkE,EAAUuG,KAAKlK,OAAS,EAAI,WAAa,MAEtD9C,EAAAA,EAAAA,KAACoJ,EAAAA,EAAQ,CACPE,QAAS9C,EAAQsB,oBACjBxF,MAAM,wBACNjD,SAAUyE,EAAMzE,oBAO1B,OAAOuL,GACL5K,EAAAA,EAAAA,KAACkQ,EAAAA,GAAmB,CAClBC,WAAW,cACXC,KAAK,aACLC,MAAOlC,GACPmC,oBAAqB,GACrBC,QACEvQ,EAAAA,EAAAA,KAACwQ,EAAAA,GAAgBtJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXpD,GAAK,IACT3C,MAAOA,EACPyJ,SAAUA,EACV6F,gBAAiB,SAACrI,GAAI,OAAK6B,EAAmB7B,EAAK,OAKzD+F,EAEJ,EAcMG,GAAwE,SAACxK,GAC7E,IAAO5C,EAAkE4C,EAAlE5C,SAAU8G,EAAwDlE,EAAxDkE,OAAQgC,EAAgDlG,EAAhDkG,YAAauE,EAAmCzK,EAAnCyK,aAAc3D,EAAqB9G,EAArB8G,SAAUpE,EAAW1C,EAAX0C,QACxDsJ,EAA4B,GAI5BY,EAAqB,SAACxD,GAAc,OACxCA,EAAOG,KAAOnM,EAASO,KAAOP,EAASkB,OACvC8K,EAAOE,KAAOlM,EAASO,MACvByL,EAAOK,KAAOrM,EAASmE,IAAMnE,EAASkC,QACtC8J,EAAOI,KAAOpM,EAASmE,GAAI,EAKvBsL,EAA+C,CAAC,EA+FtD,OA7FInK,EAAQO,OAAStH,EAAAA,GAAAA,MACnBuI,EAAOuE,MAAMqE,SAAQ,SAACC,GACpBA,EAAInO,SAASkO,SAAQ,SAACE,EAAOC,GAAc,IAADC,EAClC9D,EAAS+D,GAAcJ,EAAKC,GAClC,GAAKJ,EAAmBxD,GAAxB,CAGA,IAAMgE,GAAiBlJ,EAAOuE,MAAMU,SAAS6D,GACvCK,IAAevG,KAA2C,QAAhCoG,EAACpG,EAAS8C,MAAMoD,EAAM/D,KAAK3E,aAAK,IAAA4I,GAA/BA,EAAiC3J,OAE5D+J,EAAkBT,EAAsBzD,EAAOE,OAAS,EAC9DuD,EAAsBzD,EAAOE,MAAQgE,EAAkB,EAEvDtB,EAAMlQ,MACJI,EAAAA,EAAAA,KAACqR,IAASnK,EAAAA,EAAAA,GAAA,CACRoK,WACe,OAAZ/C,QAAY,IAAZA,OAAY,EAAZA,EAActB,SAAS4D,EAAI9D,KAAK3E,QAAS4B,KAAiB6G,EAAI9D,KAAK3E,QACvD,OAAZmG,QAAY,IAAZA,OAAY,EAAZA,EAActB,SAAS6D,EAAM/D,KAAK3E,QAAS4B,KAAiB8G,EAAM/D,KAAK3E,KAE1EmJ,OAAQL,GAAiBC,EAEzBK,YAAaN,EACbO,OAAQL,GACJlE,GAAM,GAAA5M,OAHFuQ,EAAIxO,IAAG,KAAA/B,OAAIwQ,EAAMzO,IAAG,KAAA/B,OAAIyQ,IAdpC,CAoBF,GACF,IAGF/I,EAAOuE,MAAMqE,SAAQ,SAACC,GACpB,IAAM3D,EAASC,GAAa0D,GACtBa,EAASb,EAAIzO,QAAUuP,EAAAA,GACxBjB,EAAmBxD,IAIxB4C,EAAMlQ,MACJ+C,EAAAA,EAAAA,MAAA,OAEE,eAAckO,EAAI9D,KAAK3E,KACvBrI,QAAS,SAAC6R,GAA0B,OAAK9N,EAAM0K,YAAYqC,EAAI9D,KAAK3E,KAAMwJ,EAAI,EAC9EC,cAAe,kBAAM/N,EAAM8E,kBAAkBiI,EAAI9D,KAAK3E,KAAK,EAC3D0J,aAAc,kBAAMhO,EAAMmG,mBAAmB4G,EAAI9D,KAAK3E,KAAK,EAC3D2J,aAAc,kBAAMjO,EAAMmG,mBAAmB,KAAK,EAClD1H,UAAS,4CAAAjC,OAEHoR,EAAS,MAAQ,MAAK,kBAAApR,OACtBiO,EAAatB,SAAS4D,EAAI9D,KAAK3E,OAAS,UAAS,kBAAA9H,OACjD0J,IAAgB6G,EAAI9D,KAAK3E,MAAQ,UAAS,kBAAA9H,QAC1C0R,EAAAA,EAAAA,IAAcnB,EAAI9D,KAAK3E,OAAS,WACtC5F,OAAK0E,EAAAA,EAAAA,GAAA,CACHzF,KAAMyL,EAAOG,KACbhI,IAAK6H,EAAOK,MAAQmE,EAASO,EAAAA,GAAmBC,EAAAA,IAChD9P,MAAOsP,EAASS,EAAAA,GAAetB,EAAIzO,QAChCgQ,EAAAA,EAAAA,IAAYvB,EAAIxJ,MAAO,CAACuD,SAAAA,EAAUpE,QAAAA,KACrC9D,SAAA,CAEDmO,EAAIxJ,QAAUgL,EAAAA,GAAAA,SAAqBrS,EAAAA,EAAAA,KAACsS,EAAAA,EAAO,CAACC,QAAQ,mBAAiBxM,EACrEyM,GAAkB3B,KApBdA,EAAIxO,KAuBf,IAEImE,EAAQO,OAAStH,EAAAA,GAAAA,iBAGnBuI,EAAOyK,QACJ1P,KAAI,SAAC2P,EAAQ1P,GAAG,MAAM,CAAC0P,OAAAA,EAAQ1P,IAAAA,EAAKkK,OAAQC,GAAauF,GAAQ,IACjE/E,QAAO,SAAAxO,GAAA,IAAE+N,EAAM/N,EAAN+N,OAAM,OAAMwD,EAAmBxD,EAAO,IAC/CU,MAAK,SAACC,EAAGrB,GAAC,OAAKqB,EAAEX,OAAOG,KAAOb,EAAEU,OAAOG,IAAI,IAC5CuD,SAAQ,SAAA+B,GAA4B,IAA1BD,EAAMC,EAAND,OAAQxF,EAAMyF,EAANzF,OAAQlK,EAAG2P,EAAH3P,IACnB0O,EAASgB,EAAOtQ,QAAUuP,EAAAA,GAEhC7B,EAAMlQ,MACJI,EAAAA,EAAAA,KAAA,OAEE,eAAc0S,EAAOrQ,IACrBE,UAAS,4CAAAjC,OAEPoR,EAAS,aAAe,mBAC1BlP,MAAO,CACLf,KAAMyL,EAAOG,KACbhI,IAAK6H,EAAOK,MAAQmE,EAASO,EAAAA,GAAmBC,EAAAA,IAChD9P,MAAOsP,EAASS,EAAAA,GAAeO,EAAOtQ,OACtCM,UAEF1C,EAAAA,EAAAA,KAAA,WAXKgD,GAcX,KAGGhD,EAAAA,EAAAA,KAAAgJ,EAAAA,SAAA,CAAAtG,SAAGoN,GACZ,EAaM3C,GAAe,SAACU,GACpB,MAAO,CACLR,KAAMQ,EAAEpB,EACRc,KAAMZ,EAAAA,GAAYkB,EAAEjB,EAAIC,EAAAA,EACxBO,KAAMS,EAAEpB,EAAIoB,EAAEzL,MACdkL,KAAMX,EAAAA,GAAYkB,EAAEjB,EAAIC,EAAAA,EAAaA,EAAAA,EAEzC,EAOMoE,GAAgB,SAACpD,EAAkBrB,GACvC,GAAIA,EAAEI,EAAIiB,EAAEjB,EAAG,CAAC,IAADgG,EACJ,CAACpG,EAAGqB,GAAZA,EAAC+E,EAAA,GAAEpG,EAACoG,EAAA,EACP,CAEA,IACMC,EADShF,EAAEzL,QAAUuP,EAAAA,GACDM,EAAAA,GAAmBE,EAAAA,GAAe,EAAItF,EAAAA,EAAa,EAEvEiG,EAAStG,EAAEpK,QAAUuP,EAAAA,GACrBoB,EAAWD,EAASb,EAAAA,GAAmBE,EAAAA,GAAe,EAAItF,EAAAA,EAAa,EAEvEmG,EAAWxG,EAAEI,IAAMiB,EAAEjB,EAe3B,MAAO,CAACS,KAZK3M,KAAKqE,IAAI8I,EAAEpB,EAAIoB,EAAEzL,MAAOoK,EAAEC,EAAID,EAAEpK,OAY/BmL,KAXDZ,EAAAA,IAAwBkB,EAAEjB,EAAIC,EAAAA,EAAagG,GAWpCzF,KAPP4F,EACTtS,KAAK2C,IAAIwK,EAAEpB,EAAGD,EAAEC,GAChB/L,KAAK2C,IAAIwK,EAAEpB,EAAIoB,EAAEzL,MAAQ,EAAGoK,EAAEC,GAAKqG,EAASX,EAAAA,GAAe3F,EAAEpK,OAAS,GAKhDkL,KAJb0F,EACTrG,EAAAA,GAAYH,EAAEI,EAAIC,EAAAA,EAAakG,EAC/BpG,EAAAA,GAAYH,EAAEI,EAAIC,EAAAA,GAAciG,EAASb,EAAAA,GAAmBC,EAAAA,IAGlE,EAMMb,GAAYnS,EAAAA,MAChB,SAAA+T,GAcgB,IAbd5F,EAAI4F,EAAJ5F,KACAE,EAAI0F,EAAJ1F,KACAH,EAAI6F,EAAJ7F,KACAE,EAAI2F,EAAJ3F,KACAiE,EAAM0B,EAAN1B,OACAD,EAAQ2B,EAAR3B,SACAG,EAAMwB,EAANxB,OACAD,EAAWyB,EAAXzB,YAOM0B,EAAM,GAAA5S,OAAM6S,EAAAA,GAAS,OAAA7S,OAAMiR,EAAS,SAAW,QAAO,KAAAjR,OAC1DgR,EAAW5N,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,SAGxB0P,EAAsBhG,EAAQqE,EAAS,GAAM0B,EAAAA,GAEnD,OACExQ,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAAA,OACEuC,UAAU,OACVC,MAAO,CACLY,OAAQ,EACR3B,KAAM4L,EACNjL,MAAOoP,EAAc,GAAK4B,EAAsB/F,EAChDhI,IAAKkI,EAAO,EACZ8F,UAAWH,EACXI,OAAQhC,EAAW,IAAM,KAG5B/D,IAASD,IAASkE,IACjBxR,EAAAA,EAAAA,KAAA,OACEuC,UAAU,OACVC,MAAO,CACLJ,MAAO,EACPX,KAAM2R,EACN/N,IAAKkI,EAAO4F,EAAAA,GAAY,EACxB/P,OAAQkK,EAAOC,EACfgG,YAAaL,EACbI,OAAQhC,EAAW,IAAM,OAMrC,GACAkC,KAGF,SAAShB,GAAkB3B,GACzB,KAAIA,EAAIzO,OAASqR,EAAAA,IAAjB,CAKA,IAAMC,EAAe,GAAK7C,EAAIxJ,QAAUgL,EAAAA,GAAAA,QAAqB,GAAK,GAC5DsB,GAAa9C,EAAIzO,MAAQsR,GAAgB,IAE/C,OAAOE,EAAAA,EAAAA,IAAqB/C,EAAI9D,KAAK3E,KAAM,CAACuL,UAAAA,GAN5C,CAOF,CAKA,IAAM7K,GAAsBxF,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kCAAAC,YAAA,eAAVF,CAAU,87CAOtBI,EAAAA,EAAAA,MAMMD,EAAAA,GAA+BA,EAAAA,GACvCA,EAAAA,GAAiCA,EAAAA,GAKzBA,EAAAA,GAA+BA,EAAAA,GAexC0O,EAAAA,GACCA,EAAAA,GAEOA,EAAAA,GAAe,EAMtBtF,EAAAA,EAA4B,EAAfqF,EAAAA,GAMRtO,EAAAA,EAAAA,UAKGH,EAAAA,GAA+BA,EAAAA,GACvCA,EAAAA,GAAiCA,EAAAA,GAGrBC,EAAAA,EAAAA,QACIA,EAAAA,EAAAA,UAGJA,EAAAA,EAAAA,QAMpBmQ,EAAAA,EAQO1B,EAAAA,GACCA,EAAAA,GAEOA,EAAAA,GAAe,EAKtBtF,EAAAA,EAA4B,EAAfqF,EAAAA,GAILzO,EAAAA,GAA+BA,EAAAA,GACvCA,EAAAA,IAIGoJ,EAAAA,EAA4B,EAAfqF,EAAAA,IAAoB,GAK5CxD,GAAmBpL,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,+BAAAC,YAAA,eAAVF,CAAU,wDAGxBI,EAAAA,EAAAA,WAIL+K,GAA2BnL,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,uCAAAC,YAAA,eAAVF,CAAU,qGASrCqM,IAA4BrM,EAAAA,EAAAA,IAAOqL,EAAAA,GAAImF,WAAA,CAAAvQ,YAAA,wCAAAC,YAAA,eAAXF,CAAW,4FACbI,EAAAA,EAAAA,QAInBqQ,GAAyB,SAAHC,GAAA,IAAKC,EAAKD,EAALC,MAAK,OAC3CtR,EAAAA,EAAAA,MAACmG,GAAmB,CAAApG,SAAA,EAClB1C,EAAAA,EAAAA,KAAC+I,EAAAA,GAAgB,KACjB/I,EAAAA,EAAAA,KAACkQ,EAAAA,GAAmB,CAClBC,WAAW,cACXC,KAAK,aACLC,OACErQ,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACqM,OAAQ,OAAQqF,UAAW,KAAKxR,UAC3C1C,EAAAA,EAAAA,KAACsS,EAAAA,EAAO,CAACC,QAAQ,cAGrBjC,oBAAqB,GACrBC,QACEvQ,EAAAA,EAAAA,KAACwQ,EAAAA,EAAgB,CACflK,MAAO,GACPsE,SAAUwB,EAAAA,GACV3F,UAAW,CAACuG,KAAM,GAAIrF,MAAO,KAC7BsM,MAAOA,EACP9S,MAAO,QAIO,EAGXgT,GAAc,SAAHC,GAAA,IAAKC,EAAGD,EAAHC,IAAG,OAC9B1R,EAAAA,EAAAA,MAACmG,GAAmB,CAAApG,SAAA,EAClB1C,EAAAA,EAAAA,KAAC+I,EAAAA,GAAgB,CAACvG,MAAO,CAACoM,eAAgB,YAAYlM,UACpD1C,EAAAA,EAAAA,KAACsU,EAAAA,GAAe,CAACD,IAAKA,OAExBrU,EAAAA,EAAAA,KAACkQ,EAAAA,GAAmB,CAClBC,WAAW,cACXC,KAAK,aACLC,OACErQ,EAAAA,EAAAA,KAACuU,EAAAA,EAAa,CACZ7U,KAAK,gBACL8U,MAAM,aACNC,YAAY,wDACZC,QACE1U,EAAAA,EAAAA,KAAC2U,EAAAA,GAAI,CAACC,IAAIC,EAAAA,EAAAA,IAAoB,CAAC,CAACC,MAAO,SAAU1V,MAAO,YAAYsD,SAAC,uBAM3E4N,oBAAqB,GACrBC,QACEvQ,EAAAA,EAAAA,KAACwQ,EAAAA,EAAgB,CACflK,MAAO,GACPsE,SAAUwB,EAAAA,GACV3F,UAAW,CAACuG,KAAM,GAAIrF,MAAO,KAC7BsM,MAAOI,EAAI7U,GACX2B,MAAO,QAIO,C,8IKx1BX4H,EAAmBzF,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kCAAAC,YAAA,gBAAVF,CAAU,wRAKbI,EAAAA,EAAAA,YACbA,EAAAA,EAAAA,MAKZqR,EAAAA,IAeSC,EAAiB1R,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,gCAAAC,YAAA,gBAAVF,CAAU,6BAK3B2F,EAAgB3F,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,+BAAAC,YAAA,gBAAVF,CAAU,gB,kKCf1B2R,EAAoB,SAC/BC,EACAC,GAKA,IAG6BC,EAHvBC,EAA6C,CAAC,EAC9CC,EAAkBC,OAAOvI,KAAKmI,GAAqBK,GAAAC,EAAAA,EAAAA,GAEtCP,EAAKxH,OAAK,IAA7B,IAAA8H,EAAAE,MAAAN,EAAAI,EAAArN,KAAAwN,MAA+B,CAAC,IAArBC,EAAIR,EAAAhW,MACb,GAAIwW,EAAKC,OAASC,EAAAA,IAAAA,kBAA4B,CAC5C,IAAM9I,GAAO+I,EAAAA,EAAAA,IAAgCH,EAAKvT,IAAKiT,GAQvD,IAH4BM,EAAKI,OAAOC,OAAM,SAACC,GAAC,OAC9CA,EAAEC,UAAUF,OAAM,SAACP,GAAC,IAAAU,EAAA,OAAK/D,EAAAA,GAAAA,aAAmD,QAA/B+D,EAAKjB,EAAoBO,EAAErT,YAAI,IAAA+T,OAAA,EAA1BA,EAA4B/O,MAAK,GAAC,KAE1C,IAAhB2F,EAAKlK,OAAc,CAC7CuS,EAAgBO,EAAKvT,KAAO,CAACuT,EAAKvT,KAClC,QACF,CAIAgT,EAAgBO,EAAKvT,KAAI,GAAA/B,QAAAgM,EAAAA,EAAAA,GAAOU,GAAI,CAAE4I,EAAKvT,KAC7C,CACF,CAEA,OAAAgU,GAAAb,EAAAtR,EAAAmS,EAAA,SAAAb,EAAAc,GAAA,CACA,IAC6BC,EADvBC,EAA6C,CAAC,EAAEC,GAAAhB,EAAAA,EAAAA,GACnCP,EAAKxH,OAAK,IAA7B,IAAA+I,EAAAf,MAAAa,EAAAE,EAAAtO,KAAAwN,MAA+B,CAAC,IAEGe,EAFxBd,EAAIW,EAAAnX,MACPuX,EAAkBtB,EAAgBO,EAAKvT,MAAQ,CAACuT,EAAKvT,KAAKuU,GAAAnB,EAAAA,EAAAA,GAC9CkB,GAAe,IAAjC,IAAAC,EAAAlB,MAAAgB,EAAAE,EAAAzO,KAAAwN,MAAmC,CAAC,IAAzBtT,EAAGqU,EAAAtX,MACZoX,EAAUnU,GAAO,CACf+F,KAAM/F,EACN2T,OAAQ,GACRa,QAAS,GAEb,CAAC,OAAAR,GAAAO,EAAA1S,EAAAmS,EAAA,SAAAO,EAAAN,GAAA,CACH,CAGA,OAAAD,GAAAI,EAAAvS,EAAAmS,EAAA,SAAAI,EAAAH,GAAA,KAC6BQ,EAD7BC,GAAAtB,EAAAA,EAAAA,GACmBP,EAAKxH,OAAK,IAA7B,IAAAqJ,EAAArB,MAAAoB,EAAAC,EAAA5O,KAAAwN,MAA+B,CAAC,IAEGqB,EAFxBpB,EAAIkB,EAAA1X,MACPuX,EAAkBtB,EAAgBO,EAAKvT,MAAQ,CAACuT,EAAKvT,KAAK4U,GAAAxB,EAAAA,EAAAA,GAC9CkB,GAAe,IAAjC,IAAAM,EAAAvB,MAAAsB,EAAAC,EAAA9O,KAAAwN,MAAmC,CAAC,IACHuB,EADtB7U,EAAG2U,EAAA5X,MAAA+X,GAAA1B,EAAAA,EAAAA,GACQG,EAAKI,QAAM,IAA/B,IAAAmB,EAAAzB,MAAAwB,EAAAC,EAAAhP,KAAAwN,MAAiC,CAAC,IAAvByB,EAAKF,EAAA9X,MAERiY,EAAyC,CAAClB,UAAW,IAC3DK,EAAUnU,GAAM2T,OAAOpW,KAAKyX,GAG5B,IACsCC,EADtCC,GAAA9B,EAAAA,EAAAA,GACuB2B,EAAMjB,WAAS,IAAtC,IAAAoB,EAAA7B,MAAA4B,EAAAC,EAAApP,KAAAwN,MAAwC,CAAC,IAA9B6B,EAAQF,EAAAlY,MACbqY,EAAe,GAIjBA,EAHE7B,EAAKC,OAASC,EAAAA,IAAAA,mBAGDT,EAAgBmC,EAASnV,MAAQ,CAACmV,EAASnV,KAI3C,CACbmV,EAAS3B,OAASC,EAAAA,IAAAA,mBACd4B,EAAAA,EAAAA,IAAoBF,EAASnV,IAAKA,GAClCmV,EAASnV,KAEhB,IAEqCsV,EAFrCC,GAAAnC,EAAAA,EAAAA,GAEyBgC,GAAY,IAAtC,IAAAG,EAAAlC,MAAAiC,EAAAC,EAAAzP,KAAAwN,MAAwC,CAAC,IAA9BkC,EAAWF,EAAAvY,MACpB,GAAKoX,EAAUqB,GAAf,CAGAR,EAAUlB,UAAUvW,KAAK,CAACkY,MAAO,CAAC1P,KAAMyP,KACxC,IAAIE,EAA+CvB,EAAUqB,GAAchB,QAAQ,GAC9EkB,IACHA,EAAiB,CAACC,WAAY,IAC9BxB,EAAUqB,GAAchB,QAAQjX,KAAKmY,IAEvCA,EAAeC,WAAWpY,KAAK,CAC7BkY,MAAO,CAAC1P,KAAM/F,IARhB,CAUF,CAAC,OAAAgU,GAAAuB,EAAA1T,EAAAmS,EAAA,SAAAuB,EAAAtB,GAAA,CACH,CAAC,OAAAD,GAAAkB,EAAArT,EAAAmS,EAAA,SAAAkB,EAAAjB,GAAA,CACH,CAAC,OAAAD,GAAAc,EAAAjT,EAAAmS,EAAA,SAAAc,EAAAb,GAAA,CACH,CAAC,OAAAD,GAAAY,EAAA/S,EAAAmS,EAAA,SAAAY,EAAAX,GAAA,CACH,CAAC,OAAAD,GAAAU,EAAA7S,EAAAmS,EAAA,SAAAU,EAAAT,GAAA,CAED,OAAOf,OAAO0C,OAAOzB,EACvB,EAEa0B,GAAmCC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6M,+TC3G7CC,EAAehV,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,uCAAAC,YAAA,eAAVF,CAAU,yLAWzBiV,EAA0BjV,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kDAAAC,YAAA,eAAVF,CAAU,yGAUpCkV,EAAiBlV,EAAAA,GAAAA,OAAAA,WAAa,CAAAC,YAAA,yCAAAC,YAAA,eAAbF,CAAa,yRAUzBI,EAAAA,EAAAA,OAeE+U,EAAsB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAlT,UAAAhD,OAAAmW,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAArT,UAAAqT,GAkD/B,OAlD+BL,EAAAF,EAAAQ,KAAA/M,MAAAuM,EAAA,OAAAtY,OAAA2Y,KASjC5R,MAAQ,CACNgS,eAAe,GAChBP,EAEOQ,oBAAuDpa,EAAAA,YAAiB4Z,EAkChFS,OAAS,WACP,IAAOC,EAAYV,EAAKhV,MAAjB0V,SACPA,EAAWA,IAAaV,EAAKW,eAC/B,EAACX,CAAC,CAkBD,OAlBAY,EAAAA,EAAAA,GAAAjB,EAAA,EAAApW,IAAA,oBAAAjD,MAnCD,WACEua,KAAKC,gBACP,GAAC,CAAAvX,IAAA,qBAAAjD,MAED,WACEua,KAAKC,gBACP,GAAC,CAAAvX,IAAA,iBAAAjD,MAED,WACE,IAAM0R,EACJ6I,KAAKL,oBAAoBhR,SAAWqR,KAAKL,oBAAoBhR,QAAQuR,kBAEvE,GAAK/I,EAAL,CAIA,IAAMuI,EAC+B,kBAA5BM,KAAK7V,MAAMtB,MAAMY,QAAuB0N,EAAMgJ,aAAeH,KAAK7V,MAAMtB,MAAMY,OACnFiW,IAAkBM,KAAKtS,MAAMgS,eAC/BM,KAAKrS,SAAS,CAAC+R,cAAAA,GALjB,CAOF,GAAC,CAAAhX,IAAA,gBAAAjD,MAED,WACE,IAAM2a,EACJJ,KAAKL,oBAAoBhR,SAAWqR,KAAKL,oBAAoBhR,QAAQ0R,YACvED,IACEE,EAAAA,EAAAA,GAAgB,CACdC,MAAMla,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACkN,WAAY,YAAYhN,SAAEqX,KAEnD,GAAC,CAAA1X,IAAA,SAAAjD,MAOD,WACE,IAAMoD,GAAK0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOyS,KAAK7V,MAAMtB,OAAK,IAAE4L,SAAU,WAE9C,OACEzL,EAAAA,EAAAA,MAAA,OAAKH,MAAOA,EAAME,SAAA,EAChB1C,EAAAA,EAAAA,KAAA,OAAKma,IAAKR,KAAKL,oBAAoB5W,SAAEiX,KAAK7V,MAAMpB,YAC9CiX,KAAKtS,MAAMgS,eAAiBM,KAAK7V,MAAMsW,sBACvCzX,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACsY,EAAY,KACbtY,EAAAA,EAAAA,KAACuY,EAAuB,CAAA7V,UACtB1C,EAAAA,EAAAA,KAACwY,EAAc,CAACzY,QAAS4Z,KAAKJ,OAAO7W,SAAC,6BAMlD,KAAC+V,CAAA,CApEgC,CAASvZ,EAAAA,W,2GCtB/Bmb,EAA8D,SAAHlb,GAA0B,IAADmb,EAApBvN,EAAI5N,EAAJ4N,KAAMnC,EAAQzL,EAARyL,SAC3E2P,GAAWC,EAAAA,EAAAA,MACXC,EAAY1N,EAAK0N,UACvB,OAAQ1N,EAAK2N,YACX,IAAK,4BACH,OACE1a,EAAAA,EAAAA,KAAC2a,EAAc,CACbF,UAAWA,EACXG,MAAO7N,EAAK6N,MACZC,gBAAqB,OAAJ9N,QAAI,IAAJA,GAAqB,QAAjBuN,EAAJvN,EAAM+N,uBAAe,IAAAR,OAAjB,EAAJA,EAAuBO,gBACxCE,YAAahO,EAAKgO,YAClBhB,QAAShN,EAAK6N,WAAQ7U,EAAYgH,EAAKgN,UAI7C,IAAK,+BACH,OAAO/Z,EAAAA,EAAAA,KAACgb,EAAqB,CAACJ,MAAO7N,EAAK6N,MAAOb,QAAShN,EAAKgN,UAEjE,IAAK,0BACH,IAAKhN,EAAKlE,SAAW+B,EAASqQ,gBAC5B,OAAOjb,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,IAEzD,IAAMU,EAAeC,IAAAA,MAASb,EAASc,QACjCC,GAAYpU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbiU,GAAY,IACfI,QAAS,SACTC,KAAK,SAADlb,OAAWyM,EAAKlE,SACpBpC,UAAWsG,EAAKlE,UAEZ4S,EAAI,GAAAnb,OAAMia,EAASmB,SAAQ,KAAApb,OAAI8a,IAAAA,UAAaE,IAClD,OACEtb,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,EAAU/X,UAC1D1C,EAAAA,EAAAA,KAAC2b,EAAAA,GAA4B,CAC3BC,KAAM,CACJ,CACEtZ,MAAO,YACPuZ,MACE7b,EAAAA,EAAAA,KAAC2U,EAAAA,GAAI,CAACC,GAAI6G,EAAMjZ,MAAO,CAACgN,MAAO,WAAW9M,SAAC,+BAU3D,IAAK,4BACH,OACE1C,EAAAA,EAAAA,KAACkb,EAAc,CACbnB,QAAShN,EAAKgN,QACdU,UAAWA,EACXqB,WAAW,6BAIjB,IAAK,4BAsGL,IAAK,gBACL,IAAK,mBACL,IAAK,mBACL,IAAK,mBACL,IAAK,oBACL,IAAK,2BACL,IAAK,2BACL,IAAK,yBACL,IAAK,0BACH,OAAO9b,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,IA5G3D,IAAK,4BAiGL,IAAK,kBACH,OAAOza,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,EAAWsB,YAAY,YAhGlF,IAAK,0BACH,OACE/b,EAAAA,EAAAA,KAACkb,EAAc,CACbnB,QACEhN,EAAKgN,SAAWhN,EAAKiP,UAAUvH,YAAc,IAAM1H,EAAKiP,UAAUvH,YAAc,IAElFgG,UAAWA,EACXsB,YAAahP,EAAKiP,UAAUC,QAAU,UAAY,UAAUvZ,UAE5D1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAKiP,UAAUnB,oBAG/C,IAAK,2BACH,OACE7a,EAAAA,EAAAA,KAACkb,EAAc,CACbnB,QACEhN,EAAKgN,SAAWhN,EAAKiP,UAAUvH,YAAc,IAAM1H,EAAKiP,UAAUvH,YAAc,IAElFgG,UAAWA,EACXsB,YAAahP,EAAKiP,UAAUC,QAAU,UAAY,UAAUvZ,UAE5DC,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAKiP,UAAUnB,mBACzC7a,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAK8N,uBAIvC,IAAK,6BACH,OACE7a,EAAAA,EAAAA,KAACkb,EAAc,CACbnB,QAAShN,EAAKgN,QACdU,UAAWA,EACXsB,YAAahP,EAAKqP,kBAAkBH,QAAU,UAAY,UAAUvZ,UAEpE1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAKqP,kBAAkBvB,oBAGvD,IAAK,uBACH,OACE7a,EAAAA,EAAAA,KAACqc,EAAoB,CACnBtC,QAAShN,EAAKgN,QACduC,SAAUvP,EAAKuP,SACfzB,gBAAiB9N,EAAK8N,gBACtBJ,UAAWA,EACX7U,UAAWmH,EAAKnH,YAGtB,IAAK,mBACH,OACE5F,EAAAA,EAAAA,KAACqc,EAAoB,CACnBtC,QAAQ,GACRuC,SAAUvP,EAAKuP,SACfzB,gBAAiB9N,EAAK8N,gBACtBJ,UAAWA,EACX7U,UAAWmH,EAAKnH,YAGtB,IAAK,mCAoBL,IAAK,qBAEL,IAAK,mBAIL,IAAK,kBAEL,IAAK,oBACH,OAAO5F,EAAAA,EAAAA,KAACkb,EAAc,CAACT,UAAWA,EAAWV,QAAShN,EAAKgN,UA3B7D,IAAK,4BACH,OACE/Z,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,EAAU/X,UAC1D1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAKwP,gBAAgB1B,oBAGrD,IAAK,qBAML,IAAK,mBACH,OACE7a,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,EAAU/X,UAC1D1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAK8N,oBAOrC,IAAK,mBACH,OAAO7a,EAAAA,EAAAA,KAAC2a,EAAc,CAACF,UAAWA,EAAWG,MAAO7N,EAAK6N,QAK3D,IAAK,oBACH,OAAO5a,EAAAA,EAAAA,KAACkb,EAAc,CAACT,UAAWA,EAAWV,QAAShN,EAAKgN,QAASgC,YAAY,YAClF,IAAK,2BACL,IAAK,kBACH,OAAIhP,EAAK6N,OACA5a,EAAAA,EAAAA,KAAC2a,EAAc,CAACZ,QAAShN,EAAKgN,QAASa,MAAO7N,EAAK6N,MAAOH,UAAWA,KAEvEza,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,QAASU,UAAWA,EAAWsB,YAAY,WAalF,IAAK,mBACH,OAAO/b,EAAAA,EAAAA,KAAC2a,EAAc,CAACZ,QAAShN,EAAKgN,QAASU,UAAWA,IAC3D,IAAK,cACH,OAAI1N,EAAK6N,OACA5a,EAAAA,EAAAA,KAAC2a,EAAc,CAACZ,QAAShN,EAAKgN,QAASa,MAAO7N,EAAK6N,MAAOH,UAAWA,KAG5Eza,EAAAA,EAAAA,KAACkb,EAAc,CACbnB,QAAShN,EAAKgN,QACdU,UAAWA,EACXqB,WAAW,uBAAsBpZ,UAEjC1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAASpP,EAAK8N,oBAGrC,IAAK,kBACH,OAAO7a,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAAShN,EAAKgN,UACvC,IAAK,oBACH,IAAMoB,EAAeC,IAAAA,MAASb,EAASc,OAAQ,CAACmB,mBAAmB,IAC7DlB,GAAYpU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOiU,GAAY,IAAEI,QAAS,SAAUkB,WAAY1P,EAAKlE,UACrE6T,EAAU,GAAApc,OAAMia,EAASmB,SAAQ,KAAApb,OAAI8a,IAAAA,UAAaE,IAClDqB,GACJ3c,EAAAA,EAAAA,KAAC2U,EAAAA,GAAI,CAACC,GAAI8H,EAAYla,MAAO,CAACgN,MAAO,WAAW9M,SAAC,yBAI7CkZ,EAAO7O,EAAKlE,QACd,CACE,CACEvG,MAAO,gBACPuZ,KAAMc,IAGV,CACE,CACEra,MAAO,YACPuZ,MAAM7b,EAAAA,EAAAA,KAAAgJ,EAAAA,SAAA,CAAAtG,SAAGka,KAAKC,UAAU9P,EAAK+P,aAE/B,CACExa,MAAO,gBACPuZ,KAAMc,IAGd,OACE3c,EAAAA,EAAAA,KAACkb,EAAc,CAACT,UAAWA,EAAWV,QAAShN,EAAKgN,QAAQrX,UAC1D1C,EAAAA,EAAAA,KAAC2b,EAAAA,GAA4B,CAACC,KAAMA,MAG1C,QAGE,OAAOmB,EAAAA,EAAAA,IAAkBhQ,GAE/B,EAIMmO,EAOD,SAAHvI,GAAiE,IAA5DoH,EAAOpH,EAAPoH,QAASU,EAAS9H,EAAT8H,UAAWqB,EAAUnJ,EAAVmJ,WAAYC,EAAWpJ,EAAXoJ,YAAarZ,EAAQiQ,EAARjQ,SAClD,OACEC,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACgd,EAAAA,GAAe,CAAAta,SACb+X,IACCza,EAAAA,EAAAA,KAACid,EAAAA,EAAG,CACFC,OAAQnB,EACRvZ,MACEsZ,EACI,CACEqB,SAAU,QACV3N,MAAO,QACPN,WAAY4M,GAEd,CACEqB,SAAU,SAEjBza,UAEA0a,EAAAA,EAAAA,GAAuB3C,QAI9B9X,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACQ,QAAS,CAACE,WAAY,IAAK7M,MAAO,CAACgH,KAAM,GAAG9G,SAAA,CAC9CqX,EACArX,OAIT,EAEMiY,EAMD,SAAH/H,GAAmE,IAA9DmH,EAAOnH,EAAPmH,QAASa,EAAKhI,EAALgI,MAAOG,EAAWnI,EAAXmI,YAAaN,EAAS7H,EAAT6H,UAAWI,EAAejI,EAAfiI,gBACzCwC,EAAiB,KACjBC,EAAe,KACfC,EAAa,KACbC,EAAa,KAsCjB,OApCIzD,IACFsD,GACE1a,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAAA,QAAA0C,SAAOqX,KACP/Z,EAAAA,EAAAA,KAAA,aAKF4a,IACF0C,GAAetd,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,GAAApC,OAAKsa,EAAMb,YAK5Da,EAAM6C,MAAM3a,QACViY,IAAgB2C,EAAAA,IAAAA,iBAA+B9C,EAAM+C,WAAW7a,SAElEya,GAAavd,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,mBAAApC,OAAqBsa,EAAM6C,UAG1E7C,EAAM+C,WAAW7a,SACnB0a,EAAa5C,EAAM+C,WAAW5a,KAAI,SAAC6a,EAAWC,GAAK,OACjDlb,EAAAA,EAAAA,MAACzD,EAAAA,SAAc,CAAAwD,SAAA,CACZkb,EAAUE,eAAc,6IAGzB9d,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,GAAApC,OAAKsd,EAAUhD,MAAMb,WACxD6D,EAAUhD,MAAM6C,MAAM3a,QACrB9C,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,mBAAApC,OAAqBsd,EAAUhD,MAAM6C,SACvE,OAPeI,EAQJ,OAMrBlb,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACgd,EAAAA,GAAe,CAAAta,UACd1C,EAAAA,EAAAA,KAACid,EAAAA,EAAG,CAACc,SAAO,EAACb,OAAO,SAAQxa,UACzB0a,EAAAA,EAAAA,GAAuB3C,QAG5B9X,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACQ,QAAS,CAACE,WAAY,IAAK7M,MAAO,CAACgH,KAAM,GAAG9G,SAAA,CAC9C2a,EACAC,GACDtd,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAAStB,IACzB0C,EACAC,OAIT,EAEMxC,EAGD,SAAH/H,GAA0B,IAArB8G,EAAO9G,EAAP8G,QAASa,EAAK3H,EAAL2H,MACVyC,EAAiB,KACjBG,EAAa,KACbF,EAAe,KACfC,EAAa,KAoCjB,OAlCIxD,IACFsD,GACE1a,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAAA,QAAA0C,SAAOqX,KACP/Z,EAAAA,EAAAA,KAAA,aAKF4a,IAEGA,EAAM+C,WAAW7a,OAKpB0a,GACExd,EAAAA,EAAAA,KAAAgJ,EAAAA,SAAA,CAAAtG,SACGkY,EAAM+C,WAAW5a,KAAI,SAAC6a,EAAWC,GAAK,OACrClb,EAAAA,EAAAA,MAACzD,EAAAA,SAAc,CAAAwD,SAAA,CACF,IAAVmb,EAAW,6HAGZ7d,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,GAAApC,OAAKsd,EAAUhD,MAAMb,YACzD/Z,EAAAA,EAAAA,KAAA,QACEwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,mBAAApC,OACXsd,EAAUhD,MAAM6C,WAPlBI,EAQJ,OAfvBP,GAAetd,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,GAAApC,OAAKsa,EAAMb,WAC9DwD,GAAavd,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,QAAehB,SAAA,mBAAApC,OAAqBsa,EAAM6C,YAsB9E9a,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACgd,EAAAA,GAAe,CAAAta,UACd1C,EAAAA,EAAAA,KAACid,EAAAA,EAAG,CAACc,SAAO,EAACb,OAAO,UAASxa,UAC1B0a,EAAAA,EAAAA,GAAuBY,EAAAA,IAAAA,wBAG5Brb,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACQ,QAAS,CAACE,WAAY,IAAK7M,MAAO,CAACgH,KAAM,GAAG9G,SAAA,CAC9C2a,EACAC,EACAC,EACAC,OAIT,EAEMnB,EAMD,SAAHrI,GAAoE,IAA/D+F,EAAO/F,EAAP+F,QAASuC,EAAQtI,EAARsI,SAAUzB,EAAe7G,EAAf6G,gBAAiBJ,EAASzG,EAATyG,UAAW7U,EAASoO,EAATpO,UACpD,IAAK0W,EACH,OACEtc,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAASA,EAASU,UAAWA,EAAU/X,UACrD1C,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAAStB,MAKhC,IAAMjG,GAAKqJ,EAAAA,EAAAA,GAAuB3B,EAAU,CAAC4B,KAAMtY,IAE7CuY,GACJxb,EAAAA,EAAAA,MAAA,QAAMH,MAAO,CAAC4b,WAAY,IAAI1b,SAAA,CAAC,KAC5B1C,EAAAA,EAAAA,KAACqe,EAAAA,GAAiB,CAACzJ,GAAIA,EAAGlS,SAAC,eAA8B,OAI9D,OACE1C,EAAAA,EAAAA,KAACkb,EAAc,CAACnB,QAASA,EAASU,UAAWA,EAAU/X,UACrDC,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAAC2b,EAAAA,GAA4B,CAC3B2C,OAAuB,OAAfzD,QAAe,IAAfA,GAAAA,EAAiB/X,OAAS,CAACyb,cAAe,GAAK,CAAC,EACxD3C,KAAM,CACJ,CACEtZ,MAAO,YACPuZ,MACElZ,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACG8b,EAAAA,EAAAA,IAAuBlC,GACvB6B,UAMXne,EAAAA,EAAAA,KAACkc,EAAAA,GAAe,CAACC,QAAStB,QAIlC,EC7aa4D,EAAU,SAAA/F,IAAAC,EAAAA,EAAAA,GAAA8F,EAAA/F,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA4F,GAAA,SAAAA,IAAA,IAAA3F,GAAAC,EAAAA,EAAAA,GAAA,KAAA0F,GAAA,QAAAzF,EAAAlT,UAAAhD,OAAAmW,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAArT,UAAAqT,GAwCnB,OAxCmBL,EAAAF,EAAAQ,KAAA/M,MAAAuM,EAAA,OAAAtY,OAAA2Y,KACrBO,SAAW,WACT,IAAAkF,EAAyB5F,EAAKhV,MAAvBiJ,EAAI2R,EAAJ3R,KAAMnC,EAAQ8T,EAAR9T,SAEW,8BAApBmC,EAAK2N,YACPT,EAAAA,EAAAA,GAAgB,CACdzF,MAAO,QACP0F,MACEla,EAAAA,EAAAA,KAAC2e,EAAAA,GAAe,CACd/D,MAAO7N,EAAK6N,MAAQ7N,EAAK6N,MAAQ7N,EACjC+N,gBAAiB/N,EAAK+N,gBACtBC,YAAahO,EAAKgO,gBAIK,iCAApBhO,EAAK2N,YACdT,EAAAA,EAAAA,GAAgB,CACdzF,MAAO,aACP0F,MAAMla,EAAAA,EAAAA,KAAC2e,EAAAA,GAAe,CAAC/D,MAAO7N,EAAK6N,MAAQ7N,EAAK6N,MAAQ7N,MAGrC,gBAApBA,EAAK2N,YAAgC3N,EAAK6N,OACtB,oBAApB7N,EAAK2N,YAAoC3N,EAAK6N,OAC3B,qBAApB7N,EAAK2N,YACe,6BAApB3N,EAAK2N,YAELT,EAAAA,EAAAA,GAAgB,CACdzF,MAAO,QACP0F,MAAMla,EAAAA,EAAAA,KAAC2e,EAAAA,GAAe,CAAC/D,MAAO7N,EAAK6N,MAAQ7N,EAAK6N,MAAQ7N,OAG1DkN,EAAAA,EAAAA,GAAgB,CACdzF,MAAOzH,EAAKlE,SAAW,OACvBqR,MACEla,EAAAA,EAAAA,KAAC4e,EAAAA,GAAiB,CAAAlc,UAChB1C,EAAAA,EAAAA,KAACqa,EAAwB,CAACtN,KAAMA,EAAMnC,SAAUA,OAK1D,EAACkO,CAAC,CAYD,OAZAY,EAAAA,EAAAA,GAAA+E,EAAA,EAAApc,IAAA,SAAAjD,MAED,WACE,OACEY,EAAAA,EAAAA,KAACyY,EAAsB,CAACjW,MAAOmX,KAAK7V,MAAMtB,MAAOgX,SAAUG,KAAKH,SAAS9W,UACvE1C,EAAAA,EAAAA,KAAC6e,EAAyB,CACxB9R,KAAM4M,KAAK7V,MAAMiJ,KACjBnC,SAAU+O,KAAK7V,MAAM8G,SACrBkU,YAAanF,KAAK7V,MAAMgb,eAIhC,KAACL,CAAA,CApDoB,CAASvf,EAAAA,WAuDnB6f,GAA+B5G,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,87DAsG3C2G,EAAAA,GACAC,EAAAA,GAGEJ,EAID3f,EAAAA,MAAW,SAAAC,GAAoC,IAAlC4N,EAAI5N,EAAJ4N,KAAMnC,EAAQzL,EAARyL,SAAUkU,EAAW3f,EAAX2f,YAC1BjW,EAAUkE,EAAKlE,QACf+M,EAAO/M,EAAU+B,EAAS8C,MAAM7E,GAAW,KAC3CqW,EAAoB,OAAJtJ,QAAI,IAAJA,OAAI,EAAJA,EAAM9H,MAE5B,OACEnL,EAAAA,EAAAA,MAACwc,EAAAA,GAAG,CACFC,MAAOC,EAAAA,IAAAA,KACPvN,aAAc,kBAAMnM,EAAAA,EAAAA,IAA6BoH,EAAKnH,UAAU,EAChEmM,aAAc,kBAAMpM,EAAAA,EAAAA,IAA6B,KAAK,EACtDmZ,YAAaA,EAAYpc,SAAA,EAEzB1C,EAAAA,EAAAA,KAACsf,EAAAA,GAAe,CACdC,KAAM,cAAexS,EAAOA,EAAKnH,UAAY,KAC7C4Z,aAAc5U,EAASc,kBACvBwT,cAAeA,KAEjBlf,EAAAA,EAAAA,KAACyf,EAAAA,GAAQ,CAAC5W,QAAS,YAAakE,GAAQA,EAAKlE,WAC7C7I,EAAAA,EAAAA,KAAC4e,EAAAA,GAAiB,CAAAlc,UAChB1C,EAAAA,EAAAA,KAACqa,EAAwB,CAACtN,KAAMA,EAAMnC,SAAUA,QAIxD,IAEAiU,EAA0Btb,YAAc,4BASjC,IAAMmc,EAAY,SAAAC,IAAAhH,EAAAA,EAAAA,GAAA+G,EAAAC,GAAA,IAAAC,GAAA/G,EAAAA,EAAAA,GAAA6G,GAAA,SAAAA,IAAA,IAAAG,GAAA9G,EAAAA,EAAAA,GAAA,KAAA2G,GAAA,QAAAI,EAAAha,UAAAhD,OAAAmW,EAAA,IAAAC,MAAA4G,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA9G,EAAA8G,GAAAja,UAAAia,GAMrB,OANqBF,EAAAD,EAAAxG,KAAA/M,MAAAuT,EAAA,OAAAtf,OAAA2Y,KACvBO,SAAW,YACTS,EAAAA,EAAAA,GAAgB,CACdzF,MAAO,MACP0F,MAAMla,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACkN,WAAY,YAAYhN,SAAEmd,EAAK/b,MAAMiJ,KAAKgN,WAEjE,EAAC8F,CAAC,CAYD,OAZAnG,EAAAA,EAAAA,GAAAgG,EAAA,EAAArd,IAAA,SAAAjD,MAED,WACE,OACEY,EAAAA,EAAAA,KAACyY,EAAsB,CAACjW,MAAOmX,KAAK7V,MAAMtB,MAAOgX,SAAUG,KAAKH,SAAS9W,UACvE1C,EAAAA,EAAAA,KAACggB,EAA2B,CAC1BjT,KAAM4M,KAAK7V,MAAMiJ,KACjB+R,YAAanF,KAAK7V,MAAMgb,YACxBlU,SAAU+O,KAAK7V,MAAM8G,YAI7B,KAAC8U,CAAA,CAlBsB,CAASxgB,EAAAA,WAqBrB+gB,GAAiC9H,EAAAA,EAAAA,IAAG+H,IAAAA,GAAA7H,EAAAA,EAAAA,GAAA,0KAW3C2H,EAID9gB,EAAAA,MAAW,SAAAyT,GAAoC,IAAlC5F,EAAI4F,EAAJ5F,KAAM+R,EAAWnM,EAAXmM,YAAalU,EAAQ+H,EAAR/H,SAC7B/B,EAAUkE,EAAKlE,QACf+M,EAAO/M,EAAU+B,EAAS8C,MAAM7E,GAAW,KAC3CqW,EAAoB,OAAJtJ,QAAI,IAAJA,OAAI,EAAJA,EAAM9H,MAE5B,OACEnL,EAAAA,EAAAA,MAACwc,EAAAA,GAAG,CACFC,MAAOrS,EAAKqS,MACZtN,aAAc,kBAAMnM,EAAAA,EAAAA,IAA6BoH,EAAKnH,UAAU,EAChEmM,aAAc,kBAAMpM,EAAAA,EAAAA,IAA6B,KAAK,EACtDmZ,YAAaA,EAAYpc,SAAA,EAEzB1C,EAAAA,EAAAA,KAACsf,EAAAA,GAAe,CACdC,KAAMxS,EAAKnH,UACX4Z,aAAc5U,EAASc,kBACvBwT,cAAeA,KAEjBlf,EAAAA,EAAAA,KAACyf,EAAAA,GAAQ,CAAC5W,QAASkE,EAAKlE,WACxB7I,EAAAA,EAAAA,KAACgd,EAAAA,GAAe,CAAAta,UACd1C,EAAAA,EAAAA,KAAA,QAAMwC,MAAO,CAAC4b,WAAY,GAAG1b,SAAEqK,EAAKqS,WAEtCpf,EAAAA,EAAAA,KAAC2O,EAAAA,EAAG,CAACQ,QAAS,CAACE,WAAY,IAAK7M,MAAO,CAACgH,KAAM,GAAG9G,SAC9CqK,EAAKgN,YAId,IAEAiG,EAA4Bzc,YAAc,8B,4BC5QpC4c,GAAYC,EAAAA,GACZC,GAAoBC,EAAAA,GAyEnB,IAAMC,GAAyD,SAACzc,GACrE,IAAO0c,EAAqD1c,EAArD0c,UAAWC,EAA0C3c,EAA1C2c,eAAgB7V,EAA0B9G,EAA1B8G,SAAU+C,EAAgB7J,EAAhB6J,OAAQ6N,EAAQ1X,EAAR0X,KAC9CkF,EAAQxhB,EAAAA,OAAsC,MAEpD,OACEyD,EAAAA,EAAAA,MAACge,EAAAA,GAAoB,CAACC,gBAAiB,kBAAMF,EAAMpY,SAAWoY,EAAMpY,QAAQuY,WAAW,EAACne,SAAA,EACtF1C,EAAAA,EAAAA,KAAC8gB,EAAAA,GAAO,KACR9gB,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACgH,KAAM,EAAGuX,UAAW,EAAG7M,WAAY,GAAGxR,UACjD1C,EAAAA,EAAAA,KAACghB,GAAS,CAAAte,SACP,SAAAvD,GAAA,IAAEiD,EAAKjD,EAALiD,MAAOgB,EAAMjE,EAANiE,OAAM,OACdpD,EAAAA,EAAAA,KAACihB,IAAuB/Z,EAAAA,EAAAA,GAAA,CACtB9E,MAAOA,EACPgB,OAAQA,EACR+W,IAAKuG,EACLF,UAAWA,EACXU,QAAS1F,EAAK0F,QACdtW,SAAUA,EACV4C,YAAaG,EAAOH,aA9DlC,SAAoBgO,EAAwB7N,EAAmB8S,GAC7D,IAAMU,EAAgB3F,EAAK4F,SAASzT,QAAO,SAACZ,GAG1C,GAAwB,qCAApBA,EAAK2N,WACP,OAAO,EAET,IAAM2G,GAAIC,EAAAA,EAAAA,GAAavU,GACvB,QAAKY,EAAO4T,OAAOF,MAGf1T,EAAO6T,WAAaC,OAAO1U,EAAKnH,WAAa+H,EAAO6T,UAI1D,IAEME,KAAmB/T,EAAOgU,SAAS,IAAmC,KAA7BhU,EAAOgU,SAAS,GAAGviB,OAE5DwiB,EAAiBF,EACnBP,EAAcxT,QAAO,SAACZ,GACpB,OACEY,EAAOgU,SAAS7e,OAAS,GACzB6K,EAAOgU,SAAS1L,OAAM,SAACK,GACrB,MAAgB,UAAZA,EAAExB,MACG/H,EAAKlE,SAAW4X,EAAexT,SAASF,EAAKlE,SAEtC,SAAZyN,EAAExB,MACG/H,EAAKlE,SAAWkE,EAAKlE,UAAYyN,EAAElX,MAE5B,SAAZkX,EAAExB,MACG/H,EAAK0N,WAAanE,EAAElX,SAAUge,EAAAA,EAAAA,GAAuBrQ,EAAK0N,WAE5D1N,EAAKgN,QAAQ8H,cAAc5U,SAASqJ,EAAElX,MAAMyiB,cACrD,GAEJ,IACA,GAEJ,MAAO,CACLV,cAAeO,GAAiB/T,EAAOmU,eAAiBF,EAAiBT,EACzES,eAAAA,EAEJ,CAoBkBG,CAAWvG,EAAM7N,EAAQ8S,IAC7B,QAMd,EAEauB,IAAwC7J,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uKAMpD0G,EACAkB,GAGEgB,GAAuB,SAAAvI,IAAAC,EAAAA,EAAAA,GAAAsI,EAAAvI,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAoI,GAAA,SAAAA,IAAA,IAAAnI,GAAAC,EAAAA,EAAAA,GAAA,KAAAkI,GAAA,QAAAjI,EAAAlT,UAAAhD,OAAAmW,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAArT,UAAAqT,GAyLzB,OAzLyBL,EAAAF,EAAAQ,KAAA/M,MAAAuM,EAAA,OAAAtY,OAAA2Y,KAC3BgJ,KAAO/iB,EAAAA,YAA8B4Z,EAWrCoJ,MAAQ,IAAIC,EAAAA,GAAkB,CAC5BC,cAAe,GACfC,YAAY,EACZC,UAAW,SAACC,GAAQ,OAClBzJ,EAAKhV,MAAMqd,cAAgBrI,EAAKhV,MAAMqd,cAAcoB,GAAWC,cAAgB,EAAE,IACnF1J,EAEF2J,kBAAmB,EAAI3J,EACvB4J,uBAAkD,KAAI5J,EA4EtD6J,SAAW,SAAAhQ,GAA4D,IAA1DiQ,EAASjQ,EAATiQ,UAAW9I,EAAYnH,EAAZmH,aAAc+I,EAAYlQ,EAAZkQ,aAC9BC,EAAiC,IAAdF,GAAmB9I,GAAgB+I,EAKtDE,EADmBjJ,EAAe+I,EAAeD,EACnB,EAEpC9J,EAAK2J,iBAAmBK,GAAoBC,CAC9C,EAACjK,EAEDkK,aAAe,SAAC5iB,GACd,GAAK0Y,EAAKhV,MAAMqd,eAAkBrI,EAAKmJ,KAAK3Z,QAA5C,CAMAwQ,EAAK2J,kBAAmB,EAGxB,IAAMje,EAA+C,CACnDqZ,MAAO/E,EAAKhV,MAAMqd,cAAc8B,WAAU,SAAC9a,GAAC,OAAKsZ,OAAOtZ,EAAEvC,YAAcxF,CAAE,IAC1E8iB,UAAW,WAES,IAAlB1e,EAAOqZ,QACTrZ,EAAOqZ,MAAQ/E,EAAKhV,MAAMqd,cAAcre,OAAS,GAQnD,IAFA,IAAIqgB,EAAS,EACTC,EAAa,EACVD,IAAWrK,EAAKmJ,KAAK3Z,QAAQ+a,gBAAgB7e,KAClD2e,EAASrK,EAAKmJ,KAAK3Z,QAAQ+a,gBAAgB7e,GAC3CsU,EAAKmJ,KAAK3Z,QAAQgb,iBAAiBH,MACnCC,GAAc,GACG,OAxBnB,CA4BF,EAACtK,EAEDyK,YAAc,SAAA3Q,GAA2C,IAAD4Q,EAAxCC,EAAM7Q,EAAN6Q,OAAQ5F,EAAKjL,EAALiL,MAAOrb,EAAKoQ,EAALpQ,MAC7B,GAAKsW,EAAKhV,MAAMqd,cAAcre,OAA9B,CAGA,IAAMiK,EAAO+L,EAAKhV,MAAMqd,cAActD,GAChC6F,EAAmBjC,OAAO1U,EAAKnH,aAAekT,EAAKhV,MAAM0J,YACzDmW,IAAuC,QAA1BH,EAAC1K,EAAKhV,MAAM8d,sBAAc,IAAA4B,IAAzBA,EAA2BvW,SAASF,IAElDnC,EAAWkO,EAAKhV,MAAM8G,SAC5B,IAAKmC,EACH,OAAO/M,EAAAA,EAAAA,KAAA,WAET,IACM4jB,EADY/F,IAAU/E,EAAKhV,MAAMqd,cAAcre,OAAS,EAE1D,CACE+gB,aAAa,aAADvjB,OAAeoD,EAAAA,EAAAA,UAE7B,CAAC,EAEL,OACE1D,EAAAA,EAAAA,KAACqgB,GAAY,CAAC6B,MAAOpJ,EAAKoJ,MAAOrE,MAAOA,EAAO4F,OAAQA,EAAO/gB,SACvC,oBAApBqK,EAAK2N,YACJ1a,EAAAA,EAAAA,KAAC0f,EAAY,CACX3S,KAAMA,EACNnC,SAAUA,EACVpI,OAAK0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM1E,GAAK,IAAEJ,MAAO0W,EAAKhV,MAAM1B,OAAUwhB,GAC9C9E,YAAa6E,GAAaD,KAG5B1jB,EAAAA,EAAAA,KAACye,EAAU,CACT1R,KAAMA,EACNnC,SAAUA,EACVpI,OAAK0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM1E,GAAK,IAAEJ,MAAO0W,EAAKhV,MAAM1B,OAAUwhB,GAC9C9E,YAAa6E,GAAaD,KAboC3W,EAAKyV,cAjB3E,CAmCF,EAAC1J,EAEDgL,kBAAoB,WAClB,OAAIhL,EAAKhV,MAAMqd,eACNnhB,EAAAA,EAAAA,KAACuU,EAAAA,EAAa,CAAC7U,KAAK,aAAa8U,MAAM,wBAEzCxU,EAAAA,EAAAA,KAAA,UACT,EAAC8Y,CAAC,CA0BD,OA1BAY,EAAAA,EAAAA,GAAAuH,EAAA,EAAA5e,IAAA,SAAA0hB,IAtLD,WAEE,IAAMC,EAAKrK,KAAKsI,KAAK3Z,SAAW2b,EAAAA,YAAqBtK,KAAKsI,KAAK3Z,SAC/D,OAAM0b,aAAcvf,YAGbuf,EAFE,IAGX,GAAC,CAAA3hB,IAAA,oBAAAjD,MAYD,WAAqB,IAADygB,EAAA,KAClBlG,KAAKuK,+BACDvK,KAAK7V,MAAM0J,aACb2W,OAAOpY,uBAAsB,WAC3B8T,EAAKmD,aAAanD,EAAK/b,MAAM0J,YAC/B,GAEJ,GAAC,CAAAnL,IAAA,qBAAAjD,MAED,SAAmBglB,GAA2C,IAADC,EAAAC,EAAAC,EAAA,KACtD5K,KAAKsI,KAAK3Z,UAIXqR,KAAK7V,MAAM1B,QAAUgiB,EAAUhiB,OACjCuX,KAAKkH,YAEHlH,KAAK7V,MAAM0c,YAAc4D,EAAU5D,WACrC7G,KAAKsI,KAAK3Z,QAAQkc,oBAIlB7K,KAAK7V,MAAM0J,cACa,QAAxB6W,EAAA1K,KAAK7V,MAAMqd,qBAAa,IAAAkD,OAAA,EAAxBA,EAA0BvhB,WAAkC,QAA5BwhB,EAAKF,EAAUjD,qBAAa,IAAAmD,OAAA,EAAvBA,EAAyBxhB,SAE9DqhB,OAAOpY,uBAAsB,WAC3BwY,EAAKvB,aAAauB,EAAKzgB,MAAM0J,YAC/B,IAEJ,GAAC,CAAAnL,IAAA,uBAAAjD,MAED,WACMua,KAAK+I,wBACP/I,KAAK+I,uBAAuB+B,YAEhC,GAAC,CAAApiB,IAAA,YAAAjD,MAED,WACEua,KAAKuI,MAAMwC,WACX/K,KAAKgL,aACP,GAAC,CAAAtiB,IAAA,+BAAAjD,MAED,WAAgC,IAADwlB,EAAA,KACvBZ,EAAKrK,KAAKkL,OAChB,GAAKb,EAAL,CAKA,IAAIc,EAA4B,KAEhCnL,KAAK+I,uBAAyB,IAAIqC,kBAAiB,WACjD,IAAMC,EAAahB,EAAGiB,cAAc,mBAC/BD,EAIDA,EAAWxiB,MAAMY,SAAW0hB,GAG3BF,EAAKnC,mBAIVqC,EAAaE,EAAWxiB,MAAMY,OAC9B4gB,EAAGpB,UAAYoB,EAAGlK,aAAekK,EAAGnB,cAXlCiC,EAAa,IAYjB,IAEAnL,KAAK+I,uBAAuBwC,QAAQlB,EAAI,CACtCmB,YAAY,EACZC,SAAS,GAvBX,MAFEC,QAAQC,KAAK,sDA2BjB,GAAC,CAAAjjB,IAAA,SAAAjD,MA6FD,WACE,IAAAsf,EAAgD/E,KAAK7V,MAA9Cqd,EAAazC,EAAbyC,cAAe/d,EAAMsb,EAANtb,OAAQ8d,EAAOxC,EAAPwC,QAAS9e,EAAKsc,EAALtc,MACvC,OACEO,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGwe,GACClhB,EAAAA,EAAAA,KAACulB,GAAc,CAAA7iB,UACb1C,EAAAA,EAAAA,KAACuU,EAAAA,EAAa,CAAC7U,KAAK,UAAU8U,MAAM,uBAEpC,MACJxU,EAAAA,EAAAA,KAACmgB,GAAI,CACHhG,IAAKR,KAAKsI,KACVuD,yBAA0B7L,KAAKuI,MAC/BuD,UAAuB,OAAbtE,QAAa,IAAbA,OAAa,EAAbA,EAAere,SAAU,EACnCghB,kBAAmBnK,KAAKmK,kBACxB4B,UAAW/L,KAAKuI,MAAMwD,UACtBnC,YAAa5J,KAAK4J,YAClBnhB,MAAOA,EACPgB,OAAQA,EACRuiB,iBAAkB,GAClBnjB,MAAO,CAAC+b,cAhUU,IAiUlBoE,SAAUhJ,KAAKgJ,aAIvB,KAAC1B,CAAA,CAnN0B,CAAS/hB,EAAAA,WAsNhC8hB,GAAS,SAAArB,IAAAhH,EAAAA,EAAAA,GAAAqI,EAAArB,GAAA,IAAAC,GAAA/G,EAAAA,EAAAA,GAAAmI,GAAA,SAAAA,IAAA,IAAA4E,GAAA7M,EAAAA,EAAAA,GAAA,KAAAiI,GAAA,QAAAlB,EAAAha,UAAAhD,OAAAmW,EAAA,IAAAC,MAAA4G,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA9G,EAAA8G,GAAAja,UAAAia,GAQC,OARD6F,EAAAhG,EAAAxG,KAAA/M,MAAAuT,EAAA,OAAAtf,OAAA2Y,KAGb5R,MAAQ,CACNjF,MAAO,EACPgB,OAAQ,GACTwiB,EAEDC,oBAAc,EAAAD,CAAA,CA0Cb,OA1CalM,EAAAA,EAAAA,GAAAsH,EAAA,EAAA3e,IAAC,oBAADjD,MAEd,WAAqB,IAAD0mB,EAAA,KAClBnM,KAAKoM,UAGL,IAAM/B,EAAKC,EAAAA,YAAqBtK,MAChC,GAAIqK,GAAMA,aAAcvf,aAAe,mBAAoB0f,OAAQ,CACjE,IAAM6B,EAAK7B,OAAuB,eAClCxK,KAAKkM,eAAiB,IAAIG,GAAG,SAAC7J,GAC5B2J,EAAKxe,SAAS,CACZlF,MAAO+Z,EAAQ,GAAG8J,YAAY7jB,MAC9BgB,OAAQ+Y,EAAQ,GAAG8J,YAAY7iB,QAEnC,IACAuW,KAAKkM,eAAeX,QAAQlB,EAC9B,CACF,GAAC,CAAA3hB,IAAA,qBAAAjD,MAED,WACEua,KAAKoM,SACP,GAAC,CAAA1jB,IAAA,uBAAAjD,MAED,WACMua,KAAKkM,gBACPlM,KAAKkM,eAAepB,YAExB,GAAC,CAAApiB,IAAA,UAAAjD,MAED,WAEE,IAAM4kB,EAAKC,EAAAA,YAAqBtK,MAC3BqK,GAAQA,aAAcvf,cAGvBuf,EAAGkC,cAAgBvM,KAAKtS,MAAMjF,OAAS4hB,EAAGnB,eAAiBlJ,KAAKtS,MAAMjE,QACxEuW,KAAKrS,SAAS,CAAClF,MAAO4hB,EAAGkC,YAAa9iB,OAAQ4gB,EAAGnB,eAErD,GAAC,CAAAxgB,IAAA,SAAAjD,MAED,WACE,OAAOY,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACJ,MAAO,OAAQgB,OAAQ,QAAQV,SAAEiX,KAAK7V,MAAMpB,SAASiX,KAAKtS,QAChF,KAAC2Z,CAAA,CAlDY,CAAS9hB,EAAAA,WAqDlBqmB,GAAiBjiB,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,qCAAAC,YAAA,eAAVF,CAAU,8G,gWC9XpBgR,EAAgD,SAAHnV,GAAe,IAAVkV,EAAGlV,EAAHkV,IAClDJ,EAAuBI,EAA3B7U,GAAW2mB,EAAgB9R,EAAhB8R,aAClBlf,EAAoC/H,EAAAA,UAAwB,GAAMkI,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAA3Dmf,EAAUhf,EAAA,GAAEif,EAAajf,EAAA,GAC1Bkf,EAAcpnB,EAAAA,aAAkB,kBAAMmnB,GAAc,EAAM,GAAE,IAE5DE,EAAarnB,EAAAA,YAAiB,eAAAyT,GAAA6T,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAClC,SAAAC,EAAOC,GAAkC,IAAAC,EAAAjM,EAAA,OAAA6L,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEF,GAD9BJ,EAAUD,EAAVC,SACDjM,EAAQ3G,GAAS4S,EAAO5S,OACjB,YAAa2G,GAAK,CAAAmM,EAAAE,KAAA,eAAAF,EAAAE,KAAA,GACvBC,EAAAA,EAAAA,IAAkB,CACtBnN,QAASa,EAAMb,QACfra,KAAM,QACNwd,OAAQ,WACP,KAAD,mBAAA6J,EAAAI,OAAA,GAAAR,EAAA,KAEL,gBAAAS,GAAA,OAAAzU,EAAAtG,MAAA,KAAAvG,UAAA,EAXiC,GAYlC,CAACmO,IAGH,OAAKA,GAKHtR,EAAAA,EAAAA,MAAAqG,EAAAA,SAAA,CAAAtG,SAAA,EACE1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CACL3nB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,WACjB8U,OAAO,SACP/R,SAAUib,EACVrmB,QAAS,kBAAMsmB,GAAc,EAAK,EAAC3jB,SACpC,eAGD1C,EAAAA,EAAAA,KAACsnB,EAAAA,EAAiB,CAChBC,OAAQnB,EACRoB,QAASlB,EACTC,WAAYA,EACZkB,cAAYC,EAAAA,EAAAA,GAAA,GAAIzT,EAAQkS,QAjBrB,IAqBX,EAEA,SAASwB,EAAuBlhB,EAA0BmE,GACxD,IAAMgd,EAAanhB,EAAUuG,KAAKjK,KAChC,SAACV,GAAG,IAAAwlB,EAAA,OAAMxlB,IAA0B,QAAvBwlB,EAAIjd,EAAS8C,MAAMrL,UAAI,IAAAwlB,OAAA,EAAnBA,EAAqBxgB,QAAUgL,EAAAA,GAAAA,SAAoB,IAGtE,OAAAnL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKT,GAAS,IACZqhB,QAASrhB,EAAUuG,KAAKlK,OAAS,EACjCilB,OAAQthB,EAAUuG,KAAKlK,QAAU8kB,EAAW3a,SAASoF,EAAAA,GAAAA,QACrD2V,SAAUJ,EAAW3R,OAAM,SAACgS,GAAS,MACnC,CAAC5V,EAAAA,GAAAA,OAAmBA,EAAAA,GAAAA,WAAsBpF,SAASgb,EAAU,KAGnE,CAiBO,IAAMC,EAAiB,SAAC7T,GAAgB,OAAK8T,EAAAA,GAAAA,IAAiB9T,EAAIjJ,OAAQ,EACpEgd,EAAoB,SAAC/T,GAAgB,OAChDA,EAAIgU,eAAiBC,EAAAA,GAAAA,IAAmBjU,EAAIjJ,OAAQ,EAEzCmd,EAAoD,SAACzkB,GAAW,IAAD0kB,EAAAC,EACnE7d,EAAkC9G,EAAlC8G,SAAUtE,EAAwBxC,EAAxBwC,MAAOoiB,EAAiB5kB,EAAjB4kB,SAAUrU,EAAOvQ,EAAPuQ,IAC5BsU,EAAwB,OAAHtU,QAAG,IAAHA,GAAkB,QAAfmU,EAAHnU,EAAKgU,qBAAa,IAAAG,OAAf,EAAHA,EAAoBG,mBACzCC,GAAWC,EAAAA,EAAAA,GAA8BxU,GAEzC5N,EAAYkhB,EAAuB7jB,EAAM2C,UAAWmE,GAEpDke,EA1BR,SACEzU,EACA/N,EACAsE,GAEA,IAAMme,EAAM1U,EAAI2U,KAAKlnB,MAAK,SAACC,GAAC,OAAKA,EAAEM,MAAQ4mB,EAAAA,EAAAA,aAAwB,IACnE,OAAKF,EAGEpB,EACL,CAAC3a,MAAMtF,EAAAA,EAAAA,GAAcpB,EAAOyiB,EAAI3pB,OAAO2I,IAAIhF,KAAI,SAACmmB,GAAC,OAAKA,EAAE9gB,IAAI,IAAGT,MAAOohB,EAAI3pB,OAC1EwL,GAJO,IAMX,CAa8Bue,CAAyB9U,EAAK/N,EAAOsE,GAC3Dwe,EAAkC,QAAXX,EAAGpU,EAAI2U,YAAI,IAAAP,OAAA,EAARA,EAAUY,MACxC,SAACtnB,GAAC,OAAKA,EAAEM,MAAQ4mB,EAAAA,EAAAA,eAAwC,SAAZlnB,EAAE3C,KAAgB,IAG3DkqB,EAAkC,CACtC5pB,KAAM,SACN6pB,MAAO,IACP/U,MAAO,wBACP7U,QAAS,2CACTwL,UAAW+c,EAAe7T,GAC1BtU,QAAS,kBAAM2oB,EAAS,CAACc,KAAM,OAAO,GAGlCC,EAAkC,CACtC/pB,KAAM,eACN6pB,OAA0B,OAAnBT,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnhB,QAAS,IACrC6M,MAAO,aACPrJ,UAAW2d,KAAyBA,EAAoBd,UAAYc,EAAoBf,QACxFpoB,SACEgD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACIomB,GAAwBA,EAAoBhB,QAEzCgB,EAAoBd,SAErB,qDADA,qEAFA,0EAIJhoB,EAAAA,EAAAA,KAAC0pB,EAAwB,CAACjjB,UAAWqiB,OAGzC/oB,QAAS,kBAAM2oB,EAAS,CAACc,KAAM,YAAa/iB,UAAWqiB,GAAsB,GAGzEa,EAAsC,CAC1CjqB,KAAM,KACN6pB,MAAO9iB,EAAUkB,MACjB6M,MAAO/N,EAAUuG,KAAKlK,OAAS,EAAI,iBAAmB,gBACtDqI,UAAW1E,EAAUqhB,WAAarhB,EAAUuhB,UAAYvhB,EAAUshB,QAClEpoB,SACEgD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACI+D,EAAUqhB,QAEPrhB,EAAUuhB,SAEX,6DADA,mDAFA,sDAIJhoB,EAAAA,EAAAA,KAAC0pB,EAAwB,CAACjjB,UAAWA,OAGzC1G,QAAS,kBAAM2oB,EAAS,CAACc,KAAM,YAAa/iB,UAAAA,GAAW,GAGnDmjB,EAA0C,CAC9ClqB,KAAM,gBACN8U,MAAO,gBACPrJ,UAAW+c,EAAe7T,IAAkC,IAA1B5N,EAAUuG,KAAKlK,OACjDnD,QAAS,6DACTI,QAAS,WACP,IAAKsU,EAAIgU,cAEP,OADAhD,QAAQC,KAAK,wEACNuE,QAAQC,UAEjB,IAAMC,EAA8BtjB,EAAUuG,KAAKjK,KAAI,SAACmmB,GAAC,SAAA5oB,OAAQ4oB,EAAC,QAAK7gB,KAAK,KACtE2hB,GAAgBtiB,EAAAA,EAAAA,GAAcpB,EAAOyjB,GAA6BhiB,IAAIhF,KAC1E,SAACgK,GAAI,OAAKA,EAAK3E,IAAI,IAGrB,OAAOsgB,EAAS,CACdc,KAAM,YACN/iB,UAAW,CACTuG,KAAMgd,EACNriB,MAAOoiB,IAGb,GAGIE,EAAqB7B,EAAkB/T,GAEvC6V,EAAyC,CAC7CxqB,KAAM,gBACN8U,MAAO,eACPrJ,UAAW8e,EACXtqB,QAAUsqB,EAEN,qEADA,sDAEJlqB,QAAS,kBAAM2oB,EAAS,CAACc,KAAM,gBAAgB,GAG5Cb,GACH,CAACgB,EAAUF,EAAMS,EAAaN,GAAchZ,SAAQ,SAACuZ,GACnDA,EAAOhf,UAAW,EAClBgf,EAAO3V,MACL,oHACJ,IAGF,IAAMhO,EAAU,CAAC8iB,EAAMG,EAAME,EAAUC,EAAcM,GAC/CE,EAAiB3jB,EAAUqhB,QAC7B6B,EACAM,GAAsBb,EACtBc,EACmB,OAAnBpB,QAAmB,IAAnBA,GAAAA,EAAqBhB,QACrB2B,EACA,KAEEY,EAAU1B,GAAsByB,EAAiBA,EAAiBd,EASxE,OACE3mB,EAAAA,EAAAA,MAACoM,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAEvM,SAAA,EAChC1C,EAAAA,EAAAA,KAAC2O,EAAAA,EAAG,CAACnF,KAAM,CAACwF,UAAW,OAAOtM,UAC5B1C,EAAAA,EAAAA,KAACsqB,EAAAA,EAAoB,CACnBC,SAAU,EACVF,QAASA,EACT7jB,QAASA,EACTgO,MACoB,MAAlB6V,EAAQd,MAAa,qBAEjBc,EAAQd,MAAK,eAAAjpB,OACE+pB,EAAQd,MAAK,mBAAAjpB,OACd+pB,EAAQ7V,OAE5B7U,QApBM,OAARipB,QAAQ,IAARA,GAAAA,EAAUjpB,QACG,OAARipB,QAAQ,IAARA,OAAQ,EAARA,EAAUjpB,QAEZ0U,EAAImW,4BAAyBzkB,EAAY0kB,EAAAA,GAkB1C/qB,KAAc,OAARkpB,QAAQ,IAARA,OAAQ,EAARA,EAAUlpB,KAChByL,UAAkB,OAARyd,QAAQ,IAARA,OAAQ,EAARA,EAAUzd,YAAakJ,EAAImW,2BAGvCrC,EAAAA,GAAAA,IAAiB9T,EAAIjJ,QAA0C,MAAhCpL,EAAAA,EAAAA,KAACsU,EAAe,CAACD,IAAKA,MAG7D,EAEMqV,EAAwE,SAAHzW,GAAA,IAAKxM,EAASwM,EAATxM,UAAS,OACvFzG,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACkoB,YAAa,QAAQhoB,WACrB,OAAT+D,QAAS,IAATA,OAAS,EAATA,EAAWuG,OAAQ,IAAIjK,KAAI,SAAC6S,GAAI,OAChC5V,EAAAA,EAAAA,KAAA,QAAiBwC,MAAO,CAACmoB,QAAS,SAASjoB,SAAA,KAAApC,OAAOsV,IAAvCA,EAAqD,KAE9D,C,mgBCtNKgV,EAAwB,SAACxf,GACpC,OAAQA,GACN,KAAKyf,EAAAA,IAAAA,OACH,MAAO,SACT,KAAKA,EAAAA,IAAAA,SACH,MAAO,WACT,KAAKA,EAAAA,IAAAA,UACH,MAAO,kBACT,KAAKA,EAAAA,IAAAA,QACH,MAAO,SACT,KAAKA,EAAAA,IAAAA,YACH,MAAO,yBACT,KAAKA,EAAAA,IAAAA,QACH,MAAO,gBACT,KAAKA,EAAAA,IAAAA,SACH,MAAO,iBACT,KAAKA,EAAAA,IAAAA,QACH,MAAO,YACT,QACE,MAAO,OAEb,EAEMC,EAGD,SAAH3rB,GAAA,IAAK+hB,EAAO/hB,EAAP+hB,QAASxe,EAAQvD,EAARuD,SAAQ,OACtBwe,GAAUlhB,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,SAAgBhB,SAAC,mBAAiB1C,EAAAA,EAAAA,KAAA,OAAA0C,SAAMA,KAAkB,EAEpFqoB,EAAc,CAACC,aAAa,EAAMC,cAAc,GAEzCC,EAGR,SAAHvY,GAAwB,IAAnBuO,EAAOvO,EAAPuO,QAAS7M,EAAG1B,EAAH0B,IACd,OACErU,EAAAA,EAAAA,KAACmrB,EAAAA,GAAa,CACZlc,QAAS,EACT2M,KAAM,CACJ,CACEvZ,IAAK,UACLjD,OACEY,EAAAA,EAAAA,KAAC8qB,EAAc,CAAC5J,QAASA,EAAQxe,SAC9B,WACC,OAAO,OAAH2R,QAAG,IAAHA,GAAAA,EAAK+W,WACAprB,EAAAA,EAAAA,KAACqrB,EAAAA,EAAgB,CAACzlB,UAAWyO,EAAI+W,UAAWE,WAAYP,KAG/D/qB,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,SAAgBhB,SAAEkoB,EAAyB,OAAHvW,QAAG,IAAHA,OAAG,EAAHA,EAAKjJ,SAErE,KAIN,CACE/I,IAAK,QACLjD,OACEY,EAAAA,EAAAA,KAAC8qB,EAAc,CAAC5J,QAASA,EAAQxe,SAC9B,WACC,OAAO,OAAH2R,QAAG,IAAHA,GAAAA,EAAKkX,SACAvrB,EAAAA,EAAAA,KAACqrB,EAAAA,EAAgB,CAACzlB,UAAWyO,EAAIkX,QAASD,WAAYP,KAG7D/qB,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,SAAgBhB,SAAEkoB,EAAyB,OAAHvW,QAAG,IAAHA,OAAG,EAAHA,EAAKjJ,SAErE,KAIN,CACE/I,IAAK,WACLjD,OACEY,EAAAA,EAAAA,KAAC8qB,EAAc,CAAC5J,QAASA,EAAQxe,SAC9B,WACC,OAAO,OAAH2R,QAAG,IAAHA,GAAAA,EAAK+W,WACAprB,EAAAA,EAAAA,KAACwrB,EAAAA,EAAW,CAACC,UAAWpX,EAAI+W,UAAWM,QAASrX,EAAIkX,WAG3DvrB,EAAAA,EAAAA,KAAA,OAAKwC,MAAO,CAACgN,MAAO9L,EAAAA,EAAAA,SAAgBhB,SAAEkoB,EAAyB,OAAHvW,QAAG,IAAHA,OAAG,EAAHA,EAAKjJ,SAErE,OAOd,EAIaugB,EAAgE,SAAH/Y,GAAsB,IAADgZ,EAAAC,EAAhBxX,EAAGzB,EAAHyB,IAAKyX,EAAKlZ,EAALkZ,MAC3EC,EAAiB1X,EAAjB0X,cACP9kB,EAA0C/H,EAAAA,SAA8B,MAAKkI,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAAtE+kB,EAAa5kB,EAAA,GAAE6kB,EAAgB7kB,EAAA,GAE/B0D,EAAiB5L,EAAAA,WAAiB6L,EAAAA,GAAlCD,cACAohB,EAAWhtB,EAAAA,WAAiBitB,EAAAA,IAA5BD,QAEDE,GAAOC,EAAAA,EAAAA,KACPC,GAAUC,EAAAA,EAAAA,MAEVC,EAAU,eAAAvZ,GAAAuT,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAApBmF,EAAKL,GAAehF,EAAAE,KAAA,GACdC,EAAAA,EAAAA,IAAkB,CACtBhK,OAAQ,UACRxd,KAAM,yBACNqa,QAAS,YACR,KAAD,mBAAAgN,EAAAI,OAAA,GAAAR,EAAA,KACH,kBAPe,OAAA1T,EAAA5G,MAAA,KAAAvG,UAAA,KASV2mB,GAAUC,EAAAA,EAAAA,IAA4B,CAC1CltB,GAAI6U,EAAI7U,GACRmtB,eAAoC,QAAtBf,EAAEvX,EAAIuY,wBAAgB,IAAAhB,OAAA,EAApBA,EAAsBe,eACtCE,uBAA4C,QAAtBhB,EAAExX,EAAIuY,wBAAgB,IAAAf,OAAA,EAApBA,EAAsBgB,uBAC9CC,aAAczY,EAAIyY,aAClBhB,MAAAA,IAGF,OACEnpB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAACoM,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAEvM,SAAA,CAC/B2R,EAAImW,wBACHxqB,EAAAA,EAAAA,KAAC+sB,EAAAA,EAAY,CAACrtB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,SAAWwM,GAAI6X,EAAQ/pB,SAAC,uBAIvD1C,EAAAA,EAAAA,KAACgtB,EAAAA,EAAO,CAAC7e,QAAS8e,EAAAA,EAA8BC,6BAA2B,EAAAxqB,UACzE1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAAC3nB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,SAAW+C,UAAQ,EAAAzI,SAAC,yBAKjD1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAAC3nB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,QAAUrI,QAAS,kBAAMksB,EAAiB,SAAS,EAACvpB,SAAC,0BAG9E1C,EAAAA,EAAAA,KAACmtB,EAAAA,EAAO,CACN9e,SAAS,eACTF,SACExL,EAAAA,EAAAA,MAACyqB,EAAAA,GAAI,CAAA1qB,SAAA,EACH1C,EAAAA,EAAAA,KAACgtB,EAAAA,EAAO,CAAC7e,QAAQ,0BAA0BE,SAAS,OAAOgf,cAAc,MAAK3qB,UAC5E1C,EAAAA,EAAAA,KAACstB,EAAAA,GAAQ,CACPC,KAAK,sBACL7tB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,yBACjBrI,QAAS,kBAAMokB,OAAOqJ,KAAK,GAADltB,OAAIwK,EAAa,oBAAAxK,OAAmB+T,EAAI7U,IAAK,MAG1E6U,EAAIoZ,qBACHztB,EAAAA,EAAAA,KAACstB,EAAAA,GAAQ,CACP5tB,KAAK,SACL6tB,KAAK,SACLrQ,OAAO,SACPnd,QAAS,kBAAMksB,EAAiB,SAAS,IAEzC,QAEPvpB,UAED1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAAC3nB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,wBAG7BpI,EAAAA,EAAAA,KAAC0tB,EAAAA,GAAM,CACLnG,OAA0B,WAAlByE,EACRxE,QAAS,kBAAMyE,EAAiB,KAAK,EACrCzpB,MAAO,CACLJ,MAAO,OACPqN,SAAU,SACVke,SAAU,QACVvqB,OAAQ,OACRwqB,UAAW,SACX7M,UAAW,SAEbvM,MAAM,oBAAmB9R,UAEzBC,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACnF,KAAM,CAACwF,UAAW,UAAWxM,MAAO,CAACgH,KAAM,EAAG4E,SAAU,UAAU1L,SAAA,EACrEC,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACnF,KAAM,CAACwF,UAAW,SAAUY,IAAK,IAAKpN,MAAO,CAACgH,KAAM,EAAG4E,SAAU,UAAU1L,SAAA,EAC9EC,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACnF,KAAM,CAACwF,UAAW,SAAUY,IAAK,IAAKT,QAAS,CAAC9J,IAAK,GAAIgK,WAAY,IAAI3M,SAAA,EAC5E1C,EAAAA,EAAAA,KAAC6tB,EAAAA,GAAU,CAAAnrB,SAAC,UACZ1C,EAAAA,EAAAA,KAAA,OAAA0C,UACE1C,EAAAA,EAAAA,KAAC8tB,EAAAA,EAAO,CAAC9E,KAAM3U,EAAI2U,KAAMjiB,KAAM+kB,EAAQ,KAAOzX,EAAItN,aAGtDpE,EAAAA,EAAAA,MAACgM,EAAAA,EAAG,CAACnF,KAAM,CAACwF,UAAW,UAAWxM,MAAO,CAACgH,KAAM,EAAG4E,SAAU,UAAU1L,SAAA,EACrE1C,EAAAA,EAAAA,KAAC2O,EAAAA,EAAG,CACFuE,OAAQ,CAAC6a,KAAM,SAAU3rB,MAAO,EAAGoN,MAAO9L,EAAAA,EAAAA,aAC1CyL,QAAS,CAAC1N,KAAM,GAAIqN,OAAQ,IAAIpM,UAEhC1C,EAAAA,EAAAA,KAAC6tB,EAAAA,GAAU,CAAAnrB,SAAC,cAEd1C,EAAAA,EAAAA,KAACguB,EAAmB,CAAAtrB,UAClB1C,EAAAA,EAAAA,KAACiuB,EAAAA,GAAwB,CACvB7uB,MAAO2sB,EACPvlB,QAAS,CAAC0nB,aAAa,EAAMnnB,KAAM,QACnConB,MAAO,CAAC,4BAKhBxrB,EAAAA,EAAAA,MAACyrB,EAAAA,GAAY,CAACC,WAAS,EAAA3rB,SAAA,EACrB1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAACtnB,QAAS,kBAAMysB,GAAY,EAAEtP,OAAO,OAAMxa,SAAC,iBAGnD1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAACtnB,QAAS,kBAAMksB,EAAiB,KAAK,EAAE/O,OAAO,UAASxa,SAAC,eAMrE2R,EAAIoZ,qBACHztB,EAAAA,EAAAA,KAACsuB,EAAAA,EAAc,CACb/G,OAA0B,WAAlByE,EACRxE,QAAS,kBAAMyE,EAAiB,KAAK,EACrC1F,WAAY,WACNlS,EAAIuY,iBACNN,EAAQ1sB,MACN2uB,EAAAA,EAAAA,IAAsB,CACpBC,SAAUna,EAAIuY,iBAAiBD,eAC/B8B,aAAcpa,EAAIuY,iBAAiBC,uBACnCC,aAAczY,EAAIyY,aAClBhB,MAAAA,EACA4C,KAAM,WAIVzC,EAAiB,KAErB,EACA0C,mBAAoB,kBAAM1C,EAAiB,YAAY,EACvDxE,cAAYC,EAAAA,EAAAA,GAAA,GAAIrT,EAAI7U,GAAK6U,EAAI8R,gBAE7B,KACH9R,EAAIua,wBACH5uB,EAAAA,EAAAA,KAACsnB,EAAAA,EAAiB,CAChBC,OAA0B,cAAlByE,EACRxE,QAAS,kBAAMyE,EAAiB,KAAK,EACrC1F,WAAY,WACV2F,GACF,EACAzE,cAAYC,EAAAA,EAAAA,GAAA,GAAIrT,EAAI7U,GAAK6U,EAAI8R,gBAE7B,OAGV,EAEM6H,EAAsB1qB,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,kCAAAC,YAAA,gBAAVF,CAAU,yEAUzBurB,GAAuB1W,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sG,qLC5R1ByW,GAAe3W,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,07BA0D3BH,EAAAA,EACA2W,EAAAA,IAGSE,GAAiC5W,EAAAA,EAAAA,IAAG+H,IAAAA,GAAA7H,EAAAA,EAAAA,GAAA,+QAa7C2J,EAAAA,EACAgN,EAAAA,IAGSC,GAAoB9W,EAAAA,EAAAA,IAAG+W,IAAAA,GAAA7W,EAAAA,EAAAA,GAAA,sHAOhCyW,E,sICzFEK,EAAaC,KAAQ,kBACzBC,IAAK9Z,OAAO0C,OAAO+F,EAAAA,KAAkBjb,IAAIqa,IAAyBxP,MAAM,IAG7DwP,EAAyB,SAAC3C,GACrC,OAAQA,GACN,KAAKuD,EAAAA,IAAAA,kBACH,OAAOA,EAAAA,IAAAA,aACT,KAAKA,EAAAA,IAAAA,kBACH,OAAOA,EAAAA,IAAAA,aACT,KAAKA,EAAAA,IAAAA,kBACH,OAAOA,EAAAA,IAAAA,aACT,KAAKA,EAAAA,IAAAA,kBACH,OAAOA,EAAAA,IAAAA,aACT,KAAKA,EAAAA,IAAAA,eACH,OAAOA,EAAAA,IAAAA,UACT,KAAKA,EAAAA,IAAAA,iBACH,OAAOA,EAAAA,IAAAA,YACT,KAAKA,EAAAA,IAAAA,iBACH,OAAOA,EAAAA,IAAAA,YACT,KAAKA,EAAAA,IAAAA,mBACH,OAAOA,EAAAA,IAAAA,cACT,KAAKA,EAAAA,IAAAA,kBACH,OAAOA,EAAAA,IAAAA,aAET,QACE,OAAOvD,EAEb,EAEa6U,EAAwBF,KACnC,WAA+B,IAA9BG,EAAmBzpB,UAAAhD,OAAA,QAAAiD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACrB,MAAO,CACL,CACEgP,MAAO,OACPmD,OAAQ,kBAAMsX,CAAS,GAEzB,CACEza,MAAO,OACPmD,OAAQkX,GAEV,CACEra,MAAO,QACPmD,OAAQ,iBAAM,EAAE,GAGtB,IACA,eAACsX,EAAmBzpB,UAAAhD,OAAA,QAAAiD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAE,OAAK8W,KAAKC,UAAU0S,EAAU,G,uECjD5CjO,EAAe,SAACvU,GAAa,MACpB,oBAApBA,EAAK2N,WAAmC3N,EAAKqS,MAAQC,EAAAA,EAAAA,KAAe,C,+JCezDmQ,EAAoB,SAACnb,GAChC,IAAMiY,GAAUC,EAAAA,EAAAA,MAChBkD,GAAoCC,EAAAA,EAAAA,GAGlCC,EAAAA,IAHKC,GAGgC9oB,EAAAA,EAAAA,GAAA2oB,EAAA,GAHP,GAK1BI,GAAYC,EAAAA,EAAAA,GAAsCzb,GAExD,OAAOnV,EAAAA,YAAiB,eAAAC,GAAAqnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACtB,SAAAC,EAAOnkB,GAAuB,IAAAutB,EAAAC,EAAAC,EAAA,OAAAxJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACvB5S,GAAQA,EAAI6b,oBAAuBL,EAAS,CAAA9I,EAAAE,KAAA,eAAAF,EAAAoJ,OAAA,iBAS/C,OALIJ,GAAYK,EAAAA,EAAAA,IAAwB,CACxC/b,IAAAA,EACA7R,MAAAA,EACAqqB,uBAAwBgD,EAAUQ,MAAMC,mBAAmBloB,KAC3DukB,eAAgBkD,EAAUQ,MAAME,WAAWnoB,OAC3C2e,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGqB2I,EAA0B,CAACG,UAAAA,IAAY,KAAD,EAArDE,EAAMlJ,EAAAyJ,MACZC,EAAAA,EAAAA,IAAmBpc,EAAIyY,aAAyB,QAAbkD,EAAEC,EAAOS,YAAI,IAAAV,OAAA,EAAXA,EAAaJ,0BAA2BtD,EAAS,CACpFqE,qBAAqB,EACrBC,SAAU,SACT7J,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA8J,GAAA9J,EAAA,UAEH+J,EAAAA,EAAAA,GAAe/J,EAAA8J,IAAiB,yBAAA9J,EAAAI,OAAA,GAAAR,EAAA,mBAEnC,gBAAAS,GAAA,OAAAjoB,EAAAkN,MAAA,KAAAvG,UAAA,EAtBqB,GAuBtB,CAACwmB,EAASsD,EAA2BC,EAAWxb,GAEpD,C,oKCvCa0c,EAA4D,SAAH5xB,GAK/D,IAJL6xB,EAAa7xB,EAAb6xB,cACAC,EAAa9xB,EAAb8xB,cACAC,EAAS/xB,EAAT+xB,UACAC,EAAahyB,EAAbgyB,cAEA,OACExuB,EAAAA,EAAAA,MAACoS,EAAuB,CAAArS,SAAA,EACtB1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAAClc,UAAW6lB,EAAetxB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,eAAiBrI,QAASmxB,EAAUxuB,SAAC,cAGxF1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CACLlc,UAAW8lB,EACXG,WAAWpxB,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,kBACtBrI,QAASoxB,EAAczuB,SACxB,WAKP,EAEa2uB,EAAyD,SAAH1e,GAK5D,IAJLqe,EAAare,EAAbqe,cACAC,EAAate,EAAbse,cACAC,EAASve,EAATue,UACAC,EAAaxe,EAAbwe,cAEA,OACExuB,EAAAA,EAAAA,MAACoS,EAAuB,CAAArS,SAAA,EACtB1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CAAC3nB,MAAMM,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,eAAiB+C,UAAW6lB,EAAejxB,QAASmxB,EAAUxuB,UACrF1C,EAAAA,EAAAA,KAAA,QAAMuC,UAAU,uBAAsBG,SAAC,aAEzC1C,EAAAA,EAAAA,KAACqnB,EAAAA,GAAM,CACL+J,WAAWpxB,EAAAA,EAAAA,KAACuP,EAAAA,GAAI,CAACnH,KAAK,kBACtB+C,UAAW8lB,EACXlxB,QAASoxB,EAAczuB,UAEvB1C,EAAAA,EAAAA,KAAA,QAAMuC,UAAU,uBAAsBG,SAAC,cAI/C,EAEaqS,EAA0BzR,EAAAA,GAAAA,IAAAA,WAAU,CAAAC,YAAA,0CAAAC,YAAA,gBAAVF,CAAU,qF","sources":["../../core/src/gantt/GanttChart.tsx","../../core/src/gantt/GanttChartModeControl.tsx","../../core/src/gantt/GanttChartTimescale.tsx","../../core/src/gantt/ZoomSlider.tsx","../../core/src/gantt/useGanttChartMode.tsx","../../core/src/gantt/VizComponents.tsx","../../core/src/gantt/toGraphQueryItems.tsx","../../core/src/runs/CellTruncationProvider.tsx","../../core/src/runs/LogsRowStructuredContent.tsx","../../core/src/runs/LogsRow.tsx","../../core/src/runs/LogsScrollingTable.tsx","../../core/src/runs/RunActionButtons.tsx","../../core/src/runs/RunDetails.tsx","../../core/src/runs/RunFragments.tsx","../../core/src/runs/getRunFilterProviders.ts","../../core/src/runs/logNodeLevel.tsx","../../core/src/runs/useJobReExecution.tsx","../../ui/src/components/CursorControls.tsx"],"sourcesContent":["import {\n  Box,\n  Checkbox,\n  Colors,\n  FontFamily,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  SpinnerWrapper,\n  SplitPanelContainer,\n  useViewport,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {withMiddleTruncation} from '../app/Util';\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {CancelRunButton} from '../runs/RunActionButtons';\nimport {\n  EMPTY_RUN_METADATA,\n  IRunMetadataDict,\n  IStepMetadata,\n  IStepState,\n} from '../runs/RunMetadataProvider';\nimport {runsPathWithFilters} from '../runs/RunsFilterInput';\nimport {StepSelection} from '../runs/StepSelection';\nimport {RunFragment} from '../runs/types/RunFragments.types';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\n\nimport {\n  BOTTOM_INSET,\n  BOX_DOT_MARGIN_Y,\n  BOX_DOT_SIZE,\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_HEIGHT,\n  BOX_MARGIN_Y,\n  BOX_SHOW_LABEL_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  CSS_DURATION,\n  DEFAULT_OPTIONS,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMode,\n  GanttChartPlacement,\n  GanttViewport,\n  LINE_SIZE,\n  MAX_SCALE,\n  MIN_SCALE,\n  TOP_INSET,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\nimport {\n  adjustLayoutWithRunMetadata,\n  boxStyleFor,\n  buildLayout,\n  BuildLayoutParams,\n  interestingQueriesFor,\n} from './GanttChartLayout';\nimport {GanttChartModeControl} from './GanttChartModeControl';\nimport {GanttChartTimescale} from './GanttChartTimescale';\nimport {GanttStatusPanel} from './GanttStatusPanel';\nimport {OptionsContainer, OptionsSpacer} from './VizComponents';\nimport {ZoomSlider} from './ZoomSlider';\nimport {useGanttChartMode} from './useGanttChartMode';\n\nexport {GanttChartMode} from './Constants';\n\nconst HIGHLIGHT_TIME_EVENT = 'gantt-highlight-time';\n\nlet highlightTimer: NodeJS.Timeout;\n\n/**\n * Set or clear the highlighted time on the Gantt chart. Goal of this convenience\n * method is to make the implementation (via event dispatch) private to this file.\n */\nexport function setHighlightedGanttChartTime(timestamp: null | string, debounced = true) {\n  clearTimeout(highlightTimer);\n\n  if (debounced) {\n    highlightTimer = setTimeout(() => setHighlightedGanttChartTime(timestamp, false), 100);\n  } else {\n    document.dispatchEvent(new CustomEvent(HIGHLIGHT_TIME_EVENT, {detail: timestamp}));\n  }\n}\n\ninterface GanttChartProps {\n  selection: StepSelection;\n  focusedTime: number | null;\n  runId: string;\n  graph: GraphQueryItem[];\n  options?: Partial<GanttChartLayoutOptions>;\n  metadata?: IRunMetadataDict;\n  toolbarActions?: React.ReactChild;\n\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n  onSetSelection: (query: string) => void;\n\n  // for storybooks\n  overrideNowTime?: number;\n}\n\ninterface GanttChartState {\n  options: GanttChartLayoutOptions;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {graph, onSetSelection, options, selection, toolbarActions} = props;\n  const [mode, setMode] = useGanttChartMode();\n  const [state, setState] = React.useState(() => ({\n    ...DEFAULT_OPTIONS,\n    ...options,\n    mode,\n  }));\n\n  const cachedLayout = React.useRef<GanttChartLayout | null>(null);\n  const cachedLayoutParams = React.useRef<BuildLayoutParams | null>(null);\n  const graphFiltered = filterByQuery(graph, selection.query);\n  const layoutParams = React.useMemo(\n    () => ({\n      nodes: state.hideUnselectedSteps ? graphFiltered.all : graph,\n      mode: state.mode,\n    }),\n    [graph, graphFiltered.all, state.hideUnselectedSteps, state.mode],\n  );\n\n  const layout = React.useMemo(() => {\n    const names = (ns: GraphQueryItem[]) => ns.map((n) => n.name).join(',');\n    if (\n      !cachedLayoutParams.current ||\n      names(cachedLayoutParams.current.nodes) !== names(layoutParams.nodes) ||\n      cachedLayoutParams.current.mode !== layoutParams.mode\n    ) {\n      cachedLayout.current = buildLayout(layoutParams);\n      cachedLayoutParams.current = layoutParams;\n    }\n    return cachedLayout.current!;\n  }, [layoutParams]);\n\n  const updateOptions = React.useCallback((changes: Partial<GanttChartLayoutOptions>) => {\n    setState((current) => ({...current, ...changes}));\n  }, []);\n\n  const onChangeMode = React.useCallback(\n    (mode: GanttChartMode) => {\n      updateOptions({mode});\n      setMode(mode);\n    },\n    [setMode, updateOptions],\n  );\n\n  const onUpdateQuery = React.useCallback(\n    (query: string) => {\n      onSetSelection(query || '*');\n    },\n    [onSetSelection],\n  );\n\n  const onDoubleClickStep = React.useCallback(\n    (stepKey: string) => {\n      const query = `*${stepKey}*`;\n      onUpdateQuery(selection.query !== query ? query : '*');\n    },\n    [onUpdateQuery, selection.query],\n  );\n\n  return (\n    <GanttChartContainer>\n      <OptionsContainer>\n        <GanttChartModeControl\n          value={state.mode}\n          onChange={onChangeMode}\n          hideTimedMode={state.hideTimedMode}\n        />\n        {state.mode === GanttChartMode.WATERFALL_TIMED && (\n          <>\n            <OptionsSpacer />\n            <div style={{width: 200}}>\n              <ZoomSlider value={state.zoom} onChange={(v) => updateOptions({zoom: v})} />\n            </div>\n            <OptionsSpacer />\n            <Checkbox\n              style={{marginBottom: 0}}\n              label=\"Hide not started steps\"\n              checked={state.hideWaiting}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                updateOptions({hideWaiting: e.target.checked})\n              }\n            />\n          </>\n        )}\n        <div style={{flex: 1}} />\n        {toolbarActions}\n      </OptionsContainer>\n      <GanttChartInner\n        {...props}\n        options={{...state}}\n        layout={layout}\n        graph={graph}\n        onUpdateQuery={onUpdateQuery}\n        onDoubleClickStep={onDoubleClickStep}\n        onChange={() =>\n          updateOptions({\n            hideUnselectedSteps: !state.hideUnselectedSteps,\n          })\n        }\n      />\n    </GanttChartContainer>\n  );\n};\n\ntype GanttChartInnerProps = GanttChartProps &\n  GanttChartState & {\n    graph: GraphQueryItem[];\n    layout: GanttChartLayout;\n    onUpdateQuery: (value: string) => void;\n    onDoubleClickStep: (stepName: string) => void;\n    onChange: () => void;\n  };\n\nconst GanttChartInner = (props: GanttChartInnerProps) => {\n  const {viewport, containerProps, onMoveToViewport} = useViewport();\n  const [hoveredStep, setHoveredNodeName] = React.useState<string | null>(null);\n  const [hoveredTime, setHoveredTime] = React.useState<number | null>(null);\n  const [nowMs, setNowMs] = React.useState<number>(() => props.overrideNowTime || Date.now());\n  const {options, metadata, selection} = props;\n  const animationRequest = React.useRef<number | null>(null);\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n\n  // The slider in the UI updates `options.zoom` from 1-100. We convert that value\n  // into a px-per-ms \"scale\", where the minimum is the value required to zoom-to-fit.\n  // To make the slider feel more linear, we convert the input from log10 to logE.\n  let minScale = MIN_SCALE;\n  if (viewport.width && metadata && metadata.startedPipelineAt) {\n    const zoomToFitWidthPx = Math.max(1, viewport.width - 150);\n    const elapsedMs = Math.max(1, nowMs - metadata.startedPipelineAt);\n    minScale = zoomToFitWidthPx / elapsedMs;\n  }\n\n  const scale = Math.exp(\n    Math.log(minScale) + ((Math.log(MAX_SCALE) - Math.log(minScale)) / 100) * options.zoom,\n  );\n\n  const animate = React.useCallback(() => {\n    setNowMs(props.overrideNowTime || Date.now());\n    animationRequest.current = requestAnimationFrame(animate);\n  }, [props.overrideNowTime]);\n\n  const exitedAt = metadata?.exitedAt;\n\n  // When the run is complete, stop the animation. We also do this when the WebSocket is lost,\n  // since we would just be animating endlessly with no new logs.\n  React.useEffect(() => {\n    if (scale === 0 || lostWebsocket || exitedAt) {\n      animationRequest.current && cancelAnimationFrame(animationRequest.current);\n    }\n\n    // Set the final timestamp.\n    if (exitedAt) {\n      setNowMs(exitedAt);\n    }\n  }, [scale, lostWebsocket, exitedAt]);\n\n  // Kick off the Gantt animation. This will continue until the effect above determines that\n  // the run is complete or that the connection is lost.\n  React.useEffect(() => {\n    animationRequest.current = requestAnimationFrame(animate);\n    return () => {\n      animationRequest.current && cancelAnimationFrame(animationRequest.current);\n    };\n  }, [animate]);\n\n  // Listen for events specifying hover time (eg: a marker at a particular timestamp)\n  // and sync them to our React state for display.\n  React.useEffect(() => {\n    const listener = (e: CustomEvent) => setHoveredTime(e.detail);\n    document.addEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n    return () => document.removeEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n  });\n\n  // The `layout` we receive has been laid out and the rows / \"waterfall\" are final,\n  // but it doesn't incorporate the display scale or run metadata. We stretch and\n  // shift the layout boxes using this data to create the final layout for display.\n  const layout = adjustLayoutWithRunMetadata(\n    props.layout,\n    options,\n    metadata || EMPTY_RUN_METADATA,\n    scale,\n    nowMs,\n  );\n  const layoutSize = {\n    width: Math.max(0, ...layout.boxes.map((b) => b.x + b.width + BOX_SPACING_X)),\n    height: Math.max(0, ...layout.boxes.map((b) => TOP_INSET + b.y * BOX_HEIGHT + BOTTOM_INSET)),\n  };\n\n  React.useEffect(() => {\n    const node = layout.boxes.find((b) => selection.keys.includes(b.node.name));\n    if (!node) {\n      return;\n    }\n    const bounds = boundsForBox(node);\n    const x = (bounds.maxX + bounds.minX) / 2 - viewport.width / 2;\n    const y = (bounds.maxY + bounds.minY) / 2 - viewport.height / 2;\n    onMoveToViewport({left: x, top: y}, true);\n  }, [selection]); // eslint-disable-line\n\n  const highlightedMs: number[] = [];\n  if (props.focusedTime) {\n    highlightedMs.push(props.focusedTime);\n  }\n\n  if (hoveredTime) {\n    highlightedMs.push(hoveredTime);\n  } else if (selection.keys.length > 0) {\n    const selectedMeta = selection.keys\n      .map((stepKey) => metadata?.steps[stepKey])\n      .filter((x): x is IStepMetadata => x !== undefined);\n    const sortedSelectedSteps = selectedMeta.sort((a, b) =>\n      a.start && b.start ? a.start - b.start : 0,\n    );\n    const firstMeta = sortedSelectedSteps[0];\n    const lastMeta = sortedSelectedSteps[sortedSelectedSteps.length - 1];\n    if (firstMeta?.start) {\n      highlightedMs.push(firstMeta.start);\n    }\n    if (lastMeta?.end) {\n      highlightedMs.push(lastMeta.end);\n    }\n  }\n\n  const measurementComplete = viewport.width > 0;\n\n  const content = (\n    <>\n      {options.mode === GanttChartMode.WATERFALL_TIMED && measurementComplete && (\n        <GanttChartTimescale\n          scale={scale}\n          viewport={viewport}\n          layoutSize={layoutSize}\n          startMs={metadata?.startedPipelineAt || 0}\n          highlightedMs={highlightedMs}\n          nowMs={nowMs}\n        />\n      )}\n      <div style={{overflow: 'scroll', flex: 1}} {...containerProps}>\n        <div style={{position: 'relative', marginBottom: 70, ...layoutSize}}>\n          {measurementComplete && (\n            <GanttChartViewportContents\n              options={options}\n              metadata={metadata || EMPTY_RUN_METADATA}\n              layout={layout}\n              hoveredStep={hoveredStep}\n              focusedSteps={selection.keys}\n              viewport={viewport}\n              setHoveredNodeName={setHoveredNodeName}\n              onClickStep={props.onClickStep}\n              onDoubleClickStep={props.onDoubleClickStep}\n            />\n          )}\n        </div>\n      </div>\n\n      <GraphQueryInputContainer>\n        {lostWebsocket ? (\n          <WebsocketWarning>\n            <Box flex={{justifyContent: 'space-around'}} margin={{bottom: 12}}>\n              <Group\n                direction=\"row\"\n                spacing={8}\n                background={`${Colors.Yellow500}26`}\n                padding={{vertical: 8, horizontal: 12}}\n                alignItems=\"flex-start\"\n              >\n                <Icon name=\"warning\" color={Colors.Yellow700} />\n                <div style={{maxWidth: '400px', whiteSpace: 'normal', overflow: 'hidden'}}>\n                  <strong>Lost connection to Dagit server.</strong>\n                  <span>\n                    {` Verify that your instance is responding to requests at ${rootServerURI} and reload the page.`}\n                  </span>\n                </div>\n              </Group>\n            </Box>\n          </WebsocketWarning>\n        ) : null}\n        <FilterInputsBackgroundBox flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <GraphQueryInput\n            items={props.graph}\n            value={props.selection.query}\n            placeholder=\"Type a step subset\"\n            onChange={props.onUpdateQuery}\n            presets={metadata ? interestingQueriesFor(metadata, layout) : undefined}\n            className={selection.keys.length > 0 ? 'has-step' : ''}\n          />\n          <Checkbox\n            checked={options.hideUnselectedSteps}\n            label=\"Hide unselected steps\"\n            onChange={props.onChange}\n          />\n        </FilterInputsBackgroundBox>\n      </GraphQueryInputContainer>\n    </>\n  );\n\n  return metadata ? (\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={content}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          {...props}\n          nowMs={nowMs}\n          metadata={metadata}\n          onHighlightStep={(name) => setHoveredNodeName(name)}\n        />\n      }\n    />\n  ) : (\n    content\n  );\n};\n\ninterface GanttChartViewportContentsProps {\n  options: GanttChartLayoutOptions;\n  metadata: IRunMetadataDict;\n  layout: GanttChartLayout;\n  hoveredStep: string | null;\n  focusedSteps: string[];\n  viewport: GanttViewport;\n  setHoveredNodeName: (name: string | null) => void;\n  onDoubleClickStep: (step: string) => void;\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n}\n\nconst GanttChartViewportContents: React.FC<GanttChartViewportContentsProps> = (props) => {\n  const {viewport, layout, hoveredStep, focusedSteps, metadata, options} = props;\n  const items: React.ReactChild[] = [];\n\n  // To avoid drawing zillions of DOM nodes, we render only the boxes + lines that\n  // intersect with the current viewport.\n  const intersectsViewport = (bounds: Bounds) =>\n    bounds.minX < viewport.left + viewport.width &&\n    bounds.maxX > viewport.left &&\n    bounds.minY < viewport.top + viewport.height &&\n    bounds.maxY > viewport.top;\n\n  // We track the number of lines that end at each X value (they go over and then down,\n  // so this tracks where the vertical lines are). We shift lines by {count}px if there\n  // are others at the same X so wide \"tracks\" show you where data is being collected.\n  const verticalLinesAtXCoord: {[x: string]: number} = {};\n\n  if (options.mode !== GanttChartMode.FLAT) {\n    layout.boxes.forEach((box) => {\n      box.children.forEach((child, childIdx) => {\n        const bounds = boundsForLine(box, child);\n        if (!intersectsViewport(bounds)) {\n          return;\n        }\n        const childNotDrawn = !layout.boxes.includes(child);\n        const childWaiting = metadata ? !metadata.steps[child.node.name]?.state : false;\n\n        const overlapAtXCoord = verticalLinesAtXCoord[bounds.maxX] || 0;\n        verticalLinesAtXCoord[bounds.maxX] = overlapAtXCoord + 1;\n\n        items.push(\n          <GanttLine\n            darkened={\n              (focusedSteps?.includes(box.node.name) || hoveredStep) === box.node.name ||\n              (focusedSteps?.includes(child.node.name) || hoveredStep) === child.node.name\n            }\n            dotted={childNotDrawn || childWaiting}\n            key={`${box.key}-${child.key}-${childIdx}`}\n            depNotDrawn={childNotDrawn}\n            depIdx={overlapAtXCoord}\n            {...bounds}\n          />,\n        );\n      });\n    });\n  }\n\n  layout.boxes.forEach((box) => {\n    const bounds = boundsForBox(box);\n    const useDot = box.width === BOX_DOT_WIDTH_CUTOFF;\n    if (!intersectsViewport(bounds)) {\n      return;\n    }\n\n    items.push(\n      <div\n        key={box.key}\n        data-tooltip={box.node.name}\n        onClick={(evt: React.MouseEvent<any>) => props.onClickStep(box.node.name, evt)}\n        onDoubleClick={() => props.onDoubleClickStep(box.node.name)}\n        onMouseEnter={() => props.setHoveredNodeName(box.node.name)}\n        onMouseLeave={() => props.setHoveredNodeName(null)}\n        className={`\n            chart-element\n            ${useDot ? 'dot' : 'box'}\n            ${focusedSteps.includes(box.node.name) && 'focused'}\n            ${hoveredStep === box.node.name && 'hovered'}\n            ${isDynamicStep(box.node.name) && 'dynamic'}`}\n        style={{\n          left: bounds.minX,\n          top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n          width: useDot ? BOX_DOT_SIZE : box.width,\n          ...boxStyleFor(box.state, {metadata, options}),\n        }}\n      >\n        {box.state === IStepState.RUNNING ? <Spinner purpose=\"body-text\" /> : undefined}\n        {truncatedBoxLabel(box)}\n      </div>,\n    );\n  });\n\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    // Note: We sort the markers from left to right so that they're added to the DOM in that\n    // order and a long one doesn't make ones \"behind it\" unclickable.\n    layout.markers\n      .map((marker, idx) => ({marker, idx, bounds: boundsForBox(marker)}))\n      .filter(({bounds}) => intersectsViewport(bounds))\n      .sort((a, b) => a.bounds.minX - b.bounds.minX)\n      .forEach(({marker, bounds, idx}) => {\n        const useDot = marker.width === BOX_DOT_WIDTH_CUTOFF;\n\n        items.push(\n          <div\n            key={idx}\n            data-tooltip={marker.key}\n            className={`\n            chart-element\n            ${useDot ? 'marker-dot' : 'marker-whiskers'}`}\n            style={{\n              left: bounds.minX,\n              top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n              width: useDot ? BOX_DOT_SIZE : marker.width,\n            }}\n          >\n            <div />\n          </div>,\n        );\n      });\n  }\n\n  return <>{items}</>;\n};\n\ninterface Bounds {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n/**\n * Returns the top left + bottom right bounds for the provided Gantt chart box\n * so that the box can be drawn and tested for intersection with the viewport.\n */\nconst boundsForBox = (a: GanttChartPlacement): Bounds => {\n  return {\n    minX: a.x,\n    minY: TOP_INSET + a.y * BOX_HEIGHT,\n    maxX: a.x + a.width,\n    maxY: TOP_INSET + a.y * BOX_HEIGHT + BOX_HEIGHT,\n  };\n};\n\n/**\n * Returns the top left + bottom right bounds for the line between two Gantt\n * chart boxes. The boxes do not need to be provided in left -> right order.\n * @param a: GanttChartBox\n */\nconst boundsForLine = (a: GanttChartBox, b: GanttChartBox): Bounds => {\n  if (b.y < a.y) {\n    [a, b] = [b, a];\n  }\n\n  const aIsDot = a.width === BOX_DOT_WIDTH_CUTOFF;\n  const aCenterY = aIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const bIsDot = b.width === BOX_DOT_WIDTH_CUTOFF;\n  const bCenterY = bIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const straight = b.y === a.y;\n\n  // Line comes out of the center of the right side of the box\n  const minX = Math.min(a.x + a.width, b.x + b.width);\n  const minY = TOP_INSET + (straight ? a.y * BOX_HEIGHT + aCenterY : a.y * BOX_HEIGHT + aCenterY);\n\n  // Line ends on the center left edge of the box if it is on the\n  // same line, or drops into the top center of the box if it's below.\n  const maxX = straight\n    ? Math.max(a.x, b.x)\n    : Math.max(a.x + a.width / 2, b.x + (bIsDot ? BOX_DOT_SIZE : b.width) / 2);\n  const maxY = straight\n    ? TOP_INSET + b.y * BOX_HEIGHT + bCenterY\n    : TOP_INSET + b.y * BOX_HEIGHT + (bIsDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y);\n\n  return {minX, minY, maxX, maxY};\n};\n\n/**\n * Renders a line on the Gantt visualization using a thin horizontal <div> and\n * a thin vertical <div> as necessary.\n */\nconst GanttLine = React.memo(\n  ({\n    minX,\n    minY,\n    maxX,\n    maxY,\n    dotted,\n    darkened,\n    depIdx,\n    depNotDrawn,\n  }: {\n    dotted: boolean;\n    darkened: boolean;\n    depIdx: number;\n    depNotDrawn: boolean;\n  } & Bounds) => {\n    const border = `${LINE_SIZE}px ${dotted ? 'dotted' : 'solid'} ${\n      darkened ? Colors.Gray700 : Colors.Gray300\n    }`;\n\n    const maxXAvoidingOverlap = maxX + (depIdx % 10) * LINE_SIZE;\n\n    return (\n      <>\n        <div\n          className=\"line\"\n          style={{\n            height: 1,\n            left: minX,\n            width: depNotDrawn ? 50 : maxXAvoidingOverlap - minX,\n            top: minY - 1,\n            borderTop: border,\n            zIndex: darkened ? 100 : 1,\n          }}\n        />\n        {minY !== maxY && !depNotDrawn && (\n          <div\n            className=\"line\"\n            style={{\n              width: 1,\n              left: maxXAvoidingOverlap,\n              top: minY - LINE_SIZE / 2,\n              height: maxY - minY,\n              borderRight: border,\n              zIndex: darkened ? 100 : 1,\n            }}\n          />\n        )}\n      </>\n    );\n  },\n  isEqual,\n);\n\nfunction truncatedBoxLabel(box: GanttChartBox) {\n  if (box.width <= BOX_SHOW_LABEL_WIDTH_CUTOFF) {\n    return undefined;\n  }\n\n  // Note: The constants here must be in sync with the CSS immediately below\n  const totalPadding = 7 + (box.state === IStepState.RUNNING ? 16 : 0);\n  const maxLength = (box.width - totalPadding) / 6.2;\n\n  return withMiddleTruncation(box.node.name, {maxLength});\n}\n\n// Note: It is much faster to use standard CSS class selectors here than make\n// each box and line a styled-component because all styled components register\n// listeners for the \"theme\" React context.\nconst GanttChartContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  user-select: none;\n  background: ${Colors.White};\n\n  .line {\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n  }\n\n  .chart-element {\n    font-size: 12px;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear;\n    display: inline-block;\n    position: absolute;\n    color: white;\n    overflow: hidden;\n    user-select: text;\n    z-index: 2;\n\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  .dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid transparent;\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n\n  .box {\n    /* Note: padding + font changes may also impact truncatedBoxLabel */\n\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    padding: 3px;\n    padding-right: 1px;\n    border: 1px solid transparent;\n    border-radius: 2px;\n    white-space: nowrap;\n    font-family: ${FontFamily.monospace};\n    font-size: 12.5px;\n    font-weight: 700;\n    line-height: 15px;\n\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n\n    &.focused {\n      border: 1px solid ${Colors.Gray900};\n      box-shadow: 0 0 0 2px ${Colors.Yellow500};\n    }\n    &.hovered {\n      border: 1px solid ${Colors.Gray800};\n    }\n    &.dynamic {\n      filter: brightness(125%);\n    }\n\n    ${SpinnerWrapper} {\n      display: inline-block;\n      vertical-align: text-bottom;\n      padding-right: 4px;\n    }\n  }\n\n  .marker-dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid rgb(27, 164, 206);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n  .marker-whiskers {\n    display: inline-block;\n    position: absolute;\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    background: rgba(27, 164, 206, 0.09);\n    border-left: 1px solid rgba(27, 164, 206, 0.6);\n    border-right: 1px solid rgba(27, 164, 206, 0.6);\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear;\n\n    & > div {\n      border-bottom: 1px dashed rgba(27, 164, 206, 0.6);\n      height: ${(BOX_HEIGHT - BOX_MARGIN_Y * 2) / 2}px;\n    }\n  }\n`;\n\nconst WebsocketWarning = styled.div`\n  position: absolute;\n  bottom: 100%;\n  color: ${Colors.Yellow700};\n  width: 100%;\n`;\n\nconst GraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nconst FilterInputsBackgroundBox = styled(Box)`\n  background: radial-gradient(${Colors.Gray50} 0%, rgba(255, 255, 255, 0) 100%);\n  padding: 15px 15px 0px 15px;\n`;\n\nexport const GanttChartLoadingState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <div style={{margin: 'auto', marginTop: 100}}>\n          <Spinner purpose=\"section\" />\n        </div>\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          graph={[]}\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n\nexport const QueuedState = ({run}: {run: RunFragment}) => (\n  <GanttChartContainer>\n    <OptionsContainer style={{justifyContent: 'flex-end'}}>\n      <CancelRunButton run={run} />\n    </OptionsContainer>\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <NonIdealState\n          icon=\"arrow_forward\"\n          title=\"Run queued\"\n          description=\"This run is queued for execution and will start soon.\"\n          action={\n            <Link to={runsPathWithFilters([{token: 'status', value: 'QUEUED'}])}>\n              View queued runs\n            </Link>\n          }\n        />\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          graph={[]}\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={run.id}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n","import {ButtonGroup, ButtonGroupItem} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nexport const GanttChartModeControl: React.FC<{\n  value: GanttChartMode;\n  hideTimedMode: boolean;\n  onChange: (mode: GanttChartMode) => void;\n}> = React.memo(({value, onChange, hideTimedMode}) => {\n  const buttons: ButtonGroupItem<GanttChartMode>[] = [\n    {id: GanttChartMode.FLAT, icon: 'gantt_flat', tooltip: 'Flat view'},\n    {id: GanttChartMode.WATERFALL, icon: 'gantt_waterfall', tooltip: 'Waterfall view'},\n  ];\n\n  if (!hideTimedMode) {\n    buttons.push({\n      id: GanttChartMode.WATERFALL_TIMED,\n      icon: 'timer',\n      tooltip: 'Timed view',\n    });\n  }\n\n  const activeItems = React.useMemo(() => new Set([value]), [value]);\n  const onClick = React.useCallback((id: GanttChartMode) => onChange(id), [onChange]);\n\n  return <ButtonGroup activeItems={activeItems} buttons={buttons} onClick={onClick} />;\n});\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\n\nimport {CSS_DURATION, GanttViewport, LEFT_INSET} from './Constants';\n\nconst ONE_MIN = 60 * 1000;\nconst ONE_HOUR = 60 * 60 * 1000;\n\n// If we're zoomed in to second or minute resolution but showing large values,\n// switch to the \"1:00:05\" format used elsewhere in Dagit.\nconst subsecondResolutionLabel = (ms: number) =>\n  ms > 5 * ONE_MIN ? formatElapsedTime(ms) : `${(ms / 1000).toFixed(1)}s`;\nconst secondResolutionLabel = (ms: number) =>\n  ms > 5 * ONE_MIN ? formatElapsedTime(ms) : `${(ms / 1000).toFixed(0)}s`;\nconst minuteResolutionLabel = (ms: number) =>\n  ms > 59 * ONE_MIN ? formatElapsedTime(ms) : `${Math.round(ms / ONE_MIN)}m`;\nconst hourResolutionLabel = (ms: number) => `${Math.round(ms / ONE_HOUR)}h`;\n\n// We want to gracefully transition the tick marks shown as you zoom, but it's\n// nontrivial to programatically pick good intervals. (500ms => 1s => 5s, etc.)\n// This lookup table defines the available tick mark intervals and the labeling\n// that should be used for each one(\"2:00\" or \"2m\" or \"2s\" or \"0.05s\", etc.).\n//\n// We use the first configuration that places ticks at least 80 pixels apart\n// at the rendered scale.\n//\nconst TICK_CONFIG = [\n  {\n    tickIntervalMs: 0.5 * 1000,\n    tickLabels: subsecondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 1 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 5 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 10 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 30 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 60 * 1000,\n    tickLabels: secondResolutionLabel,\n  },\n  {\n    tickIntervalMs: 2 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 5 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 10 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 20 * 60 * 1000,\n    tickLabels: minuteResolutionLabel,\n  },\n  {\n    tickIntervalMs: 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n  {\n    tickIntervalMs: 3 * 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n  {\n    tickIntervalMs: 6 * 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n  {\n    tickIntervalMs: 12 * 60 * 60 * 1000,\n    tickLabels: hourResolutionLabel,\n  },\n];\n\ninterface GanttChartTimescaleProps {\n  scale: number;\n  viewport: GanttViewport;\n  layoutSize: {width: number; height: number};\n  nowMs: number;\n  startMs: number;\n  highlightedMs: number[];\n}\n\nconst TICKS_ROW_HEIGHT = 32;\nconst TICK_LABEL_WIDTH = 56;\nconst MIN_PX_BETWEEN_TICKS = 80;\n\nexport const GanttChartTimescale = ({\n  scale,\n  viewport,\n  nowMs,\n  startMs,\n  highlightedMs,\n  layoutSize,\n}: GanttChartTimescaleProps) => {\n  const transform = `translate(${LEFT_INSET - viewport.left}px)`;\n  const ticks: React.ReactNode[] = [];\n  const lines: React.ReactNode[] = [];\n\n  const pxPerMs = scale;\n  const tickConfig = TICK_CONFIG.find((t) => t.tickIntervalMs * pxPerMs > MIN_PX_BETWEEN_TICKS);\n  if (tickConfig) {\n    const {tickIntervalMs, tickLabels} = tickConfig;\n    const pxPerTick = tickIntervalMs * pxPerMs;\n\n    let tickMs = Math.floor(viewport.left / pxPerTick) * tickIntervalMs;\n    let tickX = tickMs * pxPerMs;\n\n    while (tickX < viewport.left + viewport.width) {\n      tickMs += tickIntervalMs;\n      tickX += pxPerTick;\n      if (tickX - viewport.left < 10) {\n        continue;\n      }\n      const key = `${tickMs.toFixed(2)}`;\n      const label = tickLabels(tickMs);\n      lines.push(<div className=\"line\" key={key} style={{left: tickX, transform}} />);\n      ticks.push(\n        <div className=\"tick\" key={key} style={{left: tickX - TICK_LABEL_WIDTH / 2, transform}}>\n          {label}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <TimescaleContainer>\n      <TimescaleTicksContainer>\n        {ticks}\n        {highlightedMs.length === 2 && (\n          <div\n            key=\"highlight-duration\"\n            className=\"tick duration\"\n            style={{\n              left: (highlightedMs[0]! - startMs) * pxPerMs + 2,\n              width: (highlightedMs[1]! - highlightedMs[0]!) * pxPerMs - 2,\n              transform,\n            }}\n          >\n            {formatElapsedTime(highlightedMs[1]! - highlightedMs[0]!)}\n          </div>\n        )}\n        {highlightedMs.map((ms, idx) => {\n          const timeX = (ms - startMs) * pxPerMs;\n          const labelOffset =\n            idx === 0 && timeX > TICK_LABEL_WIDTH + viewport.left ? -(TICK_LABEL_WIDTH - 1) : 0;\n\n          return (\n            <div\n              key={`highlight-${idx}`}\n              className=\"tick highlight\"\n              style={{left: timeX + labelOffset, transform}}\n            >\n              {subsecondResolutionLabel(ms - startMs)}\n            </div>\n          );\n        })}\n      </TimescaleTicksContainer>\n      <TimescaleLinesContainer style={{width: viewport.width, height: viewport.height}}>\n        {lines}\n        {highlightedMs.map((ms, idx) => (\n          <div\n            className=\"line highlight\"\n            key={`highlight-${idx}`}\n            style={{left: (ms - startMs) * pxPerMs + (idx === 0 ? -1 : 0), transform}}\n          />\n        ))}\n        {nowMs > startMs && (\n          <div\n            className=\"fog-of-war\"\n            style={{\n              left: (nowMs - startMs) * pxPerMs,\n              width: Math.max(layoutSize.width, viewport.width) - (nowMs - startMs) * pxPerMs + 100,\n              transform,\n            }}\n          ></div>\n        )}\n      </TimescaleLinesContainer>\n    </TimescaleContainer>\n  );\n};\n\nconst TimescaleContainer = styled.div`\n  width: 100%;\n\n  & .tick {\n    position: absolute;\n    padding-top: 7px;\n    width: ${TICK_LABEL_WIDTH}px;\n    height: ${TICKS_ROW_HEIGHT}px;\n    box-sizing: border-box;\n    transition: left ${CSS_DURATION}ms linear, width ${CSS_DURATION}ms linear;\n    text-align: center;\n  }\n  & .tick.duration {\n    color: ${Colors.Gray500};\n    background: ${Colors.Gray100};\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .tick.highlight {\n    color: white;\n    height: ${TICKS_ROW_HEIGHT + 2}px;\n    background: ${Colors.Gray900};\n  }\n  & .line {\n    position: absolute;\n    border-left: 1px solid #f0f0f0;\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n  }\n  & .line.highlight {\n    border-left: 2px solid ${Colors.Gray900};\n    z-index: 1111;\n    top: -1px;\n  }\n\n  & .fog-of-war {\n    position: absolute;\n    background: ${Colors.Gray50};\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n    width: 100%;\n  }\n`;\n\nconst TimescaleTicksContainer = styled.div`\n  height: ${TICKS_ROW_HEIGHT}px;\n  z-index: 4;\n  position: relative;\n  background: ${Colors.White};\n  display: flex;\n  color: ${Colors.Gray500};\n  font-size: 13px;\n  font-family: ${FontFamily.monospace};\n  box-shadow: inset 0 -1px ${Colors.KeylineGray};\n  overflow: hidden;\n`;\n\nconst TimescaleLinesContainer = styled.div`\n  z-index: 0;\n  top: ${TICKS_ROW_HEIGHT}px;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  overflow: hidden;\n`;\n","import {Colors, SliderStyles} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\n/**\n * Renders a horizontal slider that lets you adjust the graph's relative zoom from 1-100.\n * It uses Blueprint CSS but not the Slider component, because that renders twice and\n * forces a DOM layout to determine it's size (I think for tick marks, which we aren't using)\n */\nexport const ZoomSlider: React.FC<{\n  value: number;\n  onChange: (v: number) => void;\n}> = React.memo((props) => {\n  return (\n    <ZoomSliderContainer\n      $fillColor={Colors.Gray600}\n      className=\"bp4-slider bp4-slider-unlabeled\"\n      onMouseDown={(e: React.MouseEvent) => {\n        const rect = e.currentTarget.closest('.bp4-slider')!.getBoundingClientRect();\n\n        let initialX: number;\n        if (e.target instanceof HTMLElement && e.target.classList.contains('bp4-slider-handle')) {\n          initialX = e.pageX;\n        } else {\n          initialX = rect.left + (props.value / 100) * rect.width;\n        }\n\n        const onUpdate = (e: MouseEvent) => {\n          const nextValue = props.value + (e.pageX - initialX) * (100 / rect.width);\n          props.onChange(Math.max(0, Math.min(100, nextValue)));\n        };\n        const onRelease = (e: MouseEvent) => {\n          onUpdate(e);\n          document.removeEventListener('mousemove', onUpdate);\n          document.removeEventListener('mouseup', onRelease);\n        };\n        document.addEventListener('mousemove', onUpdate);\n        document.addEventListener('mouseup', onRelease);\n      }}\n    >\n      <div className=\"bp4-slider-track\">\n        <div className=\"bp4-slider-progress\" style={{left: 0, right: 0, top: 0}} />\n        <div\n          className=\"bp4-slider-progress bp4-intent-primary\"\n          style={{left: 0, right: `${100 - props.value}%`, top: 0}}\n        />\n      </div>\n      <div className=\"bp4-slider-axis\" />\n      <span\n        className=\"bp4-slider-handle\"\n        style={{left: `calc(${props.value}% - 8px)`}}\n        tabIndex={0}\n      />\n    </ZoomSliderContainer>\n  );\n});\n\nconst ZoomSliderContainer = styled.div`\n  ${SliderStyles}\n`;\n","import {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {GanttChartMode} from './Constants';\n\nconst GANTT_CHART_MODE_KEY = 'GanttChartModePreference';\n\nconst validateSavedMode = (storedValue: string) =>\n  storedValue === GanttChartMode.FLAT ||\n  storedValue === GanttChartMode.WATERFALL ||\n  storedValue === GanttChartMode.WATERFALL_TIMED\n    ? storedValue\n    : GanttChartMode.WATERFALL_TIMED;\n\nexport const useGanttChartMode = () => {\n  return useStateWithStorage(GANTT_CHART_MODE_KEY, validateSavedMode);\n};\n","import {Colors, CursorControlsContainer} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const OptionsContainer = styled.div`\n  min-height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 5px 12px 5px 24px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  background: ${Colors.White};\n  flex-shrink: 0;\n  flex-wrap: wrap;\n  z-index: 3;\n\n  ${CursorControlsContainer} {\n    margin-top: 0;\n    gap: 8px;\n\n    @media (max-width: 1100px) {\n      & .hideable-button-text {\n        display: none;\n      }\n      & div[role='img'] {\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const OptionsDivider = styled.div`\n  width: 30px;\n  height: 25px;\n`;\n\nexport const OptionsSpacer = styled.div`\n  width: 30px;\n`;\n","import {gql} from '@apollo/client';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {StepKind} from '../graphql/types';\nimport {IStepMetadata, IStepState} from '../runs/RunMetadataProvider';\n\nimport {invocationsOfPlannedDynamicStep, replacePlannedIndex} from './DynamicStepSupport';\nimport {ExecutionPlanToGraphFragment} from './types/toGraphQueryItems.types';\n\n/**\n * Converts a Run execution plan into a tree of `GraphQueryItem` items that\n * can be used as the input to the \"solid query\" filtering algorithm or rendered\n * into the Gannt visualization or the SVG DAG visualization. The idea\n * is that this data structure is generic, but it's really a fake solid tree.\n *\n * Pass runtimeStepKeys to duplicate dynamic step sub-trees for each occurrence of\n * the step key found at runtime.\n */\n\nexport const toGraphQueryItems = (\n  plan: ExecutionPlanToGraphFragment,\n  runtimeStepMetadata: {[key: string]: IStepMetadata},\n) => {\n  // Step 1: Find unresolved steps in the initial plan and build a mapping\n  // of their unresolved names to their resolved step keys, eg:\n  // \"multiply_input[*]\" => [\"multiply_input[1]\", \"multiply_input[2]\"]\n  const keyExpansionMap: {[key: string]: string[]} = {};\n  const runtimeStepKeys = Object.keys(runtimeStepMetadata);\n\n  for (const step of plan.steps) {\n    if (step.kind === StepKind.UNRESOLVED_MAPPED) {\n      const keys = invocationsOfPlannedDynamicStep(step.key, runtimeStepKeys);\n\n      // If the upstream steps have NOT succeeded, it's expected that there are zero runtime step keys\n      // matching the dynamic step. Until upstream steps run, we should show the [*] placeholder item\n      // in the runtime graph (rather than just showing nothing.)\n      const invocationsHappened = step.inputs.every((i) =>\n        i.dependsOn.every((s) => IStepState.SUCCEEDED === runtimeStepMetadata[s.key]?.state),\n      );\n      if (!invocationsHappened && keys.length === 0) {\n        keyExpansionMap[step.key] = [step.key];\n        continue;\n      }\n      // The order matters here: add the planned dynamic step at the end, so when displaying the gantt\n      // chart, we can ignore planned dynamic step if any of its invocation exists (i.e. hide the\n      // unresolved node if any resolved node exists).\n      keyExpansionMap[step.key] = [...keys, step.key];\n    }\n  }\n\n  // Step 2: Create a graph node for each resolved step without any inputs or outputs.\n  const nodeTable: {[key: string]: GraphQueryItem} = {};\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] || [step.key];\n    for (const key of stepRuntimeKeys) {\n      nodeTable[key] = {\n        name: key,\n        inputs: [],\n        outputs: [],\n      };\n    }\n  }\n\n  // Step 3: For each step in the original plan, visit each input and create inputs/outputs\n  // in our Gantt Node result set.\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] || [step.key];\n    for (const key of stepRuntimeKeys) {\n      for (const input of step.inputs) {\n        // Add the input to our node in the result set\n        const nodeInput: GraphQueryItem['inputs'][0] = {dependsOn: []};\n        nodeTable[key]!.inputs.push(nodeInput);\n\n        // For each upstream step in the plan, map it to upstream nodes in the runtime graph\n        // and attach inputs / outputs to our result graph.\n        for (const upstream of input.dependsOn) {\n          let upstreamKeys = [];\n          if (step.kind === StepKind.UNRESOLVED_COLLECT) {\n            // If we are a collect, there may be N runtime keys fanning in to this input,\n            // fetch the keys if they exist or fall back to the sigle upstream step case.\n            upstreamKeys = keyExpansionMap[upstream.key] || [upstream.key];\n          } else {\n            // If the input was coming from an unresolved mapped step and WE are not a collector,\n            // assume our own dynamic key index applies to the upstream mapped step as well.\n            upstreamKeys = [\n              upstream.kind === StepKind.UNRESOLVED_MAPPED\n                ? replacePlannedIndex(upstream.key, key)\n                : upstream.key,\n            ];\n          }\n\n          for (const upstreamKey of upstreamKeys) {\n            if (!nodeTable[upstreamKey]) {\n              continue;\n            }\n            nodeInput.dependsOn.push({solid: {name: upstreamKey}});\n            let upstreamOutput: GraphQueryItem['outputs'][0] = nodeTable[upstreamKey]!.outputs[0]!;\n            if (!upstreamOutput) {\n              upstreamOutput = {dependedBy: []};\n              nodeTable[upstreamKey]!.outputs.push(upstreamOutput);\n            }\n            upstreamOutput.dependedBy.push({\n              solid: {name: key},\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return Object.values(nodeTable);\n};\n\nexport const EXECUTION_PLAN_TO_GRAPH_FRAGMENT = gql`\n  fragment ExecutionPlanToGraphFragment on ExecutionPlan {\n    steps {\n      key\n      kind\n      inputs {\n        dependsOn {\n          key\n          kind\n        }\n      }\n    }\n  }\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nconst OverflowFade = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  user-select: none;\n  pointer-events: none;\n  background: linear-gradient(to bottom, rgba(245, 248, 250, 0) 0%, rgba(245, 248, 250, 255) 100%);\n`;\n\nconst OverflowButtonContainer = styled.div`\n  position: absolute;\n  bottom: 6px;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst OverflowButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  font-size: 12px;\n  font-weight: 500;\n  background: rgba(100, 100, 100, 0.7);\n  border-radius: 4px;\n  line-height: 32px;\n  padding: 0 12px;\n  color: ${Colors.White};\n  &:hover {\n    background: rgba(100, 100, 100, 0.85);\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:active {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport class CellTruncationProvider extends React.Component<\n  {\n    children: React.ReactNode;\n    style: React.CSSProperties;\n    onExpand?: () => void;\n    forceExpandability?: boolean;\n  },\n  {isOverflowing: boolean}\n> {\n  state = {\n    isOverflowing: false,\n  };\n\n  private contentContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidMount() {\n    this.detectOverflow();\n  }\n\n  componentDidUpdate() {\n    this.detectOverflow();\n  }\n\n  detectOverflow() {\n    const child =\n      this.contentContainerRef.current && this.contentContainerRef.current.firstElementChild;\n\n    if (!child) {\n      return;\n    }\n\n    const isOverflowing =\n      typeof this.props.style.height === 'number' && child.scrollHeight > this.props.style.height;\n    if (isOverflowing !== this.state.isOverflowing) {\n      this.setState({isOverflowing});\n    }\n  }\n\n  defaultExpand() {\n    const message =\n      this.contentContainerRef.current && this.contentContainerRef.current.textContent;\n    message &&\n      showCustomAlert({\n        body: <div style={{whiteSpace: 'pre-wrap'}}>{message}</div>,\n      });\n  }\n\n  onView = () => {\n    const {onExpand} = this.props;\n    onExpand ? onExpand() : this.defaultExpand();\n  };\n\n  render() {\n    const style = {...this.props.style, overflow: 'hidden'};\n\n    return (\n      <div style={style}>\n        <div ref={this.contentContainerRef}>{this.props.children}</div>\n        {(this.state.isOverflowing || this.props.forceExpandability) && (\n          <>\n            <OverflowFade />\n            <OverflowButtonContainer>\n              <OverflowButton onClick={this.onView}>View full message</OverflowButton>\n            </OverflowButtonContainer>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent} from '@blueprintjs/core';\nimport {Box, Colors, Tag} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {assertUnreachable} from '../app/Util';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment.types';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\nimport {ErrorSource, DagsterEventType} from '../graphql/types';\nimport {\n  LogRowStructuredContentTable,\n  MetadataEntries,\n  MetadataEntryLink,\n} from '../metadata/MetadataEntry';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntry.types';\n\nimport {EventTypeColumn} from './LogsRowComponents';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {LogsRowStructuredFragment} from './types/LogsRow.types';\n\ninterface IStructuredContentProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n}\n\nexport const LogsRowStructuredContent: React.FC<IStructuredContentProps> = ({node, metadata}) => {\n  const location = useLocation();\n  const eventType = node.eventType as string;\n  switch (node.__typename) {\n    case 'ExecutionStepFailureEvent':\n      return (\n        <FailureContent\n          eventType={eventType}\n          error={node.error}\n          metadataEntries={node?.failureMetadata?.metadataEntries}\n          errorSource={node.errorSource}\n          message={node.error ? undefined : node.message}\n        />\n      );\n\n    case 'ExecutionStepUpForRetryEvent':\n      return <StepUpForRetryContent error={node.error} message={node.message} />;\n\n    case 'ExecutionStepStartEvent':\n      if (!node.stepKey || metadata.logCaptureSteps) {\n        return <DefaultContent message={node.message} eventType={eventType} />;\n      } else {\n        const currentQuery = qs.parse(location.search);\n        const updatedQuery = {\n          ...currentQuery,\n          logType: 'stdout',\n          logs: `query:${node.stepKey}`,\n          selection: node.stepKey,\n        };\n        const href = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n        return (\n          <DefaultContent message={node.message} eventType={eventType}>\n            <LogRowStructuredContentTable\n              rows={[\n                {\n                  label: 'step_logs',\n                  item: (\n                    <Link to={href} style={{color: 'inherit'}}>\n                      View Raw Step Output\n                    </Link>\n                  ),\n                },\n              ]}\n            />\n          </DefaultContent>\n        );\n      }\n    case 'ExecutionStepSkippedEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(173, 185, 152, 0.3)\"\n        />\n      );\n\n    case 'ExecutionStepRestartEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n\n    case 'ExecutionStepSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'ExecutionStepInputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.typeCheck.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'ExecutionStepOutputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <>\n            <MetadataEntries entries={node.typeCheck.metadataEntries} />\n            <MetadataEntries entries={node.metadataEntries} />\n          </>\n        </DefaultContent>\n      );\n    case 'StepExpectationResultEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventIntent={node.expectationResult.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.expectationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'MaterializationEvent':\n      return (\n        <AssetMetadataContent\n          message={node.message}\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'ObservationEvent':\n      return (\n        <AssetMetadataContent\n          message=\"\"\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'AssetMaterializationPlannedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'ObjectStoreOperationEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.operationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HandledOutputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LoadedInputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HookCompletedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookSkippedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookErroredEvent':\n      return <FailureContent eventType={eventType} error={node.error} />;\n    case 'AlertStartEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertSuccessEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertFailureEvent':\n      return <DefaultContent eventType={eventType} message={node.message} eventIntent=\"warning\" />;\n    case 'ResourceInitFailureEvent':\n    case 'RunFailureEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"danger\" />;\n    case 'RunSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'RunStartEvent':\n    case 'RunEnqueuedEvent':\n    case 'RunDequeuedEvent':\n    case 'RunStartingEvent':\n    case 'RunCancelingEvent':\n    case 'ResourceInitStartedEvent':\n    case 'ResourceInitSuccessEvent':\n    case 'StepWorkerStartedEvent':\n    case 'StepWorkerStartingEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'RunCanceledEvent':\n      return <FailureContent message={node.message} eventType={eventType} />;\n    case 'EngineEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(27,164,206,0.2)\"\n        >\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LogMessageEvent':\n      return <DefaultContent message={node.message} />;\n    case 'LogsCapturedEvent':\n      const currentQuery = qs.parse(location.search, {ignoreQueryPrefix: true});\n      const updatedQuery = {...currentQuery, logType: 'stdout', logFileKey: node.stepKey};\n      const rawLogsUrl = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n      const rawLogsLink = (\n        <Link to={rawLogsUrl} style={{color: 'inherit'}}>\n          View stdout / stderr\n        </Link>\n      );\n      const rows = node.stepKey\n        ? [\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ]\n        : [\n            {\n              label: 'step_keys',\n              item: <>{JSON.stringify(node.stepKeys)}</>,\n            },\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ];\n      return (\n        <DefaultContent eventType={eventType} message={node.message}>\n          <LogRowStructuredContentTable rows={rows} />\n        </DefaultContent>\n      );\n    default:\n      // This allows us to check that the switch is exhaustive because the union type should\n      // have been narrowed following each successive case to `never` at this point.\n      return assertUnreachable(node);\n  }\n};\n\n// Structured Content Renderers\n\nconst DefaultContent: React.FC<{\n  message: string;\n  eventType?: string;\n  eventColor?: string;\n  eventIntent?: Intent;\n  metadataEntries?: MetadataEntryFragment[];\n  children?: React.ReactElement;\n}> = ({message, eventType, eventColor, eventIntent, children}) => {\n  return (\n    <>\n      <EventTypeColumn>\n        {eventType && (\n          <Tag\n            intent={eventIntent}\n            style={\n              eventColor\n                ? {\n                    fontSize: '0.9em',\n                    color: 'black',\n                    background: eventColor,\n                  }\n                : {\n                    fontSize: '0.9em',\n                  }\n            }\n          >\n            {eventTypeToDisplayType(eventType)}\n          </Tag>\n        )}\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {message}\n        {children}\n      </Box>\n    </>\n  );\n};\n\nconst FailureContent: React.FC<{\n  message?: string;\n  eventType: string;\n  error?: PythonErrorFragment | null;\n  errorSource?: ErrorSource | null;\n  metadataEntries?: MetadataEntryFragment[];\n}> = ({message, error, errorSource, eventType, metadataEntries}) => {\n  let contextMessage = null;\n  let errorMessage = null;\n  let errorStack = null;\n  let errorCause = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n\n    // omit the outer stack for user code errors with a cause\n    // as the outer stack is just framework code\n    if (\n      error.stack.length &&\n      !(errorSource === ErrorSource.USER_CODE_ERROR && error.errorChain.length)\n    ) {\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    }\n\n    if (error.errorChain.length) {\n      errorCause = error.errorChain.map((chainLink, index) => (\n        <React.Fragment key={index}>\n          {chainLink.isExplicitLink\n            ? `The above exception was caused by the following exception:\\n`\n            : `The above exception occurred during handling of the following exception:\\n`}\n          <span style={{color: Colors.Red500}}>{`${chainLink.error.message}`}</span>\n          {chainLink.error.stack.length ? (\n            <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${chainLink.error.stack}`}</span>\n          ) : null}\n        </React.Fragment>\n      ));\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"danger\">\n          {eventTypeToDisplayType(eventType)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        <MetadataEntries entries={metadataEntries} />\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst StepUpForRetryContent: React.FC<{\n  message?: string;\n  error?: PythonErrorFragment | null;\n}> = ({message, error}) => {\n  let contextMessage = null;\n  let errorCause = null;\n  let errorMessage = null;\n  let errorStack = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    // If no cause, this was a `raise RetryRequest` inside the op. Show the trace for the main error.\n    if (!error.errorChain.length) {\n      errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    } else {\n      // If there is a cause, this was a different exception. Show that instead.\n      errorCause = (\n        <>\n          {error.errorChain.map((chainLink, index) => (\n            <React.Fragment key={index}>\n              {index === 0\n                ? `The retry request was caused by the following exception:\\n`\n                : `The above exception was caused by the following exception:\\n`}\n              <span style={{color: Colors.Red500}}>{`${chainLink.error.message}`}</span>\n              <span\n                style={{color: Colors.Red500}}\n              >{`\\nStack Trace:\\n${chainLink.error.stack}`}</span>\n            </React.Fragment>\n          ))}\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"warning\">\n          {eventTypeToDisplayType(DagsterEventType.STEP_UP_FOR_RETRY)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst AssetMetadataContent: React.FC<{\n  message: string;\n  assetKey: AssetKey | null;\n  metadataEntries: MetadataEntryFragment[];\n  eventType: string;\n  timestamp: string;\n}> = ({message, assetKey, metadataEntries, eventType, timestamp}) => {\n  if (!assetKey) {\n    return (\n      <DefaultContent message={message} eventType={eventType}>\n        <MetadataEntries entries={metadataEntries} />\n      </DefaultContent>\n    );\n  }\n\n  const to = assetDetailsPathForKey(assetKey, {asOf: timestamp});\n\n  const assetDashboardLink = (\n    <span style={{marginLeft: 10}}>\n      [<MetadataEntryLink to={to}>View Asset</MetadataEntryLink>]\n    </span>\n  );\n\n  return (\n    <DefaultContent message={message} eventType={eventType}>\n      <>\n        <LogRowStructuredContentTable\n          styles={metadataEntries?.length ? {paddingBottom: 0} : {}}\n          rows={[\n            {\n              label: 'asset_key',\n              item: (\n                <>\n                  {displayNameForAssetKey(assetKey)}\n                  {assetDashboardLink}\n                </>\n              ),\n            },\n          ]}\n        />\n        <MetadataEntries entries={metadataEntries} />\n      </>\n    </DefaultContent>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {setHighlightedGanttChartTime} from '../gantt/GanttChart';\nimport {LogLevel} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {CellTruncationProvider} from './CellTruncationProvider';\nimport {\n  EventTypeColumn,\n  Row,\n  OpColumn,\n  StructuredContent,\n  TimestampColumn,\n} from './LogsRowComponents';\nimport {LogsRowStructuredContent} from './LogsRowStructuredContent';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {LogsRowStructuredFragment, LogsRowUnstructuredFragment} from './types/LogsRow.types';\n\ninterface StructuredProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\ninterface StructuredState {\n  expanded: boolean;\n}\n\nexport class Structured extends React.Component<StructuredProps, StructuredState> {\n  onExpand = () => {\n    const {node, metadata} = this.props;\n\n    if (node.__typename === 'ExecutionStepFailureEvent') {\n      showCustomAlert({\n        title: 'Error',\n        body: (\n          <PythonErrorInfo\n            error={node.error ? node.error : node}\n            failureMetadata={node.failureMetadata}\n            errorSource={node.errorSource}\n          />\n        ),\n      });\n    } else if (node.__typename === 'ExecutionStepUpForRetryEvent') {\n      showCustomAlert({\n        title: 'Step Retry',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else if (\n      (node.__typename === 'EngineEvent' && node.error) ||\n      (node.__typename === 'RunFailureEvent' && node.error) ||\n      node.__typename === 'HookErroredEvent' ||\n      node.__typename === 'ResourceInitFailureEvent'\n    ) {\n      showCustomAlert({\n        title: 'Error',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else {\n      showCustomAlert({\n        title: node.stepKey || 'Info',\n        body: (\n          <StructuredContent>\n            <LogsRowStructuredContent node={node} metadata={metadata} />\n          </StructuredContent>\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <StructuredMemoizedContent\n          node={this.props.node}\n          metadata={this.props.metadata}\n          highlighted={this.props.highlighted}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_STRUCTURED_FRAGMENT = gql`\n  fragment LogsRowStructuredFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      eventType\n      timestamp\n      level\n      stepKey\n    }\n    ... on DisplayableEvent {\n      label\n      description\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ErrorEvent {\n      error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on MaterializationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ObservationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ExecutionStepFailureEvent {\n      errorSource\n      failureMetadata {\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepInputEvent {\n      inputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepOutputEvent {\n      outputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on StepExpectationResultEvent {\n      expectationResult {\n        success\n        label\n        description\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on HandledOutputEvent {\n      outputName\n      managerKey\n    }\n    ... on LoadedInputEvent {\n      inputName\n      managerKey\n      upstreamOutputName\n      upstreamStepKey\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      externalUrl\n      externalStdoutUrl\n      externalStderrUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst StructuredMemoizedContent: React.FC<{\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, metadata, highlighted}) => {\n  const stepKey = node.stepKey;\n  const step = stepKey ? metadata.steps[stepKey] : null;\n  const stepStartTime = step?.start;\n\n  return (\n    <Row\n      level={LogLevel.INFO}\n      onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n      onMouseLeave={() => setHighlightedGanttChartTime(null)}\n      highlighted={highlighted}\n    >\n      <TimestampColumn\n        time={'timestamp' in node ? node.timestamp : null}\n        runStartTime={metadata.startedPipelineAt}\n        stepStartTime={stepStartTime}\n      />\n      <OpColumn stepKey={'stepKey' in node && node.stepKey} />\n      <StructuredContent>\n        <LogsRowStructuredContent node={node} metadata={metadata} />\n      </StructuredContent>\n    </Row>\n  );\n});\n\nStructuredMemoizedContent.displayName = 'StructuredMemoizedContent';\n\ninterface UnstructuredProps {\n  node: LogsRowUnstructuredFragment;\n  style: React.CSSProperties;\n  highlighted: boolean;\n  metadata: IRunMetadataDict;\n}\n\nexport class Unstructured extends React.Component<UnstructuredProps> {\n  onExpand = () => {\n    showCustomAlert({\n      title: 'Log',\n      body: <div style={{whiteSpace: 'pre-wrap'}}>{this.props.node.message}</div>,\n    });\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <UnstructuredMemoizedContent\n          node={this.props.node}\n          highlighted={this.props.highlighted}\n          metadata={this.props.metadata}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_UNSTRUCTURED_FRAGMENT = gql`\n  fragment LogsRowUnstructuredFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n  }\n`;\n\nconst UnstructuredMemoizedContent: React.FC<{\n  node: LogsRowUnstructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, highlighted, metadata}) => {\n  const stepKey = node.stepKey;\n  const step = stepKey ? metadata.steps[stepKey] : null;\n  const stepStartTime = step?.start;\n\n  return (\n    <Row\n      level={node.level}\n      onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n      onMouseLeave={() => setHighlightedGanttChartTime(null)}\n      highlighted={highlighted}\n    >\n      <TimestampColumn\n        time={node.timestamp}\n        runStartTime={metadata.startedPipelineAt}\n        stepStartTime={stepStartTime}\n      />\n      <OpColumn stepKey={node.stepKey} />\n      <EventTypeColumn>\n        <span style={{marginLeft: 8}}>{node.level}</span>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {node.message}\n      </Box>\n    </Row>\n  );\n});\n\nUnstructuredMemoizedContent.displayName = 'UnstructuredMemoizedContent';\n","import {gql} from '@apollo/client';\nimport {Colors, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  CellMeasurer as _CellMeasurer,\n  CellMeasurerCache,\n  List as _List,\n  ListRowProps,\n  ScrollParams,\n} from 'react-virtualized';\nimport styled from 'styled-components/macro';\n\nimport {LogFilter, LogsProviderLogs} from './LogsProvider';\nimport {\n  LOGS_ROW_STRUCTURED_FRAGMENT,\n  LOGS_ROW_UNSTRUCTURED_FRAGMENT,\n  Structured,\n  Unstructured,\n} from './LogsRow';\nimport {ColumnWidthsProvider, Headers} from './LogsScrollingTableHeader';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {logNodeLevel} from './logNodeLevel';\nimport {RunDagsterRunEventFragment} from './types/RunFragments.types';\n\nconst LOGS_PADDING_BOTTOM = 50;\n\n// todo: react-virtualized needs updated types to work with React 18. For now lets any type.\nconst List: any = _List;\nconst CellMeasurer: any = _CellMeasurer;\n\ninterface ILogsScrollingTableProps {\n  logs: LogsProviderLogs;\n  filter: LogFilter;\n  filterStepKeys: string[];\n\n  // We use this string to know whether the changes to `nodes` require us to\n  // re-layout the entire table. Appending new rows can be done very fast, but\n  // removing some rows requires the whole list be \"reflowed\" again. Checking\n  // `nodes` for equality doesn't let us optimize for the append- case.\n  filterKey: string;\n  metadata: IRunMetadataDict;\n}\n\ninterface ILogsScrollingTableSizedProps {\n  width: number;\n  height: number;\n\n  filteredNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n  textMatchNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n\n  filterKey: string;\n  loading: boolean;\n  focusedTime: number;\n  metadata: IRunMetadataDict;\n}\n\nfunction filterLogs(logs: LogsProviderLogs, filter: LogFilter, filterStepKeys: string[]) {\n  const filteredNodes = logs.allNodes.filter((node) => {\n    // These events are used to determine which assets a run will materialize and are not intended\n    // to be displayed in Dagit. Pagination is offset based, so we remove these logs client-side.\n    if (node.__typename === 'AssetMaterializationPlannedEvent') {\n      return false;\n    }\n    const l = logNodeLevel(node);\n    if (!filter.levels[l]) {\n      return false;\n    }\n    if (filter.sinceTime && Number(node.timestamp) < filter.sinceTime) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasTextFilter = !!(filter.logQuery[0] && filter.logQuery[0].value !== '');\n\n  const textMatchNodes = hasTextFilter\n    ? filteredNodes.filter((node) => {\n        return (\n          filter.logQuery.length > 0 &&\n          filter.logQuery.every((f) => {\n            if (f.token === 'query') {\n              return node.stepKey && filterStepKeys.includes(node.stepKey);\n            }\n            if (f.token === 'step') {\n              return node.stepKey && node.stepKey === f.value;\n            }\n            if (f.token === 'type') {\n              return node.eventType && f.value === eventTypeToDisplayType(node.eventType);\n            }\n            return node.message.toLowerCase().includes(f.value.toLowerCase());\n          })\n        );\n      })\n    : [];\n\n  return {\n    filteredNodes: hasTextFilter && filter.hideNonMatches ? textMatchNodes : filteredNodes,\n    textMatchNodes,\n  };\n}\n\nexport const LogsScrollingTable: React.FC<ILogsScrollingTableProps> = (props) => {\n  const {filterKey, filterStepKeys, metadata, filter, logs} = props;\n  const table = React.useRef<LogsScrollingTableSized>(null);\n\n  return (\n    <ColumnWidthsProvider onWidthsChanged={() => table.current && table.current.didResize()}>\n      <Headers />\n      <div style={{flex: 1, minHeight: 0, marginTop: -1}}>\n        <AutoSizer>\n          {({width, height}) => (\n            <LogsScrollingTableSized\n              width={width}\n              height={height}\n              ref={table}\n              filterKey={filterKey}\n              loading={logs.loading}\n              metadata={metadata}\n              focusedTime={filter.focusedTime}\n              {...filterLogs(logs, filter, filterStepKeys)}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </ColumnWidthsProvider>\n  );\n};\n\nexport const LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT = gql`\n  fragment LogsScrollingTableMessageFragment on DagsterRunEvent {\n    ...LogsRowStructuredFragment\n    ...LogsRowUnstructuredFragment\n  }\n\n  ${LOGS_ROW_STRUCTURED_FRAGMENT}\n  ${LOGS_ROW_UNSTRUCTURED_FRAGMENT}\n`;\n\nclass LogsScrollingTableSized extends React.Component<ILogsScrollingTableSizedProps> {\n  list = React.createRef<typeof List>();\n\n  get listEl() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = this.list.current && ReactDOM.findDOMNode(this.list.current);\n    if (!(el instanceof HTMLElement)) {\n      return null;\n    }\n    return el;\n  }\n\n  cache = new CellMeasurerCache({\n    defaultHeight: 30,\n    fixedWidth: true,\n    keyMapper: (rowIndex) =>\n      this.props.filteredNodes ? this.props.filteredNodes[rowIndex]!.clientsideKey : '',\n  });\n\n  isAtBottomOrZero = true;\n  scrollToBottomObserver: MutationObserver | null = null;\n\n  componentDidMount() {\n    this.attachScrollToBottomObserver();\n    if (this.props.focusedTime) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ILogsScrollingTableSizedProps) {\n    if (!this.list.current) {\n      return;\n    }\n\n    if (this.props.width !== prevProps.width) {\n      this.didResize();\n    }\n    if (this.props.filterKey !== prevProps.filterKey) {\n      this.list.current.recomputeGridSize();\n    }\n\n    if (\n      this.props.focusedTime &&\n      this.props.filteredNodes?.length !== prevProps.filteredNodes?.length\n    ) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scrollToBottomObserver) {\n      this.scrollToBottomObserver.disconnect();\n    }\n  }\n\n  didResize() {\n    this.cache.clearAll();\n    this.forceUpdate();\n  }\n\n  attachScrollToBottomObserver() {\n    const el = this.listEl;\n    if (!el) {\n      console.warn(`No container, LogsScrollingTable must render listEl`);\n      return;\n    }\n\n    let lastHeight: string | null = null;\n\n    this.scrollToBottomObserver = new MutationObserver(() => {\n      const rowgroupEl = el.querySelector('[role=rowgroup]') as HTMLElement;\n      if (!rowgroupEl) {\n        lastHeight = null;\n        return;\n      }\n      if (rowgroupEl.style.height === lastHeight) {\n        return;\n      }\n      if (!this.isAtBottomOrZero) {\n        return;\n      }\n\n      lastHeight = rowgroupEl.style.height;\n      el.scrollTop = el.scrollHeight - el.clientHeight;\n    });\n\n    this.scrollToBottomObserver.observe(el, {\n      attributes: true,\n      subtree: true,\n    });\n  }\n\n  onScroll = ({scrollTop, scrollHeight, clientHeight}: ScrollParams) => {\n    const atTopAndStarting = scrollTop === 0 && scrollHeight <= clientHeight;\n\n    // Note: The distance to the bottom can go negative if you scroll into the padding at the bottom of the list.\n    // react-virtualized seems to be faking these numbers (they're different than what you get if you inspect the el)\n    const distanceToBottom = scrollHeight - clientHeight - scrollTop;\n    const atBottom = distanceToBottom < 5;\n\n    this.isAtBottomOrZero = atTopAndStarting || atBottom;\n  };\n\n  scrollToTime = (ms: number) => {\n    if (!this.props.filteredNodes || !this.list.current) {\n      return;\n    }\n\n    // Stop the table from attempting to return to the bottom-of-feed\n    // if more logs arrive.\n    this.isAtBottomOrZero = false;\n\n    // Find the row immediately at or after the provided timestamp\n    const target: {index: number; alignment: 'center'} = {\n      index: this.props.filteredNodes.findIndex((n) => Number(n.timestamp) >= ms),\n      alignment: 'center',\n    };\n    if (target.index === -1) {\n      target.index = this.props.filteredNodes.length - 1;\n    }\n\n    // Move to the offset. For some reason, this takes multiple iterations but not multiple renders.\n    // It seems react-virtualized may be using default row height for rows more than X rows away and\n    // the number gets more accurate as we scroll, which is very annoying.\n    let offset = 0;\n    let iterations = 0;\n    while (offset !== this.list.current.getOffsetForRow(target)) {\n      offset = this.list.current.getOffsetForRow(target);\n      this.list.current.scrollToPosition(offset);\n      iterations += 1;\n      if (iterations > 20) {\n        break;\n      }\n    }\n  };\n\n  rowRenderer = ({parent, index, style}: ListRowProps) => {\n    if (!this.props.filteredNodes.length) {\n      return;\n    }\n    const node = this.props.filteredNodes[index]!;\n    const focusedTimeMatch = Number(node.timestamp) === this.props.focusedTime;\n    const textMatch = !!this.props.textMatchNodes?.includes(node);\n\n    const metadata = this.props.metadata;\n    if (!node) {\n      return <span />;\n    }\n    const isLastRow = index === this.props.filteredNodes.length - 1;\n    const lastRowStyles = isLastRow\n      ? {\n          borderBottom: `1px solid ${Colors.Gray100}`,\n        }\n      : {};\n\n    return (\n      <CellMeasurer cache={this.cache} index={index} parent={parent} key={node.clientsideKey}>\n        {node.__typename === 'LogMessageEvent' ? (\n          <Unstructured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        ) : (\n          <Structured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  noContentRenderer = () => {\n    if (this.props.filteredNodes) {\n      return <NonIdealState icon=\"no-results\" title=\"No logs to display\" />;\n    }\n    return <span />;\n  };\n\n  render() {\n    const {filteredNodes, height, loading, width} = this.props;\n    return (\n      <div>\n        {loading ? (\n          <ListEmptyState>\n            <NonIdealState icon=\"spinner\" title=\"Fetching logs...\" />\n          </ListEmptyState>\n        ) : null}\n        <List\n          ref={this.list}\n          deferredMeasurementCache={this.cache}\n          rowCount={filteredNodes?.length || 0}\n          noContentRenderer={this.noContentRenderer}\n          rowHeight={this.cache.rowHeight}\n          rowRenderer={this.rowRenderer}\n          width={width}\n          height={height}\n          overscanRowCount={10}\n          style={{paddingBottom: LOGS_PADDING_BOTTOM}}\n          onScroll={this.onScroll}\n        />\n      </div>\n    );\n  }\n}\n\nclass AutoSizer extends React.Component<{\n  children: (size: {width: number; height: number}) => React.ReactNode;\n}> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.measure();\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (el && el instanceof HTMLElement && 'ResizeObserver' in window) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO((entries: any) => {\n        this.setState({\n          width: entries[0].contentRect.width,\n          height: entries[0].contentRect.height,\n        });\n      });\n      this.resizeObserver.observe(el);\n    }\n  }\n\n  componentDidUpdate() {\n    this.measure();\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  measure() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (!el || !(el instanceof HTMLElement)) {\n      return;\n    }\n    if (el.clientWidth !== this.state.width || el.clientHeight !== this.state.height) {\n      this.setState({width: el.clientWidth, height: el.clientHeight});\n    }\n  }\n\n  render() {\n    return <div style={{width: '100%', height: '100%'}}>{this.props.children(this.state)}</div>;\n  }\n}\n\nconst ListEmptyState = styled.div`\n  background-color: rgba(255, 255, 255, 0.7);\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 50px);\n`;\n","import {Box, Button, Group, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {LaunchButtonConfiguration, LaunchButtonDropdown} from '../launchpad/LaunchButton';\n\nimport {IRunMetadataDict, IStepState} from './RunMetadataProvider';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {ReExecutionStyle} from './RunUtils';\nimport {StepSelection} from './StepSelection';\nimport {TerminationDialog, TerminationState} from './TerminationDialog';\nimport {RunFragment, RunPageFragment} from './types/RunFragments.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\n\ninterface RunActionButtonsProps {\n  run: RunPageFragment;\n  selection: StepSelection;\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  onLaunch: (style: ReExecutionStyle) => Promise<void>;\n}\n\nexport const CancelRunButton: React.FC<{run: RunFragment}> = ({run}) => {\n  const {id: runId, canTerminate} = run;\n  const [showDialog, setShowDialog] = React.useState<boolean>(false);\n  const closeDialog = React.useCallback(() => setShowDialog(false), []);\n\n  const onComplete = React.useCallback(\n    async (terminationState: TerminationState) => {\n      const {errors} = terminationState;\n      const error = runId && errors[runId];\n      if (error && 'message' in error) {\n        await showSharedToaster({\n          message: error.message,\n          icon: 'error',\n          intent: 'danger',\n        });\n      }\n    },\n    [runId],\n  );\n\n  if (!runId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button\n        icon={<Icon name=\"cancel\" />}\n        intent=\"danger\"\n        disabled={showDialog}\n        onClick={() => setShowDialog(true)}\n      >\n        Terminate\n      </Button>\n      <TerminationDialog\n        isOpen={showDialog}\n        onClose={closeDialog}\n        onComplete={onComplete}\n        selectedRuns={{[runId]: canTerminate}}\n      />\n    </>\n  );\n};\n\nfunction stepSelectionWithState(selection: StepSelection, metadata: IRunMetadataDict) {\n  const stepStates = selection.keys.map(\n    (key) => (key && metadata.steps[key]?.state) || IStepState.PREPARING,\n  );\n\n  return {\n    ...selection,\n    present: selection.keys.length > 0,\n    failed: selection.keys.length && stepStates.includes(IStepState.FAILED),\n    finished: stepStates.every((stepState) =>\n      [IStepState.FAILED, IStepState.SUCCEEDED].includes(stepState),\n    ),\n  };\n}\n\nfunction stepSelectionFromRunTags(\n  run: RunFragment,\n  graph: GraphQueryItem[],\n  metadata: IRunMetadataDict,\n) {\n  const tag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  if (!tag) {\n    return null;\n  }\n  return stepSelectionWithState(\n    {keys: filterByQuery(graph, tag.value).all.map((k) => k.name), query: tag.value},\n    metadata,\n  );\n}\n\nexport const canRunAllSteps = (run: RunFragment) => doneStatuses.has(run.status);\nexport const canRunFromFailure = (run: RunFragment) =>\n  run.executionPlan && failedStatuses.has(run.status);\n\nexport const RunActionButtons: React.FC<RunActionButtonsProps> = (props) => {\n  const {metadata, graph, onLaunch, run} = props;\n  const artifactsPersisted = run?.executionPlan?.artifactsPersisted;\n  const jobError = useJobAvailabilityErrorForRun(run);\n\n  const selection = stepSelectionWithState(props.selection, metadata);\n\n  const currentRunSelection = stepSelectionFromRunTags(run, graph, metadata);\n  const currentRunIsFromFailure = run.tags?.some(\n    (t) => t.key === DagsterTag.IsResumeRetry && t.value === 'true',\n  );\n\n  const full: LaunchButtonConfiguration = {\n    icon: 'cached',\n    scope: '*',\n    title: 'All steps in root run',\n    tooltip: 'Re-execute the pipeline run from scratch',\n    disabled: !canRunAllSteps(run),\n    onClick: () => onLaunch({type: 'all'}),\n  };\n\n  const same: LaunchButtonConfiguration = {\n    icon: 'linear_scale',\n    scope: currentRunSelection?.query || '*',\n    title: 'Same steps',\n    disabled: !currentRunSelection || !(currentRunSelection.finished || currentRunSelection.failed),\n    tooltip: (\n      <div>\n        {!currentRunSelection || !currentRunSelection.present\n          ? 'Re-executes the same step subset used for this run if one was present.'\n          : !currentRunSelection.finished\n          ? 'Wait for all of the steps to finish to re-execute the same subset.'\n          : 'Re-execute the same step subset used for this run:'}\n        <StepSelectionDescription selection={currentRunSelection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection: currentRunSelection!}),\n  };\n\n  const selected: LaunchButtonConfiguration = {\n    icon: 'op',\n    scope: selection.query,\n    title: selection.keys.length > 1 ? 'Selected steps' : 'Selected step',\n    disabled: !selection.present || !(selection.finished || selection.failed),\n    tooltip: (\n      <div>\n        {!selection.present\n          ? 'Select a step or type a step subset to re-execute.'\n          : !selection.finished\n          ? 'Wait for the steps to finish to re-execute them.'\n          : 'Re-execute the selected steps with existing configuration:'}\n        <StepSelectionDescription selection={selection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection}),\n  };\n\n  const fromSelected: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From selected',\n    disabled: !canRunAllSteps(run) || selection.keys.length !== 1,\n    tooltip: 'Re-execute the pipeline downstream from the selected steps',\n    onClick: () => {\n      if (!run.executionPlan) {\n        console.warn('Run execution plan must be present to launch from-selected execution');\n        return Promise.resolve();\n      }\n      const selectionAndDownstreamQuery = selection.keys.map((k) => `${k}*`).join(',');\n      const selectionKeys = filterByQuery(graph, selectionAndDownstreamQuery).all.map(\n        (node) => node.name,\n      );\n\n      return onLaunch({\n        type: 'selection',\n        selection: {\n          keys: selectionKeys,\n          query: selectionAndDownstreamQuery,\n        },\n      });\n    },\n  };\n\n  const fromFailureEnabled = canRunFromFailure(run);\n\n  const fromFailure: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From failure',\n    disabled: !fromFailureEnabled,\n    tooltip: !fromFailureEnabled\n      ? 'Retry is only enabled when the pipeline has failed.'\n      : 'Retry the pipeline run, skipping steps that completed successfully',\n    onClick: () => onLaunch({type: 'from-failure'}),\n  };\n\n  if (!artifactsPersisted) {\n    [selected, same, fromFailure, fromSelected].forEach((option) => {\n      option.disabled = true;\n      option.title =\n        'Retry and re-execute are only enabled on persistent storage. Try rerunning with a different storage configuration.';\n    });\n  }\n\n  const options = [full, same, selected, fromSelected, fromFailure];\n  const preferredRerun = selection.present\n    ? selected\n    : fromFailureEnabled && currentRunIsFromFailure\n    ? fromFailure\n    : currentRunSelection?.present\n    ? same\n    : null;\n\n  const primary = artifactsPersisted && preferredRerun ? preferredRerun : full;\n\n  const tooltip = () => {\n    if (jobError?.tooltip) {\n      return jobError?.tooltip;\n    }\n    return run.hasReExecutePermission ? undefined : DEFAULT_DISABLED_REASON;\n  };\n\n  return (\n    <Group direction=\"row\" spacing={8}>\n      <Box flex={{direction: 'row'}}>\n        <LaunchButtonDropdown\n          runCount={1}\n          primary={primary}\n          options={options}\n          title={\n            primary.scope === '*'\n              ? `Re-execute all (*)`\n              : primary.scope\n              ? `Re-execute (${primary.scope})`\n              : `Re-execute ${primary.title}`\n          }\n          tooltip={tooltip()}\n          icon={jobError?.icon}\n          disabled={jobError?.disabled || !run.hasReExecutePermission}\n        />\n      </Box>\n      {!doneStatuses.has(run.status) ? <CancelRunButton run={run} /> : null}\n    </Group>\n  );\n};\n\nconst StepSelectionDescription: React.FC<{selection: StepSelection | null}> = ({selection}) => (\n  <div style={{paddingLeft: '10px'}}>\n    {(selection?.keys || []).map((step) => (\n      <span key={step} style={{display: 'block'}}>{`* ${step}`}</span>\n    ))}\n  </div>\n);\n","import {gql} from '@apollo/client';\nimport {\n  Button,\n  Colors,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  MetadataTable,\n  Popover,\n  Tooltip,\n  Subheading,\n  Box,\n  StyledReadOnlyCodeMirror,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {RunStatus} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {workspacePathFromRunDetails, workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {TerminationDialog} from './TerminationDialog';\nimport {TimeElapsed} from './TimeElapsed';\nimport {RunDetailsFragment} from './types/RunDetails.types';\nimport {RunFragment} from './types/RunFragments.types';\n\nexport const timingStringForStatus = (status?: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    case RunStatus.CANCELING:\n      return 'Canceling…';\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.NOT_STARTED:\n      return 'Waiting to start…';\n    case RunStatus.STARTED:\n      return 'Started…';\n    case RunStatus.STARTING:\n      return 'Starting…';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    default:\n      return 'None';\n  }\n};\n\nconst LoadingOrValue: React.FC<{\n  loading: boolean;\n  children: () => React.ReactNode;\n}> = ({loading, children}) =>\n  loading ? <div style={{color: Colors.Gray400}}>Loading…</div> : <div>{children()}</div>;\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: false};\n\nexport const RunDetails: React.FC<{\n  loading: boolean;\n  run: RunDetailsFragment | undefined;\n}> = ({loading, run}) => {\n  return (\n    <MetadataTable\n      spacing={0}\n      rows={[\n        {\n          key: 'Started',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimestampDisplay timestamp={run.startTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Ended',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.endTime) {\n                  return <TimestampDisplay timestamp={run.endTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Duration',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimeElapsed startUnix={run.startTime} endUnix={run.endTime} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\ntype VisibleDialog = 'config' | 'delete' | 'terminate' | null;\n\nexport const RunConfigDialog: React.FC<{run: RunFragment; isJob: boolean}> = ({run, isJob}) => {\n  const {runConfigYaml} = run;\n  const [visibleDialog, setVisibleDialog] = React.useState<VisibleDialog>(null);\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const copy = useCopyToClipboard();\n  const history = useHistory();\n\n  const copyConfig = async () => {\n    copy(runConfigYaml);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  const jobPath = workspacePathFromRunDetails({\n    id: run.id,\n    repositoryName: run.repositoryOrigin?.repositoryName,\n    repositoryLocationName: run.repositoryOrigin?.repositoryLocationName,\n    pipelineName: run.pipelineName,\n    isJob,\n  });\n\n  return (\n    <div>\n      <Group direction=\"row\" spacing={8}>\n        {run.hasReExecutePermission ? (\n          <AnchorButton icon={<Icon name=\"edit\" />} to={jobPath}>\n            Open in Launchpad\n          </AnchorButton>\n        ) : (\n          <Tooltip content={NO_LAUNCH_PERMISSION_MESSAGE} useDisabledButtonTooltipFix>\n            <Button icon={<Icon name=\"edit\" />} disabled>\n              Open in Launchpad\n            </Button>\n          </Tooltip>\n        )}\n        <Button icon={<Icon name=\"tag\" />} onClick={() => setVisibleDialog('config')}>\n          View tags and config\n        </Button>\n        <Popover\n          position=\"bottom-right\"\n          content={\n            <Menu>\n              <Tooltip content=\"Loadable in dagit-debug\" position=\"left\" targetTagName=\"div\">\n                <MenuItem\n                  text=\"Download debug file\"\n                  icon={<Icon name=\"download_for_offline\" />}\n                  onClick={() => window.open(`${rootServerURI}/download_debug/${run.id}`)}\n                />\n              </Tooltip>\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </Group>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        onClose={() => setVisibleDialog(null)}\n        style={{\n          width: '90vw',\n          maxWidth: '1000px',\n          minWidth: '600px',\n          height: '90vh',\n          maxHeight: '1000px',\n          minHeight: '600px',\n        }}\n        title=\"Run configuration\"\n      >\n        <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n          <Box flex={{direction: 'column', gap: 20}} style={{flex: 1, overflow: 'hidden'}}>\n            <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n              <Subheading>Tags</Subheading>\n              <div>\n                <RunTags tags={run.tags} mode={isJob ? null : run.mode} />\n              </div>\n            </Box>\n            <Box flex={{direction: 'column'}} style={{flex: 1, overflow: 'hidden'}}>\n              <Box\n                border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n                padding={{left: 24, bottom: 16}}\n              >\n                <Subheading>Config</Subheading>\n              </Box>\n              <CodeMirrorContainer>\n                <StyledReadOnlyCodeMirror\n                  value={runConfigYaml}\n                  options={{lineNumbers: true, mode: 'yaml'}}\n                  theme={['config-editor']}\n                />\n              </CodeMirrorContainer>\n            </Box>\n          </Box>\n          <DialogFooter topBorder>\n            <Button onClick={() => copyConfig()} intent=\"none\">\n              Copy config\n            </Button>\n            <Button onClick={() => setVisibleDialog(null)} intent=\"primary\">\n              OK\n            </Button>\n          </DialogFooter>\n        </Box>\n      </Dialog>\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            if (run.repositoryOrigin) {\n              history.push(\n                workspacePipelinePath({\n                  repoName: run.repositoryOrigin.repositoryName,\n                  repoLocation: run.repositoryOrigin.repositoryLocationName,\n                  pipelineName: run.pipelineName,\n                  isJob,\n                  path: '/runs',\n                }),\n              );\n            } else {\n              setVisibleDialog(null);\n            }\n          }}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={() => setVisibleDialog(null)}\n          onComplete={() => {\n            refetch();\n          }}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst CodeMirrorContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n\n  .react-codemirror2,\n  .CodeMirror {\n    height: 100%;\n  }\n`;\n\nexport const RUN_DETAILS_FRAGMENT = gql`\n  fragment RunDetailsFragment on Run {\n    id\n    startTime\n    endTime\n    status\n  }\n`;\n","import {gql} from '@apollo/client';\n\nimport {EXECUTION_PLAN_TO_GRAPH_FRAGMENT} from '../gantt/toGraphQueryItems';\n\nimport {LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT} from './LogsScrollingTable';\nimport {RUN_DETAILS_FRAGMENT} from './RunDetails';\nimport {RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT} from './RunMetadataProvider';\n\nexport const RUN_FRAGMENT = gql`\n  fragment RunFragment on Run {\n    id\n    runConfigYaml\n    canTerminate\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    status\n    mode\n    tags {\n      key\n      value\n    }\n    assets {\n      id\n      key {\n        path\n      }\n    }\n    rootRunId\n    parentRunId\n    pipelineName\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    pipelineSnapshotId\n    executionPlan {\n      artifactsPersisted\n      ...ExecutionPlanToGraphFragment\n    }\n    stepKeysToExecute\n    updateTime\n    stepStats {\n      stepKey\n      status\n      startTime\n      endTime\n      attempts {\n        startTime\n        endTime\n      }\n      markers {\n        startTime\n        endTime\n      }\n    }\n    ...RunDetailsFragment\n  }\n\n  ${EXECUTION_PLAN_TO_GRAPH_FRAGMENT}\n  ${RUN_DETAILS_FRAGMENT}\n`;\n\nexport const RUN_DAGSTER_RUN_EVENT_FRAGMENT = gql`\n  fragment RunDagsterRunEventFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n\n    ...LogsScrollingTableMessageFragment\n    ...RunMetadataProviderMessageFragment\n  }\n\n  ${LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT}\n  ${RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT}\n`;\n\nexport const RUN_PAGE_FRAGMENT = gql`\n  fragment RunPageFragment on Run {\n    id\n    parentPipelineSnapshotId\n    ...RunFragment\n  }\n\n  ${RUN_FRAGMENT}\n`;\n","import memoize from 'lodash/memoize';\nimport uniq from 'lodash/uniq';\n\nimport {DagsterEventType} from '../graphql/types';\n\nconst typeValues = memoize(() =>\n  uniq(Object.values(DagsterEventType).map(eventTypeToDisplayType)).sort(),\n);\n\nexport const eventTypeToDisplayType = (eventType: string) => {\n  switch (eventType) {\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_ENQUEUED:\n      return DagsterEventType.RUN_ENQUEUED;\n    case DagsterEventType.PIPELINE_DEQUEUED:\n      return DagsterEventType.RUN_DEQUEUED;\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_START:\n      return DagsterEventType.RUN_START;\n    case DagsterEventType.PIPELINE_SUCCESS:\n      return DagsterEventType.RUN_SUCCESS;\n    case DagsterEventType.PIPELINE_FAILURE:\n      return DagsterEventType.RUN_FAILURE;\n    case DagsterEventType.PIPELINE_CANCELING:\n      return DagsterEventType.RUN_CANCELING;\n    case DagsterEventType.PIPELINE_CANCELED:\n      return DagsterEventType.RUN_CANCELED;\n\n    default:\n      return eventType;\n  }\n};\n\nexport const getRunFilterProviders = memoize(\n  (stepNames: string[] = []) => {\n    return [\n      {\n        token: 'step',\n        values: () => stepNames,\n      },\n      {\n        token: 'type',\n        values: typeValues,\n      },\n      {\n        token: 'query',\n        values: () => [],\n      },\n    ];\n  },\n  (stepNames: string[] = []) => JSON.stringify(stepNames),\n);\n","import {LogLevel} from './LogLevel';\nimport {LogNode} from './types';\n\nexport const logNodeLevel = (node: LogNode): LogLevel =>\n  node.__typename === 'LogMessageEvent' ? node.level : LogLevel.EVENT;\n","import {useMutation} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\n\nimport {showLaunchError} from '../launchpad/showLaunchError';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\n\nimport {\n  getReexecutionVariables,\n  handleLaunchResult,\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  ReExecutionStyle,\n} from './RunUtils';\nimport {RunPageFragment} from './types/RunFragments.types';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\nexport const useJobReExecution = (run: RunPageFragment | undefined | null) => {\n  const history = useHistory();\n  const [launchPipelineReexecution] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n\n  return React.useCallback(\n    async (style: ReExecutionStyle) => {\n      if (!run || !run.pipelineSnapshotId || !repoMatch) {\n        return;\n      }\n\n      const variables = getReexecutionVariables({\n        run,\n        style,\n        repositoryLocationName: repoMatch.match.repositoryLocation.name,\n        repositoryName: repoMatch.match.repository.name,\n      });\n\n      try {\n        const result = await launchPipelineReexecution({variables});\n        handleLaunchResult(run.pipelineName, result.data?.launchPipelineReexecution, history, {\n          preserveQuerystring: true,\n          behavior: 'open',\n        });\n      } catch (error) {\n        showLaunchError(error as Error);\n      }\n    },\n    [history, launchPipelineReexecution, repoMatch, run],\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasPrevCursor} onClick={popCursor}>\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n"],"names":["highlightTimer","GanttChartModeControl","React","_ref","value","onChange","hideTimedMode","buttons","id","GanttChartMode","icon","tooltip","push","activeItems","Set","onClick","_jsx","ButtonGroup","ONE_MIN","subsecondResolutionLabel","ms","formatElapsedTime","concat","toFixed","secondResolutionLabel","minuteResolutionLabel","Math","round","hourResolutionLabel","TICK_CONFIG","tickIntervalMs","tickLabels","GanttChartTimescale","scale","viewport","nowMs","startMs","highlightedMs","layoutSize","transform","LEFT_INSET","left","ticks","lines","pxPerMs","tickConfig","find","t","pxPerTick","tickMs","floor","tickX","width","key","label","className","style","TICK_LABEL_WIDTH","children","_jsxs","TimescaleContainer","TimescaleTicksContainer","length","map","idx","timeX","labelOffset","TimescaleLinesContainer","height","max","styled","displayName","componentId","CSS_DURATION","Colors","TICKS_ROW_HEIGHT","FontFamily","ZoomSlider","props","ZoomSliderContainer","$fillColor","onMouseDown","e","initialX","rect","currentTarget","closest","getBoundingClientRect","target","HTMLElement","classList","contains","pageX","onUpdate","nextValue","min","document","addEventListener","onRelease","removeEventListener","right","top","tabIndex","SliderStyles","validateSavedMode","storedValue","HIGHLIGHT_TIME_EVENT","setHighlightedGanttChartTime","timestamp","debounced","arguments","undefined","clearTimeout","setTimeout","dispatchEvent","CustomEvent","detail","GanttChart","graph","onSetSelection","options","selection","toolbarActions","_useGanttChartMode","useStateWithStorage","_useGanttChartMode2","_slicedToArray","mode","setMode","_React$useState","_objectSpread","DEFAULT_OPTIONS","_React$useState2","state","setState","cachedLayout","cachedLayoutParams","graphFiltered","filterByQuery","query","layoutParams","nodes","hideUnselectedSteps","all","layout","names","ns","n","name","join","current","buildLayout","updateOptions","changes","onChangeMode","onUpdateQuery","onDoubleClickStep","stepKey","GanttChartContainer","OptionsContainer","_Fragment","OptionsSpacer","zoom","v","Checkbox","marginBottom","checked","hideWaiting","flex","GanttChartInner","_useViewport","useViewport","containerProps","onMoveToViewport","_React$useState3","_React$useState4","hoveredStep","setHoveredNodeName","_React$useState5","_React$useState6","hoveredTime","setHoveredTime","_React$useState7","overrideNowTime","Date","now","_React$useState8","setNowMs","metadata","animationRequest","rootServerURI","AppContext","_React$useContext2","WebSocketContext","availability","disabled","status","lostWebsocket","WebSocket","CLOSED","minScale","MIN_SCALE","startedPipelineAt","exp","log","MAX_SCALE","animate","requestAnimationFrame","exitedAt","cancelAnimationFrame","listener","adjustLayoutWithRunMetadata","EMPTY_RUN_METADATA","apply","_toConsumableArray","boxes","b","x","BOX_SPACING_X","TOP_INSET","y","BOX_HEIGHT","BOTTOM_INSET","node","keys","includes","bounds","boundsForBox","maxX","minX","maxY","minY","focusedTime","sortedSelectedSteps","steps","filter","sort","a","start","firstMeta","lastMeta","end","measurementComplete","content","overflow","position","GanttChartViewportContents","focusedSteps","onClickStep","GraphQueryInputContainer","WebsocketWarning","Box","justifyContent","margin","bottom","Group","direction","spacing","background","padding","vertical","horizontal","alignItems","Icon","color","maxWidth","whiteSpace","FilterInputsBackgroundBox","gap","GraphQueryInput","items","placeholder","presets","interestingQueriesFor","SplitPanelContainer","identifier","axis","first","firstInitialPercent","second","GanttStatusPanel","onHighlightStep","intersectsViewport","verticalLinesAtXCoord","forEach","box","child","childIdx","_metadata$steps$child","boundsForLine","childNotDrawn","childWaiting","overlapAtXCoord","GanttLine","darkened","dotted","depNotDrawn","depIdx","useDot","BOX_DOT_WIDTH_CUTOFF","evt","onDoubleClick","onMouseEnter","onMouseLeave","isDynamicStep","BOX_DOT_MARGIN_Y","BOX_MARGIN_Y","BOX_DOT_SIZE","boxStyleFor","IStepState","Spinner","purpose","truncatedBoxLabel","markers","marker","_ref2","_ref3","aCenterY","bIsDot","bCenterY","straight","_ref4","border","LINE_SIZE","maxXAvoidingOverlap","borderTop","zIndex","borderRight","isEqual","BOX_SHOW_LABEL_WIDTH_CUTOFF","totalPadding","maxLength","withMiddleTruncation","SpinnerWrapper","withConfig","GanttChartLoadingState","_ref5","runId","marginTop","QueuedState","_ref6","run","CancelRunButton","NonIdealState","title","description","action","Link","to","runsPathWithFilters","token","CursorControlsContainer","OptionsDivider","toGraphQueryItems","plan","runtimeStepMetadata","_step","keyExpansionMap","runtimeStepKeys","Object","_iterator","_createForOfIteratorHelper","s","done","step","kind","StepKind","invocationsOfPlannedDynamicStep","inputs","every","i","dependsOn","_runtimeStepMetadata$","err","f","_step2","nodeTable","_iterator2","_step5","stepRuntimeKeys","_iterator4","outputs","_step3","_iterator3","_step7","_iterator5","_step8","_iterator6","input","nodeInput","_step9","_iterator7","upstream","upstreamKeys","replacePlannedIndex","_step10","_iterator8","upstreamKey","solid","upstreamOutput","dependedBy","values","EXECUTION_PLAN_TO_GRAPH_FRAGMENT","gql","_templateObject","_taggedTemplateLiteral","OverflowFade","OverflowButtonContainer","OverflowButton","CellTruncationProvider","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","isOverflowing","contentContainerRef","onView","onExpand","defaultExpand","_createClass","this","detectOverflow","firstElementChild","scrollHeight","message","textContent","showCustomAlert","body","ref","forceExpandability","LogsRowStructuredContent","_node$failureMetadata","location","useLocation","eventType","__typename","FailureContent","error","metadataEntries","failureMetadata","errorSource","StepUpForRetryContent","logCaptureSteps","DefaultContent","currentQuery","qs","search","updatedQuery","logType","logs","href","pathname","LogRowStructuredContentTable","rows","item","eventColor","eventIntent","typeCheck","success","MetadataEntries","entries","expectationResult","AssetMetadataContent","assetKey","operationResult","ignoreQueryPrefix","logFileKey","rawLogsUrl","rawLogsLink","JSON","stringify","stepKeys","assertUnreachable","EventTypeColumn","Tag","intent","fontSize","eventTypeToDisplayType","contextMessage","errorMessage","errorStack","errorCause","stack","ErrorSource","errorChain","chainLink","index","isExplicitLink","minimal","DagsterEventType","assetDetailsPathForKey","asOf","assetDashboardLink","marginLeft","MetadataEntryLink","styles","paddingBottom","displayNameForAssetKey","Structured","_this$props","PythonErrorInfo","StructuredContent","StructuredMemoizedContent","highlighted","LOGS_ROW_STRUCTURED_FRAGMENT","METADATA_ENTRY_FRAGMENT","PYTHON_ERROR_FRAGMENT","stepStartTime","Row","level","LogLevel","TimestampColumn","time","runStartTime","OpColumn","Unstructured","_React$Component2","_super2","_this2","_len2","_key2","UnstructuredMemoizedContent","LOGS_ROW_UNSTRUCTURED_FRAGMENT","_templateObject2","List","_List","CellMeasurer","_CellMeasurer","LogsScrollingTable","filterKey","filterStepKeys","table","ColumnWidthsProvider","onWidthsChanged","didResize","Headers","minHeight","AutoSizer","LogsScrollingTableSized","loading","filteredNodes","allNodes","l","logNodeLevel","levels","sinceTime","Number","hasTextFilter","logQuery","textMatchNodes","toLowerCase","hideNonMatches","filterLogs","LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT","list","cache","CellMeasurerCache","defaultHeight","fixedWidth","keyMapper","rowIndex","clientsideKey","isAtBottomOrZero","scrollToBottomObserver","onScroll","scrollTop","clientHeight","atTopAndStarting","atBottom","scrollToTime","findIndex","alignment","offset","iterations","getOffsetForRow","scrollToPosition","rowRenderer","_this$props$textMatch","parent","focusedTimeMatch","textMatch","lastRowStyles","borderBottom","noContentRenderer","get","el","ReactDOM","attachScrollToBottomObserver","window","prevProps","_this$props$filteredN","_prevProps$filteredNo","_this3","recomputeGridSize","disconnect","clearAll","forceUpdate","_this4","listEl","lastHeight","MutationObserver","rowgroupEl","querySelector","observe","attributes","subtree","console","warn","ListEmptyState","deferredMeasurementCache","rowCount","rowHeight","overscanRowCount","_this5","resizeObserver","_this6","measure","RO","contentRect","clientWidth","canTerminate","showDialog","setShowDialog","closeDialog","onComplete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","terminationState","errors","wrap","_context","prev","next","showSharedToaster","stop","_x","Button","TerminationDialog","isOpen","onClose","selectedRuns","_defineProperty","stepSelectionWithState","stepStates","_metadata$steps$key","present","failed","finished","stepState","canRunAllSteps","doneStatuses","canRunFromFailure","executionPlan","failedStatuses","RunActionButtons","_run$executionPlan","_run$tags","onLaunch","artifactsPersisted","jobError","useJobAvailabilityErrorForRun","currentRunSelection","tag","tags","DagsterTag","k","stepSelectionFromRunTags","currentRunIsFromFailure","some","full","scope","type","same","StepSelectionDescription","selected","fromSelected","Promise","resolve","selectionAndDownstreamQuery","selectionKeys","fromFailureEnabled","fromFailure","option","preferredRerun","primary","LaunchButtonDropdown","runCount","hasReExecutePermission","DEFAULT_DISABLED_REASON","paddingLeft","display","timingStringForStatus","RunStatus","LoadingOrValue","TIME_FORMAT","showSeconds","showTimezone","RunDetails","MetadataTable","startTime","TimestampDisplay","timeFormat","endTime","TimeElapsed","startUnix","endUnix","RunConfigDialog","_run$repositoryOrigin","_run$repositoryOrigin2","isJob","runConfigYaml","visibleDialog","setVisibleDialog","refetch","RunsQueryRefetchContext","copy","useCopyToClipboard","history","useHistory","copyConfig","jobPath","workspacePathFromRunDetails","repositoryName","repositoryOrigin","repositoryLocationName","pipelineName","AnchorButton","Tooltip","NO_LAUNCH_PERMISSION_MESSAGE","useDisabledButtonTooltipFix","Popover","Menu","targetTagName","MenuItem","text","open","hasDeletePermission","Dialog","minWidth","maxHeight","Subheading","RunTags","side","CodeMirrorContainer","StyledReadOnlyCodeMirror","lineNumbers","theme","DialogFooter","topBorder","DeletionDialog","workspacePipelinePath","repoName","repoLocation","path","onTerminateInstead","hasTerminatePermission","RUN_DETAILS_FRAGMENT","RUN_FRAGMENT","RUN_DAGSTER_RUN_EVENT_FRAGMENT","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","RUN_PAGE_FRAGMENT","_templateObject3","typeValues","memoize","uniq","getRunFilterProviders","stepNames","useJobReExecution","_useMutation","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","launchPipelineReexecution","repoMatch","useRepositoryForRunWithParentSnapshot","variables","_result$data","result","pipelineSnapshotId","abrupt","getReexecutionVariables","match","repositoryLocation","repository","sent","handleLaunchResult","data","preserveQuerystring","behavior","t0","showLaunchError","CursorPaginationControls","hasPrevCursor","hasNextCursor","popCursor","advanceCursor","rightIcon","CursorHistoryControls"],"sourceRoot":""}