{"version":3,"file":"static/js/380.750c0348.chunk.js","mappings":"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","sources":["../../core/src/hooks/useSelectionReducer.ts","../../core/src/runs/ReexecutionDialog.tsx","../../core/src/runs/RunActionsMenu.tsx","../../core/src/runs/RunCreatedByCell.tsx","../../core/src/runs/RunTable.tsx","../../core/src/ui/MenuLink.tsx"],"sourcesContent":["import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery, useMutation} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  StyledReadOnlyCodeMirror,\n  JoinedButtons,\n  DialogBody,\n  Box,\n  Colors,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  RunsQueryRefetchContext,\n  getReexecutionVariables,\n  handleLaunchResult,\n} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\n\nexport const RunActionsMenu: React.FC<{\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({run, onAddTag, additionalActionsForRun}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const history = useHistory();\n\n  const copyConfig = useCopyToClipboard();\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION, {\n    onCompleted: refetch,\n  });\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={\n                    run.hasReExecutePermission\n                      ? OPEN_LAUNCHPAD_UNKNOWN\n                      : NO_LAUNCH_PERMISSION_MESSAGE\n                  }\n                  position=\"left\"\n                  disabled={infoReady && run.hasReExecutePermission}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text=\"Open in Launchpad...\"\n                    disabled={!infoReady || !run.hasReExecutePermission}\n                    icon=\"edit\"\n                    to={workspacePathFromRunDetails({\n                      id: run.id,\n                      pipelineName: run.pipelineName,\n                      repositoryName: repoMatch?.match.repository.name,\n                      repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                      isJob,\n                    })}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      if (repoMatch && runConfigYaml) {\n                        const result = await reexecute({\n                          variables: getReexecutionVariables({\n                            run: {...run, runConfigYaml},\n                            style: {type: 'all'},\n                            repositoryLocationName: repoMatch.match.repositoryLocation.name,\n                            repositoryName: repoMatch.match.repository.name,\n                          }),\n                        });\n                        handleLaunchResult(\n                          run.pipelineName,\n                          result.data?.launchPipelineReexecution,\n                          history,\n                          {\n                            behavior: 'open',\n                          },\n                        );\n                      }\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledReadOnlyCodeMirror\n          value={runConfigYaml || ''}\n          options={{lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={async () => {\n              copyConfig(runConfigYaml || '');\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nconst PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import {Box, Tag} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ntype Props = {\n  run: RunTableRunFragment;\n  onAddTag?: (tag: RunFilterToken) => void;\n};\n\nexport function RunCreatedByCell(props: Props) {\n  const tags = props.run.tags || [];\n\n  const scheduleTag = tags.find((tag) => tag.key === DagsterTag.ScheduleName);\n  const sensorTag = tags.find((tag) => tag.key === DagsterTag.SensorName);\n  const user = tags.find((tag) => tag.key === DagsterTag.User);\n\n  const automaterialize = tags.find(\n    (tag) =>\n      tag.key === DagsterTag.Automaterialize ||\n      // Backwards compatibility\n      (tag.key === DagsterTag.CreatedBy && tag.value === 'auto_materialize'),\n  );\n  const createdBy = tags.find((tag) => tag.key === DagsterTag.CreatedBy);\n\n  const {UserDisplay} = useLaunchPadHooks();\n\n  let creator;\n\n  if (user) {\n    creator = <UserDisplay email={user.value} />;\n  } else if (scheduleTag) {\n    creator = (\n      <Tag icon=\"schedule\" key=\"schedule\">\n        {scheduleTag.value}\n      </Tag>\n    );\n  } else if (sensorTag) {\n    creator = (\n      <Tag icon=\"sensors\" key=\"sensor\">\n        {sensorTag.value}\n      </Tag>\n    );\n  } else if (automaterialize) {\n    creator = (\n      <Tag icon=\"auto_materialize_policy\" key=\"automaterialize\">\n        Auto-materialize policy\n      </Tag>\n    );\n  } else {\n    creator = <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>{creator || createdBy?.value}</Box>\n  );\n}\n","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Colors,\n  Icon,\n  NonIdealState,\n  Table,\n  Mono,\n  Tag,\n  Button,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  BaseTag,\n  ButtonLink,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {AssetKeyTagCollection} from './AssetKeyTagCollection';\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunCreatedByCell} from './RunCreatedByCell';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {\n  assetKeysForRun,\n  RunStateSummary,\n  RunTime,\n  RUN_TIME_FRAGMENT,\n  titleForRun,\n} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = Object.keys(filter || {}).length;\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                {canTerminateOrDeleteAny ? (\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                ) : null}\n              </th>\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>Target</th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    status\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const targetBackfill = run.tags.find((tag) => tag.key === DagsterTag.Backfill);\n  const targetPartition = run.tags.find((tag) => tag.key === DagsterTag.Partition);\n  const targetPartitionSet = run.tags.find((tag) => tag.key === DagsterTag.PartitionSet);\n  const targetPartitionRangeStart = run.tags.find(\n    (tag) => tag.key === DagsterTag.AssetPartitionRangeStart,\n  );\n  const targetPartitionRangeEnd = run.tags.find(\n    (tag) => tag.key === DagsterTag.AssetPartitionRangeEnd,\n  );\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const tags: TagType[] = [];\n    if (targetBackfill) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        key: targetBackfill.key,\n        value: targetBackfill.value,\n        link,\n      });\n    }\n    if (targetPartition) {\n      tags.push(targetPartition);\n    } else if (targetPartitionSet) {\n      tags.push(targetPartitionSet);\n    } else if (targetPartitionRangeStart !== undefined && targetPartitionRangeEnd !== undefined) {\n      tags.push(targetPartitionRangeStart, targetPartitionRangeEnd);\n    }\n    return tags;\n  }, [\n    run.assetSelection?.length,\n    targetBackfill,\n    targetPartition,\n    targetPartitionRangeEnd,\n    targetPartitionRangeStart,\n    targetPartitionSet,\n  ]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      <td>\n        {canTerminateOrDelete && onToggleChecked ? (\n          <Checkbox checked={!!checked} onChange={onChange} />\n        ) : null}\n      </td>\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          {isHiddenAssetGroupJob(run.pipelineName) ? (\n            <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n          ) : (\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <PipelineReference\n                isJob={isJob}\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext=\"no-link\"\n              />\n              <Link\n                to={\n                  repo\n                    ? workspacePipelinePath({\n                        repoName: repo.match.repository.name,\n                        repoLocation: repo.match.repositoryLocation.name,\n                        pipelineName: run.pipelineName,\n                        isJob,\n                      })\n                    : workspacePipelinePathGuessRepo(run.pipelineName)\n                }\n                target=\"_blank\"\n              >\n                <Icon name=\"open_in_new\" color={Colors.Blue500} />\n              </Link>\n            </Box>\n          )}\n          <Box flex={{direction: 'row', gap: 8, wrap: 'wrap'}}>\n            {run.tags.length ? (\n              <Box>\n                <BaseTag\n                  fillColor={Colors.Gray100}\n                  label={\n                    <ButtonLink\n                      onClick={() => {\n                        setShowRunTags(true);\n                      }}\n                    >\n                      {run.tags.length} tag{run.tags.length === 1 ? '' : 's'}\n                    </ButtonLink>\n                  }\n                />\n              </Box>\n            ) : null}\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags\n                  tags={tagsToShow}\n                  mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n                  onAddTag={onAddTag}\n                />\n              ) : null}\n            </RunTagsWrapper>\n          </Box>\n        </Box>\n        {isHovered && run.tags.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <RunCreatedByCell run={run} onAddTag={onAddTag} />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 24}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          flex={{gap: 8}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  iconWithColor,\n  MenuItem,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink: React.FC<MenuLinkProps> = (props) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition: background-color 50ms, box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.Gray900};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n"],"names":["reducer","state","action","copy","Set","Array","from","checkedIds","type","_action$payload","payload","checked","id","add","delete","lastCheckedId","_action$payload2","allIds","indexOfLast","indexOf","indexOfChecked","_sort","sort","_sort2","_slicedToArray","start","end","slice","forEach","_action$payload3","initialState","useSelectionReducer","_React$useReducer","React","_React$useReducer2","dispatch","onToggleFactory","values","shiftKey","onToggleAll","refineToError","data","launchPipelineReexecution","__typename","Error","errorText","error","message","initializeState","selectedRuns","frozenRuns","step","reexecution","completed","errors","reexecutionDialogReducer","prevState","_objectSpread","_defineProperty","ReexecutionDialog","props","isOpen","onClose","onComplete","reexecutionStrategy","current","count","Object","keys","length","_useMutation","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","reexecute","mutate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","runList","_i","_runList","runId","_yield$reexecute","wrap","_context","prev","next","variables","reexecutionParams","parentRunId","strategy","sent","stop","apply","arguments","canQuicklyClose","_jsxs","Dialog","title","ReexecutionStrategy","canEscapeKeyClose","canOutsideClickClose","children","_jsx","DialogBody","Group","direction","spacing","concat","value","ProgressBar","intent","Math","max","animate","NavigationBlock","progressContent","errorCount","successCount","alignItems","Icon","name","color","Colors","map","Mono","completionContent","DialogFooter","_Fragment","Button","onClick","disabled","buttons","RunActionsMenu","_data$pipelineRunOrEr","run","onAddTag","additionalActionsForRun","refetch","RunsQueryRefetchContext","_React$useState","_React$useState2","visibleDialog","setVisibleDialog","rootServerURI","AppContext","history","useHistory","copyConfig","useCopyToClipboard","onCompleted","_useLazyQuery","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","_useLazyQuery2","loadEnv","_useLazyQuery2$","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","runConfigYaml","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","status","isJob","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","JoinedButtons","AnchorButton","to","Popover","content","Menu","MenuItem","tagName","text","icon","style","display","Box","flex","justifyContent","padding","horizontal","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","OPEN_LAUNCHPAD_UNKNOWN","NO_LAUNCH_PERMISSION_MESSAGE","position","targetTagName","MenuLink","workspacePathFromRunDetails","repositoryName","repository","repositoryLocationName","repositoryLocation","canShow","_result$data","result","getReexecutionVariables","handleLaunchResult","behavior","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","DeletionDialog","onTerminateInstead","RunTags","tags","mode","topBorder","StyledReadOnlyCodeMirror","options","lineNumbers","_callee2","_context2","showSharedToaster","RunBulkActionsMenu","_ref6","selected","clearSelection","_React$useState3","_React$useState4","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","filter","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","gql","_templateObject","_taggedTemplateLiteral","styled","displayName","componentId","Link","withConfig","RunCreatedByCell","creator","scheduleTag","find","tag","key","DagsterTag","sensorTag","user","automaterialize","createdBy","UserDisplay","useLaunchPadHooks","email","Tag","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","hideCreatedBy","_useSelectionReducer","_useSelectionReducer2","_useSelectionReducer3","canTerminateOrDeleteAny","selectedFragments","has","ActionBar","top","grow","bottom","anyFilter","margin","vertical","NonIdealState","description","gap","Table","width","paddingTop","paddingBottom","Checkbox","indeterminate","size","onChange","e","target","HTMLInputElement","additionalColumnHeaders","_props$additionalColu","RunRow","canTerminateOrDelete","additionalColumns","additionalColumnsForRow","call","onToggleChecked","isHighlighted","includes","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","_run$assetSelection2","repo","useRepositoryForRunWithoutSnapshot","pipelines","pipelineOrJob","isReexecution","targetBackfill","targetPartition","targetPartitionSet","targetPartitionRangeStart","targetPartitionRangeEnd","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","_run$assetSelection","link","assetSelection","runsPathWithFilters","token","push","undefined","Row","highlighted","onMouseEnter","onMouseLeave","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","isHiddenAssetGroupJob","AssetKeyTagCollection","assetKeys","assetKeysForRun","PipelineReference","showIcon","pipelineHrefContext","workspacePipelinePath","repoName","repoLocation","workspacePipelinePathGuessRepo","BaseTag","fillColor","label","ButtonLink","RunTagsWrapper","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","_ref2","_ref3","left","right","border","side","rest","_objectWithoutProperties","_excluded","StyledMenuLink","iconWithColor","IconWrapper"],"sourceRoot":""}