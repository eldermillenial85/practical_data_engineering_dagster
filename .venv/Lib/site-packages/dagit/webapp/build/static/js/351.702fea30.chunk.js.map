{"version":3,"file":"static/js/351.702fea30.chunk.js","mappings":"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","sources":["../../core/src/app/GraphQueryImpl.ts","../../core/src/gantt/Constants.ts","../../core/src/gantt/DynamicStepSupport.tsx","../../core/src/gantt/GanttChartLayout.ts","../../core/src/gantt/RunGroupPanel.tsx","../../core/src/gantt/GanttStatusPanel.tsx","../../core/src/pipelines/SidebarComponents.tsx","../../core/src/runs/LogLevel.ts","../../core/src/runs/LogsRowComponents.tsx","../../core/src/runs/LogsScrollingTableHeader.tsx","../../core/src/runs/RunContext.tsx","../../core/src/runs/RunMetadataProvider.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/schedules/TimestampDisplay.tsx","../../core/src/ui/ClearButton.tsx","../../core/src/ui/GraphQueryInput.tsx","../../ui/src/components/ButtonGroup.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Slider.tsx","../../ui/src/components/SplitPanelContainer.tsx","../../ui/src/components/Tabs.tsx","../../ui/src/components/useViewport.tsx"],"sourcesContent":["import {isPlannedDynamicStep, dynamicKeyWithoutIndex} from '../gantt/DynamicStepSupport';\n\nconst MAX_RENDERED_FOR_EMPTY_QUERY = 100;\n\nexport interface GraphQueryItem {\n  name: string;\n  inputs: {\n    dependsOn: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  outputs: {\n    dependedBy: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\ntype TraverseStepFunction<T> = (item: T, callback: (nextItem: T) => void) => void;\n\nclass GraphTraverser<T extends GraphQueryItem> {\n  itemNameMap: {[name: string]: T} = {};\n\n  // TODO: One reason doing DFS on the client side is sub optimal.\n  // javascript is tail end recursive tho so we could go for ever without worrying about\n  // stack overflow problems?\n\n  constructor(items: T[]) {\n    items.forEach((item) => (this.itemNameMap[item.name] = item));\n  }\n\n  itemNamed(name: string): T | undefined {\n    return this.itemNameMap[name];\n  }\n\n  traverse(\n    item: T,\n    step: TraverseStepFunction<T>,\n    depth: number,\n    results: {[key: string]: T} = {},\n  ) {\n    results[item.name] = item;\n\n    if (depth > 0) {\n      step(item, (next) => {\n        if (!(next.name in results)) {\n          this.traverse(next, step, depth - 1, results);\n        }\n      });\n    }\n    return Object.values(results);\n  }\n\n  fetchUpstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.inputs.forEach((input) =>\n        input.dependsOn.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n\n  fetchDownstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.outputs.forEach((output) =>\n        output.dependedBy.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n}\n\nfunction expansionDepthForClause(clause: string) {\n  return clause.includes('*') ? Number.MAX_SAFE_INTEGER : clause.length;\n}\n\nexport function filterByQuery<T extends GraphQueryItem>(items: T[], query: string) {\n  if (query === '*') {\n    return {all: items, applyingEmptyDefault: false, focus: []};\n  }\n  if (query === '') {\n    return {\n      all: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY ? [] : items,\n      applyingEmptyDefault: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY,\n      focus: [],\n    };\n  }\n\n  const traverser = new GraphTraverser<T>(items);\n  const results = new Set<T>();\n  const clauses = query.split(/(,| AND | and | )/g);\n  const focus = new Set<T>();\n\n  for (const clause of clauses) {\n    const parts = /(\\*?\\+*)([.\\w\\d>\\[\\?\\]\\\"_\\/-]+)(\\+*\\*?)/.exec(clause.trim());\n    if (!parts) {\n      continue;\n    }\n    const [, parentsClause = '', itemName = '', descendentsClause = ''] = parts;\n\n    const itemsMatching = items.filter((s) => {\n      if (isPlannedDynamicStep(itemName.replace(/\\\"/g, ''))) {\n        // When unresolved dynamic step (i.e ends with `[?]`) is selected, match all dynamic steps\n        return s.name.startsWith(dynamicKeyWithoutIndex(itemName.replace(/\\\"/g, '')));\n      } else {\n        return /\\\".*\\\"/.test(itemName)\n          ? s.name === itemName.replace(/\\\"/g, '')\n          : s.name.includes(itemName);\n      }\n    });\n\n    for (const item of itemsMatching) {\n      const upDepth = expansionDepthForClause(parentsClause);\n      const downDepth = expansionDepthForClause(descendentsClause);\n\n      focus.add(item);\n      results.add(item);\n      traverser.fetchUpstream(item, upDepth).forEach((other) => results.add(other));\n      traverser.fetchDownstream(item, downDepth).forEach((other) => results.add(other));\n    }\n  }\n\n  return {\n    all: Array.from(results),\n    focus: Array.from(focus),\n    applyingEmptyDefault: false,\n  };\n}\n","import {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepState} from '../runs/RunMetadataProvider';\n\nexport type IGanttNode = GraphQueryItem;\n\nexport interface GanttViewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface GanttChartPlacement {\n  key: string; // A React-friendly unique key like `step:retry-1`\n  width: number;\n  x: number; // Note: This is a pixel value\n  y: number; // Note: This is a \"row number\" not a pixel value\n}\n\nexport interface GanttChartBox extends GanttChartPlacement {\n  state: IStepState | undefined;\n  children: GanttChartBox[];\n  node: IGanttNode;\n  root: boolean;\n}\n\nexport interface GanttChartMarker extends GanttChartPlacement {}\n\nexport interface GanttChartLayout {\n  boxes: GanttChartBox[];\n\n  // only present in timescaled layout\n  markers: GanttChartMarker[];\n}\n\nexport interface GanttChartLayoutOptions {\n  mode: GanttChartMode;\n  zoom: number; // 1 => 100\n  hideWaiting: boolean;\n  hideTimedMode: boolean;\n  hideUnselectedSteps: boolean;\n}\n\nexport enum GanttChartMode {\n  FLAT = 'flat',\n  WATERFALL = 'waterfall',\n  WATERFALL_TIMED = 'waterfall-timed',\n}\n\nexport const MIN_SCALE = 0.0002;\nexport const MAX_SCALE = 0.5;\nexport const LEFT_INSET = 16;\nexport const TOP_INSET = 16;\nexport const BOTTOM_INSET = 16;\nexport const FLAT_INSET_FROM_PARENT = 16;\nexport const BOX_HEIGHT = 34;\nexport const BOX_MARGIN_Y = 5;\nexport const BOX_SPACING_X = 20;\nexport const BOX_WIDTH = 100;\nexport const BOX_DOT_WIDTH_CUTOFF = 8;\nexport const BOX_SHOW_LABEL_WIDTH_CUTOFF = 30;\nexport const BOX_DOT_SIZE = 6;\nexport const BOX_DOT_MARGIN_Y = (BOX_HEIGHT - BOX_DOT_SIZE) / 2;\n\nexport const LINE_SIZE = 2;\nexport const CSS_DURATION = 100;\n\nexport const DEFAULT_OPTIONS: GanttChartLayoutOptions = {\n  mode: GanttChartMode.WATERFALL,\n  hideWaiting: false,\n  hideTimedMode: false,\n  zoom: 1,\n  hideUnselectedSteps: false,\n};\n","/**\n * Ops with dynamic outputs yield execution plans like step_a => step_b[?] => step_c[?],\n * where the index syntax indicates that step_b and step_c may be invoked an arbitrary number\n * of times. At runtime, Dagit replaces and duplicates these \"planned dynamic steps\" as it\n * observes invocations in the logs.\n *\n * Dagit currently parses step keys to implement this behavior and assumes that:\n *  - [?] Indicates a planned dynamic step\n *  - [ and ] are only used in dynamic steps\n *  - Index values are arbitrary (eg: step[1] or step[A] or step[US-East-1])\n *  - Index values are propagated through the entire subgraph after a dynamic invocation\n */\nexport function isDynamicStep(stepKey: string) {\n  return stepKey.endsWith(']');\n}\n\nexport function isPlannedDynamicStep(stepKey: string) {\n  return stepKey.endsWith('[?]');\n}\n\nexport function invocationsOfPlannedDynamicStep(plannedStepKey: string, runtimeStepKeys: string[]) {\n  return runtimeStepKeys.filter((k) => k.startsWith(plannedStepKey.replace('?]', '')));\n}\n\nexport function dynamicKeyWithoutIndex(stepKey: string) {\n  return stepKey.split('[')[0]!;\n}\n\nexport function replacePlannedIndex(stepKey: string, stepKeyWithIndex: string) {\n  return stepKey.replace('[?]', stepKeyWithIndex.match(/(\\[.*\\])/)![1]!);\n}\n","import {Colors} from '@dagster-io/ui';\n\nimport {IRunMetadataDict, IStepAttempt, IStepState} from '../runs/RunMetadataProvider';\n\nimport {\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  BOX_WIDTH,\n  FLAT_INSET_FROM_PARENT,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMarker,\n  GanttChartMode,\n  IGanttNode,\n  LEFT_INSET,\n} from './Constants';\nimport {isDynamicStep, isPlannedDynamicStep, dynamicKeyWithoutIndex} from './DynamicStepSupport';\n\nexport interface BuildLayoutParams {\n  nodes: IGanttNode[];\n  mode: GanttChartMode;\n}\n\nexport const buildLayout = (params: BuildLayoutParams) => {\n  const {nodes, mode} = params;\n\n  // Step 1: Place the nodes that have no dependencies into the layout.\n  const hasNoDependencies = (g: IGanttNode) =>\n    !g.inputs.some((i) => i.dependsOn.some((s) => nodes.find((o) => o.name === s.solid.name)));\n\n  const boxes: GanttChartBox[] = nodes.filter(hasNoDependencies).map((node) => ({\n    node,\n    key: node.name,\n    state: undefined,\n    children: [],\n    x: -1,\n    y: -1,\n    root: true,\n    width: BOX_WIDTH,\n  }));\n\n  // Step 2: Recursively iterate through the graph and insert child nodes\n  // into the `boxes` array, ensuring that their positions in the array are\n  // always greater than their parent(s) position (which requires correction\n  // because boxes can have multiple dependencies.)\n  const roots = [...boxes];\n  roots.forEach((box) => addChildren(boxes, box, params));\n\n  // Step 3: Assign X values (pixels) to each box by traversing the graph from the\n  // roots onward and pushing things to the right as we go.\n  const deepen = (box: GanttChartBox, x: number) => {\n    if (box.x >= x) {\n      // If this box is already further to the right than required by it's parent,\n      // we can safely stop traversing this branch of the graph.\n      return;\n    }\n    box.x = x;\n    box.children.forEach((child) => {\n      if (child.key !== box.key) {\n        deepen(child, box.x + box.width + BOX_SPACING_X);\n      }\n    });\n  };\n  roots.forEach((box) => deepen(box, LEFT_INSET));\n\n  const parents: {[name: string]: GanttChartBox[]} = {};\n  const boxesByY: {[y: string]: GanttChartBox[]} = {};\n\n  // Step 4: Assign Y values (row numbers not pixel values)\n  // First put each box on it's own line. We know this will generate a fine gantt viz\n  // because we sorted the boxes array as we built it.\n  boxes.forEach((box, idx) => {\n    box.y = idx;\n    box.children.forEach((child) => {\n      const target = parents[child.node.name] || [];\n      target.push(box);\n      parents[child.node.name] = target;\n    });\n  });\n\n  boxes.forEach((box) => {\n    const target = boxesByY[`${box.y}`] || [];\n    target.push(box);\n    boxesByY[`${box.y}`] = target;\n  });\n\n  // Next, start at the bottom of the viz and \"collapse\" boxes up on to the previous line\n  // as long as that does not result in them being higher than their parents AND does\n  // not cause them to sit on top of an existing on-the-same-line A ---> B arrow.\n\n  // This makes basic box series (A -> B -> C -> D) one row instead of four rows.\n\n  let changed = true;\n  while (changed) {\n    changed = false;\n    const boxesReversed = [...boxes].reverse();\n    for (const box of boxesReversed) {\n      const boxParents = parents[box.node.name] || [];\n      const highestYParent = boxParents.sort((a, b) => b.y - a.y)[0];\n      if (!highestYParent) {\n        continue;\n      }\n      // Don't re-order the first row of nodes that \"fan out\" from a dynamic output. this\n      // ensures that these nodes are always \"waterfall\" visually by ascending index.\n      if (isDynamicStep(box.node.name) && !isDynamicStep(highestYParent.node.name)) {\n        continue;\n      }\n      const onTargetY = boxesByY[`${highestYParent.y}`]!;\n      const taken = onTargetY.find((r) => r.x === box.x);\n      if (taken) {\n        continue;\n      }\n\n      const parentX = highestYParent.x;\n      const willCross = onTargetY.some((r) => r.x > parentX && r.x < box.x);\n      const willCauseCrossing = onTargetY.some(\n        (r) => r.x < box.x && r.children.some((c) => c.y >= highestYParent.y && c.x > box.x),\n      );\n      if (willCross || willCauseCrossing) {\n        continue;\n      }\n\n      boxesByY[`${box.y}`] = boxesByY[`${box.y}`]!.filter((b) => b !== box);\n      box.y = highestYParent.y;\n      boxesByY[`${box.y}`]!.push(box);\n\n      changed = true;\n      break;\n    }\n  }\n\n  if (mode === GanttChartMode.FLAT) {\n    // Now that we've inlined chains of boxes where possible, flatten everything back out onto the\n    // Y axis. Doing this after inlining ensures that children are close to their parents in the\n    // resulting tree rather than placed randomly before their mutual dependents.\n    let bottomY = 0;\n    for (const y of Object.keys(boxesByY)) {\n      const row = boxesByY[y]!;\n      if (!row.length) {\n        continue;\n      }\n      let x = row[0]!.root\n        ? LEFT_INSET\n        : parents[row[0]!.node.name]![0]!.x + FLAT_INSET_FROM_PARENT;\n      for (const box of row) {\n        box.x = x;\n        box.y = bottomY;\n        bottomY += 1;\n        x += FLAT_INSET_FROM_PARENT;\n      }\n    }\n    boxes.sort((a, b) => a.y - b.y || a.x - b.x);\n  } else {\n    // Since we've inlined boxes, shift rows up and fill empty space until every Y value has a box.\n    changed = true;\n    while (changed) {\n      changed = false;\n      const maxY = boxes.reduce((m, r) => Math.max(m, r.y), 0);\n      for (let y = 0; y < maxY; y++) {\n        const empty = !boxes.some((r) => r.y === y);\n        if (empty) {\n          boxes.filter((r) => r.y > y).forEach((r) => (r.y -= 1));\n          changed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {boxes, markers: []} as GanttChartLayout;\n};\n\nconst ensureSubtreeAfterParentInArray = (\n  boxes: GanttChartBox[],\n  parent: GanttChartBox,\n  box: GanttChartBox,\n) => {\n  const parentIdx = boxes.indexOf(parent);\n  const boxIdx = boxes.indexOf(box);\n  if (parentIdx <= boxIdx) {\n    return;\n  }\n  boxes.splice(boxIdx, 1);\n  boxes.splice(parentIdx, 0, box);\n\n  // Note: It's important that we don't cache or pass indexes during this recursion.\n  // Visiting a child below could cause boxes earlier in the array to be pulled to the\n  // end. Our `parentIdx` above is not stable within the box.children loop below.\n\n  for (const child of box.children) {\n    ensureSubtreeAfterParentInArray(boxes, box, child);\n  }\n};\n\nconst addChildren = (boxes: GanttChartBox[], box: GanttChartBox, params: BuildLayoutParams) => {\n  const seen: string[] = [];\n  const added: GanttChartBox[] = [];\n\n  for (const out of box.node.outputs) {\n    for (const dep of out.dependedBy) {\n      const depNode = params.nodes.find((n) => dep.solid.name === n.name);\n      if (!depNode) {\n        continue;\n      }\n\n      if (seen.includes(depNode.name)) {\n        continue;\n      }\n\n      // Hide the unresolved node if any its resolved node exists\n      if (\n        isPlannedDynamicStep(depNode.name) &&\n        seen\n          .filter((n) => isDynamicStep(n))\n          .some((n) => dynamicKeyWithoutIndex(n) === dynamicKeyWithoutIndex(depNode.name))\n      ) {\n        continue;\n      }\n\n      seen.push(depNode.name);\n\n      const depBoxIdx = boxes.findIndex((r) => r.node === depNode);\n      let depBox: GanttChartBox;\n\n      if (depBoxIdx === -1) {\n        depBox = {\n          children: [],\n          key: depNode.name,\n          node: depNode,\n          state: undefined,\n          width: BOX_WIDTH,\n          root: false,\n          x: 0,\n          y: -1,\n        };\n        boxes.push(depBox);\n        added.push(depBox);\n      } else {\n        depBox = boxes[depBoxIdx]!;\n        ensureSubtreeAfterParentInArray(boxes, box, depBox);\n      }\n\n      box.children.push(depBox);\n    }\n  }\n\n  // Note: To limit the amount of time we spend shifting elements of our `boxes` array to keep it\n  // ordered (knowing that parents appear before children gives us more opportunities for early\n  // returns, etc. elsewhere), we add all of our immediate children and THEN proceed in to the next layer.\n  for (const depBox of added) {\n    addChildren(boxes, depBox, params);\n  }\n};\n\nconst TextColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue700,\n  [IStepState.RETRY_REQUESTED]: Colors.White,\n  [IStepState.SUCCEEDED]: Colors.White,\n  [IStepState.FAILED]: Colors.White,\n  [IStepState.SKIPPED]: Colors.White,\n  [IStepState.UNKNOWN]: Colors.White,\n};\n\nconst BackgroundColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue100,\n  [IStepState.RETRY_REQUESTED]: Colors.Yellow500,\n  [IStepState.SUCCEEDED]: Colors.Green500,\n  [IStepState.FAILED]: Colors.Red500,\n  [IStepState.SKIPPED]: Colors.Gray500,\n  [IStepState.UNKNOWN]: Colors.Gray400,\n};\n\nexport const boxStyleFor = (\n  state: IStepState | undefined,\n  context: {\n    metadata: IRunMetadataDict;\n    options: {mode: GanttChartMode};\n  },\n) => {\n  // Not running and not viewing waterfall? We always use a nice blue\n  if (\n    !context.metadata.startedPipelineAt &&\n    context.options.mode !== GanttChartMode.WATERFALL_TIMED\n  ) {\n    return {background: `#2491eb`};\n  }\n\n  // Step has started and has state? Return state color.\n  if (state && state !== IStepState.PREPARING) {\n    return {\n      color: TextColorForStates[state] || Colors.White,\n      background: BackgroundColorForStates[state] || Colors.Gray400,\n    };\n  }\n\n  // Step has not started, use \"hypothetical dotted box\".\n  return {\n    color: Colors.Gray600,\n    background: Colors.White,\n    border: `1.5px dotted ${Colors.Gray500}`,\n  };\n};\n\n// Does a shallow clone of the boxes so attributes (`width`, `x`, etc) can be mutated.\n// This requires special logic because (for easy graph travesal), boxes.children references\n// other elements of the boxes array. A basic deepClone would replicate these into\n// copies rather than references.\nconst cloneLayout = ({boxes, markers}: GanttChartLayout): GanttChartLayout => {\n  const map = new WeakMap();\n  const nextMarkers = markers.map((m) => ({...m}));\n  const nextBoxes: GanttChartBox[] = [];\n  for (const box of boxes) {\n    const next = {...box};\n    nextBoxes.push(next);\n    map.set(box, next);\n  }\n\n  boxes.forEach((box, ii) => {\n    nextBoxes[ii]!.children = box.children.map((c) => map.get(c));\n  });\n\n  return {boxes: nextBoxes, markers: nextMarkers};\n};\n\nconst positionAndSplitBoxes = (\n  boxes: GanttChartBox[],\n  metadata: IRunMetadataDict,\n  positionFor: (\n    box: GanttChartBox,\n    run?: IStepAttempt | null,\n    runIdx?: number,\n  ) => {width: number; x: number},\n) => {\n  // Apply X values + widths to boxes, and break apart retries into their own boxes by looking\n  // at the transitions recorded for each step.\n  for (let ii = boxes.length - 1; ii >= 0; ii--) {\n    const box = boxes[ii]!;\n    const meta = metadata.steps[box.node.name];\n    if (!meta) {\n      Object.assign(box, positionFor(box));\n      continue;\n    }\n    if (meta.attempts.length === 0) {\n      Object.assign(box, positionFor(box));\n      box.state = meta.state;\n      continue;\n    }\n\n    const runBoxes: GanttChartBox[] = [];\n    meta.attempts.forEach((run, runIdx) => {\n      runBoxes.push({\n        ...box,\n        ...positionFor(box, run, runIdx),\n        key: `${box.key}-${runBoxes.length}`,\n        state: run.exitState || IStepState.RUNNING,\n      });\n    });\n\n    // Move the children (used to draw outbound lines) to the last box\n    for (let jj = 0; jj < runBoxes.length - 1; jj++) {\n      runBoxes[jj]!.children = [runBoxes[jj + 1]!];\n    }\n    runBoxes[runBoxes.length - 1]!.children = box.children;\n\n    Object.assign(box, runBoxes[0]);\n    // Add additional boxes we created for retries\n    if (runBoxes.length > 1) {\n      boxes.splice(ii, 0, ...runBoxes.slice(1));\n    }\n  }\n};\n\n/** Traverse the graph from the root and place boxes that still have x=0 locations.\n(Unstarted or skipped boxes) so that they appear downstream of running boxes\nwe have position / time data for. */\nconst positionUntimedBoxes = (boxes: GanttChartBox[], earliestAllowedX: number) => {\n  const unstarted = boxes.filter((box) => box.x === 0);\n\n  const visit = (box: GanttChartBox, parentX: number) => {\n    if (box.x === 0) {\n      // If we are visiting the box for the first time (by traversing the tree from\n      // another starting box), starting another pass using it as the root is unnecessary.\n      const idx = unstarted.indexOf(box);\n      if (idx !== -1) {\n        unstarted.splice(idx, 1);\n      }\n    }\n\n    box.x = Math.max(box.x, earliestAllowedX, parentX);\n\n    const minXForUnstartedChildren = box.x + box.width + BOX_SPACING_X;\n    for (const child of box.children) {\n      if (child.x < minXForUnstartedChildren) {\n        visit(child, minXForUnstartedChildren);\n      }\n    }\n  };\n\n  let box: GanttChartBox | undefined;\n  while ((box = unstarted.shift())) {\n    visit(box, earliestAllowedX);\n  }\n};\n\nexport const adjustLayoutWithRunMetadata = (\n  layout: GanttChartLayout,\n  options: GanttChartLayoutOptions,\n  metadata: IRunMetadataDict,\n  scale: number,\n  nowMs: number,\n): GanttChartLayout => {\n  // Clone the layout into a new set of JS objects so that React components can do shallow\n  // comparison between the old set and the new set and code below can traverse + mutate\n  // in place.\n  let {boxes} = cloneLayout(layout);\n  const markers: GanttChartMarker[] = [];\n\n  // Move and size boxes based on the run metadata. Note that we don't totally invalidate\n  // the pre-computed layout for the execution plan, (and shouldn't have to since the run's\n  // step ordering, etc. should obey the constraints we already planned for). We just push\n  // boxes around on their existing rows.\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    const startedPipelineAt = metadata.startedPipelineAt || nowMs;\n    const xForMs = (time: number) => LEFT_INSET + (time - startedPipelineAt) * scale;\n    const widthForMs = ({start, end}: {start: number; end?: number}) =>\n      Math.max(BOX_DOT_WIDTH_CUTOFF, ((end || nowMs) - start) * scale);\n\n    positionAndSplitBoxes(boxes, metadata, (_box, run) => ({\n      x: run ? xForMs(run.start) : 0,\n      width: run ? widthForMs(run) : BOX_WIDTH,\n    }));\n\n    positionUntimedBoxes(boxes, xForMs(nowMs) + BOX_SPACING_X);\n\n    // Add markers to the layout using the run metadata\n    metadata.globalMarkers.forEach((m) => {\n      if (m.start === undefined) {\n        return;\n      }\n      markers.push({\n        key: `global:${m.key}`,\n        y: 0,\n        x: xForMs(m.start),\n        width: widthForMs({start: m.start, end: m.end}),\n      });\n    });\n    Object.entries(metadata.steps).forEach(([name, step]) => {\n      for (const m of step.markers) {\n        if (m.start === undefined) {\n          continue;\n        }\n        const stepBox = layout.boxes.find((b) => b.node.name === name);\n        if (!stepBox) {\n          continue;\n        }\n\n        markers.push({\n          key: `${name}:${m.key}`,\n          y: stepBox.y,\n          x: xForMs(m.start),\n          width: widthForMs({start: m.start, end: m.end}),\n        });\n      }\n    });\n\n    // Apply display options / filtering\n    if (options.hideWaiting) {\n      boxes = boxes.filter((b) => !!metadata.steps[b.node.name]?.state);\n    }\n  } else if (options.mode === GanttChartMode.WATERFALL) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (BOX_SPACING_X + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else if (options.mode === GanttChartMode.FLAT) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (2 + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else {\n    throw new Error('Invalid mdoe ');\n  }\n\n  return {boxes, markers};\n};\n\n/**\n * Returns a set of query presets that highlight interesting slices of the visualization.\n */\nexport const interestingQueriesFor = (metadata: IRunMetadataDict, layout: GanttChartLayout) => {\n  if (layout.boxes.length === 0) {\n    return;\n  }\n  const results: {name: string; value: string}[] = [];\n\n  const errorsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]!.state === IStepState.FAILED)\n    .map((k) => `+${k}`)\n    .join(', ');\n  if (errorsQuery) {\n    results.push({name: 'Errors', value: errorsQuery});\n  }\n\n  const slowStepsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]?.end && metadata.steps[k]?.start)\n    .sort(\n      (a, b) =>\n        metadata.steps[b]!.end! -\n        metadata.steps[b]!.start! -\n        (metadata.steps[a]!.end! - metadata.steps[a]!.start!),\n    )\n    .slice(0, 5)\n    .map((k) => `\"${k}\"`)\n    .join(', ');\n  if (slowStepsQuery) {\n    results.push({name: 'Slowest Individual Steps', value: slowStepsQuery});\n  }\n\n  const rightmostCompletedBox = [...layout.boxes]\n    .filter((b) => metadata.steps[b.node.name]?.end)\n    .sort((a, b) => b.x + b.width - (a.x + a.width))[0];\n\n  if (rightmostCompletedBox) {\n    results.push({\n      name: 'Slowest Path',\n      value: `*${rightmostCompletedBox.node.name}`,\n    });\n  }\n\n  return results;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, ButtonLink, Colors, Group, Icon, FontFamily} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunStateSummary, RunTime, RUN_TIME_FRAGMENT} from '../runs/RunUtils';\n\nimport {\n  RunGroupPanelQuery,\n  RunGroupPanelQueryVariables,\n  RunGroupPanelRunFragment,\n} from './types/RunGroupPanel.types';\n\ntype Run = RunGroupPanelRunFragment;\n\nfunction subsetTitleForRun(run: {tags: {key: string; value: string}[]}) {\n  const stepsTag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  return stepsTag ? stepsTag.value : '*';\n}\n\nexport const RunGroupPanel: React.FC<{runId: string; runStatusLastChangedAt: number}> = ({\n  runId,\n  runStatusLastChangedAt,\n}) => {\n  const queryResult = useQuery<RunGroupPanelQuery, RunGroupPanelQueryVariables>(\n    RUN_GROUP_PANEL_QUERY,\n    {\n      variables: {runId},\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const {data, refetch} = queryResult;\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  // Because the RunGroupPanel makes it's own query for the runs and their statuses,\n  // the log + gantt chart UI can show that the run is \"completed\" for up to 15s before\n  // it's reflected in the sidebar. Observing this single timestamp from our parent\n  // allows us to refetch data immediately when the run's exitedAt / startedAt, etc. is set.\n  React.useEffect(() => {\n    if (runStatusLastChangedAt) {\n      refetch();\n    }\n  }, [refetch, runStatusLastChangedAt]);\n\n  const group = data?.runGroupOrError;\n\n  if (!group || group.__typename === 'RunGroupNotFoundError') {\n    return null;\n  }\n\n  if (group.__typename === 'PythonError') {\n    return (\n      <Group direction=\"row\" spacing={8} padding={8}>\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div style={{fontSize: '13px'}}>\n          The run group for this run could not be loaded.{' '}\n          <ButtonLink\n            color={Colors.Blue500}\n            underline=\"always\"\n            onClick={() => {\n              showCustomAlert({\n                title: 'Python error',\n                body: group.message,\n              });\n            }}\n          >\n            View error\n          </ButtonLink>\n        </div>\n      </Group>\n    );\n  }\n\n  if (group.runs?.length === 1) {\n    return null;\n  }\n\n  const unsorted: Run[] = [];\n  (group.runs || []).forEach((run: Run | null) => {\n    if (run && typeof run.startTime === 'number') {\n      unsorted.push(run);\n    }\n  });\n  const runs: Run[] = unsorted.sort((a: Run, b: Run) => {\n    return (a.startTime || 0) - (b.startTime || 0);\n  });\n\n  return (\n    <SidebarSection title={runs[0] ? `${runs[0].pipelineName} (${runs.length})` : ''}>\n      <>\n        {runs.map((g, idx) =>\n          g ? (\n            <RunGroupRun key={g.id} to={`/runs/${g.id}`} selected={g.id === runId}>\n              {idx < runs.length - 1 && <ThinLine style={{height: 36}} />}\n              <Box padding={{top: 4}}>\n                <RunStatusIndicator status={g.status} />\n              </Box>\n              <div\n                style={{\n                  flex: 1,\n                  marginLeft: 5,\n                  minWidth: 0,\n                  color: Colors.Gray700,\n                }}\n              >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <RunTitle>\n                    {g.id.split('-')[0]}\n                    {idx === 0 && RootTag}\n                  </RunTitle>\n                  <RunTime run={g} />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    color: Colors.Gray700,\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {subsetTitleForRun(g)}\n                  <RunStateSummary run={g} />\n                </div>\n              </div>\n            </RunGroupRun>\n          ) : null,\n        )}\n      </>\n    </SidebarSection>\n  );\n};\n\nexport const RUN_GROUP_PANEL_QUERY = gql`\n  query RunGroupPanelQuery($runId: ID!) {\n    runGroupOrError(runId: $runId) {\n      ... on RunGroup {\n        rootRunId\n        runs {\n          id\n          ...RunGroupPanelRun\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment RunGroupPanelRun on Run {\n    id\n    parentRunId\n    status\n    stepKeysToExecute\n    pipelineName\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunGroupRun = styled(Link)<{selected: boolean}>`\n  align-items: flex-start;\n  background: ${({selected}) => (selected ? Colors.Gray100 : Colors.White)};\n  padding: 4px 6px 4px 24px;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 20px;\n  display: flex;\n  position: relative;\n  &:hover {\n    text-decoration: none;\n    background: ${({selected}) => (selected ? Colors.Gray100 : Colors.Gray50)};\n  }\n`;\n\nconst ThinLine = styled.div`\n  position: absolute;\n  top: 20px;\n  width: 1px;\n  background: ${Colors.Gray200};\n  left: 29px;\n  z-index: 2;\n`;\n\nconst RunTitle = styled.span`\n  color: ${Colors.Dark};\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: text;\n  flex: 1;\n`;\n\nconst RootTag = (\n  <span\n    style={{\n      borderRadius: 2,\n      fontSize: 12,\n      lineHeight: '14px',\n      background: Colors.Gray300,\n      color: Colors.White,\n      padding: '0 4px',\n      fontWeight: 400,\n      userSelect: 'none',\n      marginLeft: 12,\n    }}\n  >\n    ROOT\n  </span>\n);\n","import {Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {formatElapsedTime} from '../app/Util';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {IRunMetadataDict, IStepState} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\n\nimport {GanttChartMode} from './Constants';\nimport {isPlannedDynamicStep} from './DynamicStepSupport';\nimport {boxStyleFor} from './GanttChartLayout';\nimport {RunGroupPanel} from './RunGroupPanel';\n\ninterface GanttStatusPanelProps {\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  selection: StepSelection;\n  runId: string;\n  nowMs: number;\n\n  onClickStep?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHighlightStep?: (step: string | null) => void;\n  onDoubleClickStep?: (step: string) => void;\n}\n\nexport const GanttStatusPanel: React.FC<GanttStatusPanelProps> = ({\n  runId,\n  nowMs,\n  graph,\n  metadata,\n  selection,\n  onClickStep,\n  onDoubleClickStep,\n  onHighlightStep,\n}) => {\n  const {preparing, executing, errored, succeeded, notExecuted} = React.useMemo(() => {\n    const keys = Object.keys(metadata.steps);\n    const preparing = [];\n    const executing = [];\n    const errored = [];\n    const succeeded = [];\n    const notExecuted = [];\n    for (const key of keys) {\n      const state = metadata.steps[key]!.state;\n      switch (state) {\n        case IStepState.PREPARING:\n          preparing.push(key);\n          break;\n        case IStepState.RUNNING:\n        case IStepState.UNKNOWN:\n          executing.push(key);\n          break;\n        case IStepState.FAILED:\n          errored.push(key);\n          break;\n        case IStepState.SUCCEEDED:\n          succeeded.push(key);\n          break;\n      }\n    }\n\n    for (const node of graph) {\n      const name = node.name;\n      // Leave out [?] steps since they don't receive event log entries or have states\n      if (!isPlannedDynamicStep(name) && !metadata.steps[name]?.state) {\n        notExecuted.push(name);\n      }\n    }\n    return {preparing, executing, errored, succeeded, notExecuted};\n  }, [metadata, graph]);\n\n  const renderStepItem = (stepName: string) => (\n    <StepItem\n      nowMs={nowMs}\n      name={stepName}\n      key={stepName}\n      metadata={metadata}\n      selected={selection.keys.includes(stepName)}\n      onClick={onClickStep}\n      onDoubleClick={onDoubleClickStep}\n      onHover={onHighlightStep}\n    />\n  );\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <RunGroupPanel\n        runId={runId}\n        runStatusLastChangedAt={\n          metadata.exitedAt || metadata.startedProcessAt || metadata.startedPipelineAt || 0\n        }\n      />\n      <SidebarSection title={`Preparing (${preparing.length})`}>\n        <div>\n          {preparing.length === 0 ? (\n            <EmptyNotice>No steps are waiting to execute</EmptyNotice>\n          ) : (\n            preparing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Executing (${executing.length})`}>\n        <div>\n          {executing.length === 0 ? (\n            <EmptyNotice>No steps are executing</EmptyNotice>\n          ) : (\n            executing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Errored (${errored.length})`}>\n        <div>\n          {errored.length === 0 ? (\n            <EmptyNotice>No steps have errored</EmptyNotice>\n          ) : (\n            errored.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection collapsedByDefault title={`Succeeded (${succeeded.length})`}>\n        <div>\n          {succeeded.length === 0 ? (\n            <EmptyNotice>No steps have succeeded</EmptyNotice>\n          ) : (\n            succeeded.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      {notExecuted.length > 0 ? (\n        <SidebarSection collapsedByDefault title={`Not executed (${notExecuted.length})`}>\n          <div>{notExecuted.map(renderStepItem)}</div>\n        </SidebarSection>\n      ) : null}\n    </div>\n  );\n};\n\nconst StepItem: React.FC<{\n  name: string;\n  selected: boolean;\n  metadata: IRunMetadataDict;\n  nowMs: number;\n  onClick?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHover?: (name: string | null) => void;\n  onDoubleClick?: (name: string) => void;\n}> = ({nowMs, name, selected, metadata, onClick, onHover, onDoubleClick}) => {\n  const step = metadata.steps[name];\n  const end = (step && step.end) ?? nowMs;\n  return (\n    <StepItemContainer\n      key={name}\n      selected={selected}\n      onClick={(evt: React.MouseEvent<any>) => onClick?.(name, evt)}\n      onDoubleClick={() => onDoubleClick?.(name)}\n      onMouseEnter={() => onHover?.(name)}\n      onMouseLeave={() => onHover?.(null)}\n    >\n      {step?.state === IStepState.RUNNING ? (\n        <Spinner purpose=\"body-text\" />\n      ) : step?.state === IStepState.UNKNOWN ? (\n        <Tooltip\n          // Modifiers are to prevent flickering: https://github.com/palantir/blueprint/issues/4019\n          modifiers={{\n            preventOverflow: {enabled: false},\n            flip: {enabled: false},\n          }}\n          position=\"bottom\"\n          content=\"Unknown step state. Run completed without step execution completion.\"\n        >\n          <StepStatusDot>?</StepStatusDot>\n        </Tooltip>\n      ) : (\n        <StepStatusDot\n          style={{\n            ...boxStyleFor(step?.state, {\n              metadata,\n              options: {mode: GanttChartMode.WATERFALL_TIMED},\n            }),\n          }}\n        />\n      )}\n      <StepLabel>{name}</StepLabel>\n      {step?.start && <Elapsed>{formatElapsedTime(end - step.start)}</Elapsed>}\n    </StepItemContainer>\n  );\n};\n\nconst StepLabel = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n`;\n\nconst StepItemContainer = styled.div<{selected: boolean}>`\n  display: flex;\n  line-height: 32px;\n  height: 32px;\n  padding: 0 14px 0 6px;\n  gap: 6px;\n  align-items: center;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  font-size: 12px;\n  ${({selected}) => selected && `background: ${Colors.Gray100};`}\n\n  &:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n\nexport const StepStatusDot = styled.div`\n  width: 12px;\n  height: 12px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 12px;\n`;\n\nconst Elapsed = styled.div`\n  color: ${Colors.Gray400};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst EmptyNotice = styled.div`\n  min-height: 32px;\n  font-size: 12px;\n  padding: 8px 24px;\n  color: ${Colors.Gray400};\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Collapse} from '@blueprintjs/core';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\ninterface ISidebarSectionProps {\n  children: React.ReactNode;\n  title: string;\n  collapsedByDefault?: boolean;\n}\n\nexport const SidebarSection: React.FC<ISidebarSectionProps> = (props) => {\n  const {title, collapsedByDefault, children} = props;\n  const [open, setOpen] = useStateWithStorage<boolean>(`sidebar-${title}`, (storedValue) =>\n    storedValue === true || storedValue === false ? storedValue : !collapsedByDefault,\n  );\n\n  const onToggle = React.useCallback(() => {\n    setOpen((o) => !o);\n  }, [setOpen]);\n\n  return (\n    <>\n      <CollapsingHeaderBar onClick={onToggle}>\n        <SidebarTitleTextWrap>{title}</SidebarTitleTextWrap>\n        <Icon\n          size={24}\n          name=\"arrow_drop_down\"\n          style={{transform: open ? 'rotate(0)' : 'rotate(-90deg)'}}\n        />\n      </CollapsingHeaderBar>\n      <Collapse isOpen={open}>\n        <div>{children}</div>\n      </Collapse>\n    </>\n  );\n};\n\nconst SidebarTitleTextWrap = styled.div`\n  overflow: hidden;\n  min-width: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SidebarTitle = styled.h3`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 0 0 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :first-child:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 2px 0 0 0;\n`;\n\nexport const SectionSmallHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  margin: 2px 0;\n`;\n\nexport const SidebarSubhead = styled.div`\n  color: ${Colors.Gray400};\n  font-size: 0.7rem;\n`;\n\nexport const SectionItemContainer = styled.div`\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  margin-bottom: 12px;\n  padding-bottom: 12px;\n  font-size: 0.8rem;\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\nconst CollapsingHeaderBar = styled.div`\n  height: 32px;\n  padding-left: 24px;\n  padding-right: 8px;\n  background: ${Colors.White};\n  border-top: 1px solid ${Colors.KeylineGray};\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  color: ${Colors.Gray900};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 700;\n  user-select: none;\n`;\n","export enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n  EVENT = 'EVENT', // structured events\n}\n\nexport const DefaultLogLevels = ['INFO', 'WARNING', 'ERROR', 'CRITICAL', 'EVENT'];\n","import {Colors, FontFamily, MetadataTable, Tooltip} from '@dagster-io/ui';\nimport memoize from 'lodash/memoize';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTimeWithMsec} from '../app/Util';\nimport {TimeContext} from '../app/time/TimeContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\n\nimport {LogLevel} from './LogLevel';\nimport {ColumnWidthsContext} from './LogsScrollingTableHeader';\n\nconst bgcolorForLevel = (level: LogLevel) =>\n  ({\n    [LogLevel.DEBUG]: Colors.White,\n    [LogLevel.INFO]: Colors.White,\n    [LogLevel.EVENT]: Colors.White,\n    [LogLevel.WARNING]: Colors.Yellow50,\n    [LogLevel.ERROR]: Colors.Red50,\n    [LogLevel.CRITICAL]: Colors.Red50,\n  }[level]);\n\nexport const Row = styled.div<{level: LogLevel; highlighted: boolean}>`\n  font-size: 0.9em;\n  width: 100%;\n  height: 100%;\n  max-height: 17em;\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  overflow: hidden;\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${({highlighted, level}) => (highlighted ? '#ffe39f' : bgcolorForLevel(level))};\n  &:hover {\n    background: ${({highlighted}) => (highlighted ? '#ffe39f' : 'white')};\n  }\n  color: ${(props) =>\n    ({\n      [LogLevel.DEBUG]: Colors.Gray400,\n      [LogLevel.INFO]: Colors.Gray900,\n      [LogLevel.EVENT]: Colors.Gray900,\n      [LogLevel.WARNING]: Colors.Yellow700,\n      [LogLevel.ERROR]: Colors.Red500,\n      [LogLevel.CRITICAL]: Colors.Red500,\n    }[props.level])};\n`;\n\nexport const StructuredContent = styled.div`\n  background: rgba(255, 255, 255, 0.5);\n  color: ${Colors.Gray900};\n  box-sizing: border-box;\n  border-left: 1px solid ${Colors.KeylineGray};\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\n// Step Key Column\n//\n// Renders the left column with the step key broken into hierarchical components.\n// Manually implements middle text truncation since we can count on monospace font\n// rendering being fairly consistent.\n//\nexport const OpColumn = (props: {stepKey: string | false | null}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const parts = String(props.stepKey).split('.');\n  return (\n    <OpColumnContainer style={{width: widths.solid}}>\n      {props.stepKey\n        ? parts.map((p, idx) => (\n            <div\n              key={idx}\n              data-tooltip={p}\n              data-tooltip-style={OpColumnTooltipStyle}\n              style={{\n                marginLeft: Math.max(0, idx * 15 - 9),\n                fontWeight: idx === parts.length - 1 ? 600 : 300,\n              }}\n            >\n              {idx > 0 ? '↳' : ''}\n              {p.length > 30 - idx * 2\n                ? `${p.substr(0, 16 - idx * 2)}…${p.substr(p.length - 14)}`\n                : p}\n            </div>\n          ))\n        : '-'}\n    </OpColumnContainer>\n  );\n};\n\nexport const OpColumnContainer = styled.div`\n  width: 250px;\n  flex-shrink: 0;\n  padding: 4px 12px;\n`;\n\nconst OpColumnTooltipStyle = JSON.stringify({\n  fontSize: '0.9em',\n  fontFamily: FontFamily.monospace,\n  color: Colors.Dark,\n  background: Colors.White,\n  border: `1px solid ${Colors.Gray100}`,\n  top: -8,\n  left: 1,\n});\n\nconst timestampFormat = memoize((timezone: string) => {\n  return new Intl.DateTimeFormat(navigator.language, {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n  });\n});\n\nconst fractionalSecondFormat = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n// Timestamp Column\n\nexport const TimestampColumn: React.FC<{\n  time: string | null;\n  runStartTime?: number;\n  stepStartTime?: number;\n}> = React.memo((props) => {\n  const {time, runStartTime, stepStartTime} = props;\n  const location = useLocation();\n  const widths = React.useContext(ColumnWidthsContext);\n  const {\n    timezone: [timezone],\n  } = React.useContext(TimeContext);\n  const canShowTooltip = typeof time === 'string' && typeof runStartTime === 'number';\n\n  const timeString = () => {\n    if (time) {\n      const timeNumber = Number(time);\n      const main = timestampFormat(timezone).format(new Date(timeNumber));\n      const fractionalSec = (timeNumber % 1000) / 1000;\n      return `${main}${fractionalSecondFormat(navigator.language).format(fractionalSec).slice(1)}`;\n    }\n    return '';\n  };\n\n  const href = `${location.pathname}?${qs.stringify({focusedTime: props.time})}`;\n  const runElapsedTime = formatElapsedTimeWithMsec(Number(time) - (runStartTime || 0));\n  const stepElapsedTime = formatElapsedTimeWithMsec(Number(time) - (stepStartTime || 0));\n\n  return (\n    <TimestampColumnContainer style={{width: widths.timestamp}}>\n      <Tooltip\n        canShow={canShowTooltip}\n        content={\n          <MetadataTable\n            spacing={0}\n            dark\n            rows={[\n              {\n                key: 'Since start of run',\n                value: (\n                  <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                    {runElapsedTime}\n                  </span>\n                ),\n              },\n              stepStartTime\n                ? {\n                    key: 'Since start of step',\n                    value: (\n                      <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                        {stepElapsedTime}\n                      </span>\n                    ),\n                  }\n                : null,\n            ]}\n          />\n        }\n        placement=\"left\"\n      >\n        <Link to={href}>{timeString()}</Link>\n      </Tooltip>\n    </TimestampColumnContainer>\n  );\n});\n\nconst TimestampColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding: 4px 4px 4px 12px;\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${Colors.Gray400};\n  }\n\n  a:hover,\n  a:active {\n    text-decoration: underline;\n  }\n`;\n\nexport const EventTypeColumn = (props: {children: React.ReactNode}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <EventTypeColumnContainer style={{width: widths.eventType}}>\n      {props.children}\n    </EventTypeColumnContainer>\n  );\n};\n\nconst EventTypeColumnContainer = styled.div`\n  flex-shrink: 0;\n  color: ${Colors.Gray400};\n  padding: 4px;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nconst ColumnWidthsStorageKey = 'ColumnWidths';\nconst ColumnWidths = Object.assign(\n  {\n    eventType: 140,\n    solid: 150,\n    timestamp: 117,\n  },\n  getJSONForKey(ColumnWidthsStorageKey),\n);\n\nconst MIN_COLUMN_WIDTH = 40;\n\nexport const ColumnWidthsContext = React.createContext({\n  ...ColumnWidths,\n  onChange: (_: typeof ColumnWidths) => {},\n});\n\nexport class ColumnWidthsProvider extends React.Component<\n  {children: React.ReactNode; onWidthsChanged: (widths: typeof ColumnWidths) => void},\n  typeof ColumnWidths\n> {\n  state = ColumnWidths;\n\n  onWidthsChangedFromContext = (columnWidths: typeof ColumnWidths) => {\n    window.localStorage.setItem(ColumnWidthsStorageKey, JSON.stringify(columnWidths));\n    this.props.onWidthsChanged(columnWidths);\n    this.setState(columnWidths);\n  };\n\n  render() {\n    return (\n      <ColumnWidthsContext.Provider\n        value={{\n          ...this.state,\n          onChange: this.onWidthsChangedFromContext,\n        }}\n      >\n        {this.props.children}\n      </ColumnWidthsContext.Provider>\n    );\n  }\n}\n\ninterface HeaderProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onResize'> {\n  width: number;\n  handleSide?: 'left' | 'right';\n  onResize?: (width: number) => void;\n}\n\ninterface HeaderState {\n  isDragging: boolean;\n  width: number;\n  screenX: number;\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  state = {\n    isDragging: false,\n    width: 0,\n    screenX: 0,\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseDown = (m: React.MouseEvent<HTMLDivElement>) => {\n    const {width} = this.props;\n    this.setState({\n      isDragging: true,\n      screenX: m.screenX,\n      width,\n    });\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (evt: MouseEvent) => {\n    const {onResize, handleSide} = this.props;\n    const {isDragging, width, screenX} = this.state;\n    if (!evt.screenX || !isDragging || !onResize) {\n      return;\n    }\n    const dir = handleSide === 'left' ? -1 : 1;\n    onResize(Math.max(MIN_COLUMN_WIDTH, width + (evt.screenX - screenX) * dir));\n  };\n\n  onMouseUp = () => {\n    const {isDragging} = this.state;\n    isDragging && this.setState({isDragging: false});\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  render() {\n    const isDraggable = !!this.props.onResize;\n\n    return (\n      <HeaderContainer style={{width: this.props.width}}>\n        <HeaderDragHandle\n          onMouseDown={isDraggable ? this.onMouseDown : undefined}\n          isDraggable={isDraggable}\n          isDragging={this.state.isDragging}\n          side={this.props.handleSide || 'right'}\n        >\n          <div />\n        </HeaderDragHandle>\n        <HeaderLabel>{this.props.children}</HeaderLabel>\n      </HeaderContainer>\n    );\n  }\n}\n\nexport const Headers = () => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <HeadersContainer>\n      <Header\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n      <Header width={widths.solid} onResize={(width) => widths.onChange({...widths, solid: width})}>\n        Op\n      </Header>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Event Type\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Info</HeaderContainer>\n    </HeadersContainer>\n  );\n};\n\nexport const HeadersContainer = styled.div`\n  display: flex;\n  color: ${Colors.Gray400};\n  text-transform: uppercase;\n  font-size: 12px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  z-index: 2;\n`;\n\nexport const HeaderContainer = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  user-select: none;\n  display: inline-block;\n  padding: 0 12px;\n  line-height: 32px;\n`;\n\n// eslint-disable-next-line no-unexpected-multiline\nconst HeaderDragHandle = styled.div<{\n  side: 'left' | 'right';\n  isDraggable: boolean;\n  isDragging: boolean;\n}>`\n  width: 1px;\n  height: 20000px;\n  position: absolute;\n  cursor: ${({isDraggable}) => (isDraggable ? 'ew-resize' : 'default')};\n  z-index: 2;\n  ${({side}) => (side === 'right' ? `right: -2px;` : `left: -2px;`)}\n  padding: 0 2px;\n  & > div {\n    width: 1px;\n    height: 100%;\n    background: ${({isDragging}) => (isDragging ? Colors.Gray400 : Colors.KeylineGray)};\n  }\n`;\n\nconst HeaderLabel = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import * as React from 'react';\n\nimport {RunFragment} from './types/RunFragments.types';\n\nconst initialContext = undefined;\nexport const RunContext = React.createContext<RunFragment | undefined>(initialContext);\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {StepEventStatus} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {LogsProviderLogs} from './LogsProvider';\nimport {RunContext} from './RunContext';\nimport {RunFragment} from './types/RunFragments.types';\nimport {RunMetadataProviderMessageFragment} from './types/RunMetadataProvider.types';\n\nexport enum IStepState {\n  PREPARING = 'preparing',\n  RETRY_REQUESTED = 'retry-requested',\n  RUNNING = 'running',\n  SUCCEEDED = 'succeeded',\n  SKIPPED = 'skipped',\n  FAILED = 'failed',\n  UNKNOWN = 'unknown', // run exited without step reaching a final state\n}\n\nconst BOX_EXIT_STATES = [\n  IStepState.RETRY_REQUESTED,\n  IStepState.SUCCEEDED,\n  IStepState.FAILED,\n  IStepState.UNKNOWN,\n];\n\ninterface IMarker {\n  key: string;\n  start?: number;\n  end?: number;\n}\n\nexport interface IStepAttempt {\n  start: number;\n  end?: number;\n  exitState?: IStepState;\n}\n\nexport interface IStepMetadata {\n  // current state\n  state?: IStepState;\n\n  // execution start and stop (user-code) inclusive of all retries\n  start?: number;\n  end?: number;\n\n  // current state + prev state transition times\n  transitions: {\n    state: IStepState;\n    time: number;\n  }[];\n\n  // transition times organized into start+stop+exit state pairs.\n  // This is the metadata used to render boxes on the realtime vi.z\n  attempts: IStepAttempt[];\n\n  // accumulated metadata\n  markers: IMarker[];\n}\n\nexport interface ILogCaptureInfo {\n  fileKey: string;\n  stepKeys: string[];\n  pid?: string;\n  externalStdoutUrl?: string;\n  externalStderrUrl?: string;\n}\n\nexport interface IRunMetadataDict {\n  firstLogAt: number;\n  mostRecentLogAt: number;\n  startingProcessAt?: number;\n  startedProcessAt?: number;\n  startedPipelineAt?: number;\n  exitedAt?: number;\n  processId?: number;\n  globalMarkers: IMarker[];\n  steps: {\n    [stepKey: string]: IStepMetadata;\n  };\n  logCaptureSteps?: {\n    [fileKey: string]: ILogCaptureInfo;\n  };\n}\n\nexport const EMPTY_RUN_METADATA: IRunMetadataDict = {\n  firstLogAt: 0,\n  mostRecentLogAt: 0,\n  globalMarkers: [],\n  steps: {},\n};\n\nexport const extractLogCaptureStepsFromLegacySteps = (stepKeys: string[]) => {\n  const logCaptureSteps = {};\n  stepKeys.forEach(\n    (stepKey) => ((logCaptureSteps as any)[stepKey] = {fileKey: stepKey, stepKeys: [stepKey]}),\n  );\n  return logCaptureSteps;\n};\n\nconst fromTimestamp = (ts: number | null) => (ts ? Math.floor(ts * 1000) : undefined);\nfunction extractMetadataFromRun(run?: RunFragment): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n  if (!run) {\n    return metadata;\n  }\n  if (run.startTime) {\n    metadata.startedPipelineAt = fromTimestamp(run.startTime);\n  }\n  if (run.endTime) {\n    metadata.exitedAt = fromTimestamp(run.endTime);\n  }\n\n  run.stepStats.forEach((stepStat) => {\n    metadata.steps[stepStat.stepKey] = {\n      // state:\n      // current state\n      state: stepStatusToStepState(stepStat.status),\n\n      // execution start and stop (user-code) inclusive of all retries\n      start: fromTimestamp(stepStat.startTime),\n      end: fromTimestamp(stepStat.endTime),\n\n      // current state + prev state transition times\n      transitions: [],\n\n      // transition times organized into start+stop+exit state pairs.\n      // This is the metadata used to render boxes on the realtime vi.z\n      attempts: stepStat.attempts.map(\n        (attempt, idx) =>\n          ({\n            start: fromTimestamp(attempt.startTime),\n            end: fromTimestamp(attempt.endTime),\n            exitState:\n              idx === stepStat.attempts.length - 1\n                ? stepStatusToStepState(stepStat.status)\n                : IStepState.RETRY_REQUESTED,\n          } as IStepAttempt),\n      ),\n\n      // accumulated metadata\n      markers: stepStat.markers.map((marker, idx) => ({\n        start: fromTimestamp(marker.startTime),\n        end: fromTimestamp(marker.endTime),\n        key: `marker_${idx}`,\n      })),\n    };\n  });\n\n  return metadata;\n}\n\nconst stepStatusToStepState = (status: StepEventStatus | null) => {\n  switch (status) {\n    case StepEventStatus.SUCCESS:\n      return IStepState.SUCCEEDED;\n    case StepEventStatus.FAILURE:\n      return IStepState.FAILED;\n    case StepEventStatus.SKIPPED:\n      return IStepState.SKIPPED;\n    default:\n      return IStepState.UNKNOWN;\n  }\n};\n\nconst refineMarkerEvent = (log: RunMetadataProviderMessageFragment) => {\n  if (\n    log.__typename === 'EngineEvent' ||\n    log.__typename === 'ResourceInitFailureEvent' ||\n    log.__typename === 'ResourceInitStartedEvent' ||\n    log.__typename === 'ResourceInitSuccessEvent' ||\n    log.__typename === 'StepWorkerStartedEvent' ||\n    log.__typename === 'StepWorkerStartingEvent'\n  ) {\n    return log;\n  }\n  return null;\n};\n\nexport function extractMetadataFromLogs(\n  logs: RunMetadataProviderMessageFragment[],\n): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n\n  // Returns the most recent marker with the given `key` without an end time\n  const upsertMarker = (set: IMarker[], key: string) => {\n    let marker = set.find((f) => f.key === key && !f.end);\n    if (!marker) {\n      marker = {key};\n      set.unshift(marker);\n    }\n    return marker;\n  };\n\n  const upsertState = (step: IStepMetadata, time: number, state: IStepState) => {\n    step.transitions.push({time, state});\n    step.state = state;\n    step.attempts = [];\n  };\n\n  logs.forEach((log) => {\n    const timestamp = Number.parseInt(log.timestamp, 10);\n\n    metadata.firstLogAt = metadata.firstLogAt\n      ? Math.min(metadata.firstLogAt, timestamp)\n      : timestamp;\n    metadata.mostRecentLogAt = Math.max(metadata.mostRecentLogAt, timestamp);\n\n    if (log.__typename === 'RunStartEvent') {\n      metadata.startedPipelineAt = timestamp;\n    }\n    if (\n      log.__typename === 'RunFailureEvent' ||\n      log.__typename === 'RunSuccessEvent' ||\n      log.__typename === 'RunCanceledEvent'\n    ) {\n      metadata.exitedAt = timestamp;\n      for (const step of Object.values(metadata.steps)) {\n        if (step.state === IStepState.RUNNING) {\n          upsertState(step, timestamp, IStepState.UNKNOWN);\n        }\n      }\n    }\n\n    if (!log.stepKey) {\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n    }\n\n    if (log.__typename === 'LogsCapturedEvent') {\n      if (!metadata.logCaptureSteps) {\n        metadata.logCaptureSteps = {};\n      }\n      metadata.logCaptureSteps[log.fileKey] = {\n        fileKey: log.fileKey,\n        stepKeys: log.stepKeys || [],\n        pid: String(log.pid),\n        externalStdoutUrl: log.externalStdoutUrl || undefined,\n        externalStderrUrl: log.externalStderrUrl || undefined,\n      };\n    }\n\n    if (log.stepKey) {\n      const stepKey = log.stepKey;\n      const step =\n        metadata.steps[stepKey] ||\n        ({\n          state: undefined,\n          attempts: [],\n          transitions: [],\n          start: undefined,\n          end: undefined,\n          markers: [],\n        } as IStepMetadata);\n\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(step.markers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(step.markers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n\n      if (log.__typename === 'StepWorkerStartingEvent') {\n        upsertState(step, timestamp, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepStartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n        step.start = timestamp;\n      } else if (log.__typename === 'ExecutionStepSuccessEvent') {\n        upsertState(step, timestamp, IStepState.SUCCEEDED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepSkippedEvent') {\n        upsertState(step, timestamp, IStepState.SKIPPED);\n      } else if (log.__typename === 'ExecutionStepFailureEvent') {\n        upsertState(step, timestamp, IStepState.FAILED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepUpForRetryEvent') {\n        // We only get one event when the step fails/aborts and is queued for retry,\n        // but we create an \"exit\" state separate from the \"preparing for retry\" state\n        // so that the box representing the attempt doesn't have a final state = preparing.\n        // That'd be more confusing.\n        upsertState(step, timestamp, IStepState.RETRY_REQUESTED);\n        upsertState(step, timestamp + 1, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepRestartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n      } else if (log.__typename === 'ObjectStoreOperationEvent') {\n        // this indicates the step was skipped and its previous intermediates were copied\n        // so we will drop the step because we didn't execute it\n        if (log.operationResult.op === 'CP_OBJECT') {\n          return;\n        }\n      }\n\n      metadata.steps[stepKey] = step;\n    }\n  });\n\n  // Post processing\n\n  for (const step of Object.values(metadata.steps)) {\n    // Sort step transitions because logs may not arrive in order\n    step.transitions = step.transitions.sort((a, b) => a.time - b.time);\n\n    // Build step \"attempts\" from transitions\n    // - Each time we see a \"RUNNING\" step transition, we create a new attempt box unless one is open already.\n    // - Each time we see a final step transition, we set it as the end state of the current attempt.\n\n    let attempt: IStepAttempt | null = null;\n    for (const t of step.transitions) {\n      if ((!attempt || attempt.end) && t.state === IStepState.RUNNING) {\n        attempt = {start: t.time};\n        step.attempts.push(attempt);\n      }\n      if (attempt && BOX_EXIT_STATES.includes(t.state)) {\n        attempt.end = t.time;\n        attempt.exitState = t.state;\n      }\n    }\n  }\n  return metadata;\n}\n\ninterface IRunMetadataProviderProps {\n  logs: LogsProviderLogs;\n  children: (metadata: IRunMetadataDict) => React.ReactElement<any>;\n}\n\nexport const RunMetadataProvider: React.FC<IRunMetadataProviderProps> = ({logs, children}) => {\n  const run = React.useContext(RunContext);\n  const runMetadata = React.useMemo(() => extractMetadataFromRun(run), [run]);\n  const metadata = React.useMemo(\n    () => (logs.loading ? runMetadata : extractMetadataFromLogs(logs.allNodes)),\n    [logs, runMetadata],\n  );\n  return <>{children(metadata)}</>;\n};\n\nexport const RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT = gql`\n  fragment RunMetadataProviderMessageFragment on DagsterRunEvent {\n    ... on MessageEvent {\n      message\n      timestamp\n      stepKey\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      pid\n      externalStdoutUrl\n      externalStderrUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RUN_STATUS_COLORS} from './RunStatusTag';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.MANAGED:\n    case RunStatus.CANCELING:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.STARTING:\n      return 'none';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n      return 'danger';\n    case RunStatus.STARTED:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst runStatusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const runStatusToBackfillStateString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.STARTING:\n    case RunStatus.STARTED:\n      return 'In progress';\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Completed';\n    case RunStatus.MANAGED:\n    case RunStatus.NOT_STARTED:\n      return 'Missing';\n    default:\n      return assertUnreachable(status);\n  }\n};\nexport const RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  STARTING: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{runStatusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import {Colors, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {TimeContext} from '../app/time/TimeContext';\nimport {DEFAULT_TIME_FORMAT, TimeFormat} from '../app/time/TimestampFormat';\nimport {timestampToString} from '../app/time/timestampToString';\n\ninterface Props {\n  timestamp: number;\n  timezone?: string | null;\n  timeFormat?: TimeFormat;\n  tooltipTimeFormat?: TimeFormat;\n}\n\nexport const TimestampDisplay = (props: Props) => {\n  const {timestamp, timezone, timeFormat, tooltipTimeFormat} = props;\n  const {\n    timezone: [userTimezone],\n    hourCycle: [hourCycle],\n  } = React.useContext(TimeContext);\n\n  const locale = navigator.language;\n  const mainString = timestampToString({\n    timestamp: {unix: timestamp},\n    locale,\n    timezone: timezone || userTimezone,\n    timeFormat,\n    hourCycle,\n  });\n\n  return (\n    <span>\n      <TabularNums style={{minWidth: 0}} title={mainString}>\n        {mainString}\n      </TabularNums>\n      {timezone && timezone !== userTimezone ? (\n        <TimestampTooltip\n          placement=\"top\"\n          content={\n            <TabularNums>\n              {timestampToString({\n                timestamp: {unix: timestamp},\n                locale,\n                timezone: userTimezone,\n                timeFormat: tooltipTimeFormat,\n              })}\n            </TabularNums>\n          }\n        >\n          <Icon name=\"schedule\" color={Colors.Gray400} size={12} />\n        </TimestampTooltip>\n      ) : null}\n    </span>\n  );\n};\n\nTimestampDisplay.defaultProps = {\n  timeFormat: DEFAULT_TIME_FORMAT,\n  tooltipTimeFormat: {showSeconds: false, showTimezone: true},\n};\n\nconst TabularNums = styled.span`\n  font-variant-numeric: tabular-nums;\n`;\n\nconst TimestampTooltip = styled(Tooltip)`\n  cursor: pointer;\n  position: relative;\n  top: 2px;\n  margin-left: 4px;\n`;\n","import {Colors, IconWrapper} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const ClearButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin: 0 -2px 0 0;\n  padding: 2px;\n\n  ${IconWrapper} {\n    background-color: ${Colors.Gray400};\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Gray700};\n  }\n\n  :active ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent, PopoverPosition} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  TextInput,\n  Tooltip,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {dynamicKeyWithoutIndex, isDynamicStep} from '../gantt/DynamicStepSupport';\nimport {GraphExplorerSolidFragment} from '../pipelines/types/GraphExplorer.types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\ninterface GraphQueryInputProps {\n  intent?: Intent;\n  items: GraphQueryItem[];\n  value: string;\n  placeholder: string;\n  autoFocus?: boolean;\n  presets?: {name: string; value: string}[];\n  width?: string | number;\n  popoverPosition?: PopoverPosition;\n  className?: string;\n  disabled?: boolean;\n\n  linkToPreview?: {\n    repoName: string;\n    repoLocation: string;\n    pipelineName: string;\n    isJob: boolean;\n  };\n\n  flattenGraphsEnabled?: boolean;\n  flattenGraphs?: boolean;\n  setFlattenGraphs?: () => void;\n  onChange: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onFocus?: () => void;\n  onBlur?: (value: string) => void;\n  autoApplyChanges?: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\ninterface SuggestionItem {\n  name: string;\n  isGraph: boolean;\n}\n\n/** Generates placeholder text for the solid query box that includes a\n * practical example from the current DAG by finding the solid with the highest\n * number of immediate input or output connections and randomly highlighting\n * either the ++solid or solid++ or solid+* syntax.\n */\nconst placeholderTextForItems = (base: string, items: GraphQueryItem[]) => {\n  const seed = items.length % 3;\n\n  let placeholder = base;\n  if (items.length === 0) {\n    return placeholder;\n  }\n\n  const ranked = items.map<{\n    incount: number;\n    outcount: number;\n    name: string;\n  }>((s) => ({\n    incount: s.inputs.reduce((sum, o) => sum + o.dependsOn.length, 0),\n    outcount: s.outputs.reduce((sum, o) => sum + o.dependedBy.length, 0),\n    name: s.name,\n  }));\n\n  if (seed === 0) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+*)`;\n  } else if (seed === 1) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+)`;\n  } else if (seed === 2) {\n    const example = ranked.sort((a, b) => b.incount - a.incount)[0];\n    placeholder = `${placeholder} (ex: ++${example!.name})`;\n  }\n  return placeholder;\n};\n\nconst intentToStrokeColor = (intent: Intent | undefined) => {\n  switch (intent) {\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    case 'primary':\n    default:\n      return Colors.Gray300;\n  }\n};\n\nconst buildSuggestions = (\n  lastElementName: string,\n  items: GraphQueryItem[] | GraphExplorerSolidFragment[],\n  suffix: string,\n) => {\n  const available: SuggestionItem[] = items.map((item) => {\n    const solidItem = item as GraphExplorerSolidFragment;\n    const isGraph =\n      solidItem.definition && solidItem.definition.__typename === 'CompositeSolidDefinition';\n\n    return {name: item.name, isGraph};\n  });\n\n  for (const item of available) {\n    if (isDynamicStep(item.name)) {\n      available.push({name: dynamicKeyWithoutIndex(item.name), isGraph: item.isGraph});\n    }\n  }\n\n  const lastElementLower = lastElementName?.toLowerCase();\n  const matching =\n    lastElementLower && !suffix\n      ? uniq(available)\n          .sort()\n          .filter((n) => n.name.toLowerCase().startsWith(lastElementLower))\n      : [];\n\n  // No need to show a match if our string exactly matches the one suggestion.\n  if (matching.length === 1 && matching[0]!.name.toLowerCase() === lastElementLower) {\n    return [];\n  }\n\n  return matching;\n};\n\nexport const GraphQueryInput = React.memo(\n  React.forwardRef((props: GraphQueryInputProps, ref) => {\n    const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [pendingValue, setPendingValue] = React.useState<string>(props.value);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const flattenGraphsEnabled = props.flattenGraphsEnabled || false;\n\n    React.useEffect(() => {\n      // props.value is our source of truth, but we hold \"un-committed\" changes in\n      // pendingValue while the field is being edited. Ensure the pending value\n      // is synced whenever props.value changes.\n      setPendingValue(props.value);\n    }, [props.value]);\n\n    const lastClause = /(\\*?\\+*)([\\w\\d\\[\\]>_\\/-]+)(\\+*\\*?)$/.exec(pendingValue);\n\n    const [, prefix, lastElementName, suffix] = lastClause || [];\n    const suggestions = React.useMemo(\n      () => buildSuggestions(lastElementName!, props.items, suffix!),\n      [lastElementName, props.items, suffix],\n    );\n\n    const onConfirmSuggestion = (suggestion: string) => {\n      const preceding = lastClause ? pendingValue.substr(0, lastClause.index) : '';\n      setPendingValue(preceding + prefix + `\"${suggestion}\"` + suffix);\n    };\n\n    React.useEffect(() => {\n      if (!active) {\n        return;\n      }\n      // Relocate the currently active item in the latest suggestions list\n      const pos = suggestions.map((a) => a.name).findIndex((a) => a === active.text);\n\n      // The new index is the index of the active item, or whatever item\n      // is now at it's location if it's gone, bounded to the array.\n      let nextIdx = pos !== -1 ? pos : active.idx;\n      nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n      if (!suggestions[nextIdx]) {\n        return;\n      }\n      const nextText = suggestions[nextIdx]!.name;\n\n      if (nextIdx !== active.idx || nextText !== active.text) {\n        setActive({text: nextText, idx: nextIdx});\n      }\n    }, [active, suggestions]);\n\n    React.useImperativeHandle(ref, () => ({\n      focus() {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      },\n    }));\n\n    const onKeyDown = (e: React.KeyboardEvent<any>) => {\n      if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n        if (active && active.text) {\n          onConfirmSuggestion(active.text);\n          e.preventDefault();\n          e.stopPropagation();\n        } else {\n          e.currentTarget.blur();\n        }\n        setActive(null);\n      }\n\n      // The up/down arrow keys shift selection in the dropdown.\n      // Note: The first down arrow press activates the first item.\n      const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n      if (shift && suggestions.length > 0) {\n        e.preventDefault();\n        let idx = (active ? active.idx : -1) + shift;\n        idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n        setActive({text: suggestions[idx]!.name, idx});\n      }\n\n      props.onKeyDown?.(e);\n    };\n\n    const OpSelectionWrapperDivRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n      const clickListener = (event: MouseEvent) => {\n        const OpSelectionWrapperDivElement = OpSelectionWrapperDivRef.current;\n        const inputElement = inputRef.current;\n        const {target} = event;\n\n        if (!flattenGraphsEnabled) {\n          return;\n        }\n        // Make TypeScript happy\n        if (\n          OpSelectionWrapperDivElement == null ||\n          inputElement == null ||\n          !(target instanceof Node)\n        ) {\n          return;\n        }\n\n        // `true` if user clicked on either the `OpSelectionWrapperDivElement` itself, or its descendant\n        const shouldWrapperGetFocus = OpSelectionWrapperDivElement.contains(target);\n        setFocused(shouldWrapperGetFocus);\n\n        const shouldTextInputGetFocus = inputElement.contains(target);\n        if (shouldTextInputGetFocus) {\n          inputElement.focus();\n        }\n      };\n\n      document.addEventListener('click', clickListener);\n\n      return () => {\n        document.removeEventListener('click', clickListener);\n      };\n    }, [flattenGraphsEnabled]);\n\n    const uncomitted = (pendingValue || '*') !== (props.value || '*');\n    const flattenGraphsFlag = props.flattenGraphs ? '!' : '';\n\n    const opCountInfo = props.linkToPreview && (\n      <OpCountWrap $hasWrap={flattenGraphsEnabled}>\n        {`${filterByQuery(props.items, pendingValue).all.length} matching ops`}\n        <Link\n          target=\"_blank\"\n          style={{display: 'flex', alignItems: 'center', gap: 4}}\n          onMouseDown={(e) => e.currentTarget.click()}\n          to={workspacePipelinePath({\n            ...props.linkToPreview,\n            pipelineName: `${props.linkToPreview.pipelineName}~${flattenGraphsFlag}${pendingValue}`,\n          })}\n        >\n          Graph Preview <Icon color={Colors.Link} name=\"open_in_new\" />\n        </Link>\n      </OpCountWrap>\n    );\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        <Popover\n          enforceFocus={!flattenGraphsEnabled} // Defer focus to be manually managed\n          isOpen={focused}\n          position={props.popoverPosition || 'top-left'}\n          content={\n            suggestions.length ? (\n              <Menu style={{width: props.width || '24vw'}}>\n                {suggestions.slice(0, 15).map((suggestion) => (\n                  <MenuItem\n                    icon={suggestion.isGraph ? 'job' : 'op'}\n                    key={suggestion.name}\n                    text={suggestion.name}\n                    active={active ? active.text === suggestion.name : false}\n                    onMouseDown={(e: React.MouseEvent<any>) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onConfirmSuggestion(suggestion.name);\n                    }}\n                  />\n                ))}\n              </Menu>\n            ) : (\n              <div />\n            )\n          }\n        >\n          <div style={{position: 'relative'}} ref={OpSelectionWrapperDivRef}>\n            <TextInput\n              disabled={props.disabled}\n              value={pendingValue}\n              icon=\"op_selector\"\n              strokeColor={intentToStrokeColor(props.intent)}\n              autoFocus={props.autoFocus}\n              placeholder={placeholderTextForItems(props.placeholder, props.items)}\n              onChange={(e: React.ChangeEvent<any>) => {\n                setPendingValue(e.target.value);\n                props.autoApplyChanges && props.onChange(e.target.value);\n              }}\n              onFocus={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(true);\n                }\n                props.onFocus?.();\n              }}\n              onBlur={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(false);\n                }\n                props.onChange(pendingValue);\n                props.onBlur?.(pendingValue);\n              }}\n              onKeyDown={onKeyDown}\n              style={{\n                width: props.width || '24vw',\n                paddingRight: focused && uncomitted ? 55 : '',\n              }}\n              className={props.className}\n              ref={inputRef}\n            />\n            {focused && uncomitted && <EnterHint>Enter</EnterHint>}\n            {focused &&\n              props.linkToPreview &&\n              (flattenGraphsEnabled ? (\n                <OpInfoWrap>\n                  <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n                    <Checkbox\n                      label=\"Flatten subgraphs\"\n                      checked={props.flattenGraphs ?? false}\n                      onChange={() => {\n                        props.setFlattenGraphs?.();\n                      }}\n                      format=\"switch\"\n                    />\n                    <Tooltip\n                      content=\"Flatten subgraphs to select ops within nested graphs\"\n                      placement=\"right\"\n                    >\n                      <Icon name=\"info\" color={Colors.Gray500} />\n                    </Tooltip>\n                  </Box>\n                  {opCountInfo}\n                </OpInfoWrap>\n              ) : (\n                opCountInfo\n              ))}\n          </div>\n        </Popover>\n        {props.presets &&\n          (props.presets.find((p) => p.value === pendingValue) ? (\n            <Button\n              icon={<Icon name=\"layers\" />}\n              rightIcon={<Icon name=\"cancel\" />}\n              onClick={() => props.onChange('*')}\n              intent=\"none\"\n            />\n          ) : (\n            <Popover\n              position=\"top\"\n              content={\n                <Menu>\n                  {props.presets.map((preset) => (\n                    <MenuItem\n                      key={preset.name}\n                      text={preset.name}\n                      onMouseDown={(e: React.MouseEvent<any>) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        props.onChange(preset.value);\n                      }}\n                    />\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                icon={<Icon name=\"layers\" />}\n                rightIcon={<Icon name=\"expand_less\" />}\n                intent=\"none\"\n              />\n            </Popover>\n          ))}\n      </Box>\n    );\n  }),\n\n  (prevProps, nextProps) =>\n    prevProps.items === nextProps.items &&\n    prevProps.width === nextProps.width &&\n    prevProps.value === nextProps.value &&\n    isEqual(prevProps.presets, nextProps.presets),\n);\n\nconst OpInfoWrap = styled.div`\n  width: 350px;\n  padding: 10px 16px 10px 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  position: absolute;\n  top: 100%;\n  margin-top: 2px;\n  font-size: 0.85rem;\n  background: ${Colors.White};\n  color: ${Colors.Gray600};\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  z-index: 2;\n  left: 0;\n`;\n\nconst OpCountWrap = styled(OpInfoWrap)<{$hasWrap: boolean}>`\n  margin-top: ${(p) => (p.$hasWrap ? 0 : 2)}px;\n`;\n\nconst EnterHint = styled.div`\n  position: absolute;\n  right: 6px;\n  top: 5px;\n  border-radius: 5px;\n  border: 1px solid ${Colors.Gray500};\n  background: ${Colors.White};\n  font-weight: 500;\n  font-size: 12px;\n  color: ${Colors.Gray500};\n  padding: 2px 6px;\n`;\n","import * as React from 'react';\n\nimport {BaseButton} from './BaseButton';\nimport {JoinedButtons} from './Button';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Tooltip} from './Tooltip';\n\nexport type ButtonGroupItem<T> = {\n  id: T;\n  label?: React.ReactNode;\n  icon?: IconName;\n  tooltip?: string;\n};\n\ninterface Props<T> {\n  activeItems?: Set<T>;\n  buttons: ButtonGroupItem<T>[];\n  onClick: (id: T, e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const ButtonGroup = <T extends string | number>(props: Props<T>) => {\n  const {activeItems, buttons, onClick} = props;\n  return (\n    <JoinedButtons>\n      {buttons.map((button) => {\n        const {id, icon, label, tooltip} = button;\n        const isActive = activeItems?.has(id);\n        const buttonElement = (\n          <BaseButton\n            key={id}\n            fillColor={isActive ? Colors.Gray200 : Colors.White}\n            textColor={isActive ? Colors.Gray900 : Colors.Gray700}\n            icon={\n              icon ? <Icon name={icon} color={isActive ? Colors.Gray900 : Colors.Gray700} /> : null\n            }\n            label={label}\n            onClick={(e) => onClick(id, e)}\n          />\n        );\n\n        if (tooltip) {\n          return (\n            <Tooltip content={tooltip} position=\"top\" key={id}>\n              {buttonElement}\n            </Tooltip>\n          );\n        }\n\n        return buttonElement;\n      })}\n    </JoinedButtons>\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Slider as BlueprintSlider,\n  MultiSlider as BlueprintMultiSlider,\n  SliderProps,\n  MultiSliderProps,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\n\nexport const Slider: React.FC<SliderProps & {fillColor?: string}> = ({\n  fillColor = Colors.Gray600,\n  ...rest\n}) => {\n  return <StyledSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nexport const MultiSlider: React.FC<\n  MultiSliderProps & {fillColor?: string; children: React.ReactNode}\n> & {\n  Handle: typeof BlueprintMultiSlider.Handle;\n} = ({fillColor = Colors.Gray600, ...rest}) => {\n  return <StyledMultiSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nMultiSlider.Handle = BlueprintMultiSlider.Handle;\n\nexport const SliderStyles = css<{$fillColor: string}>`\n  .bp4-slider-track {\n    height: 8px;\n    .bp4-slider-progress {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 0.2;\n      height: 8px;\n    }\n    .bp4-slider-progress.bp4-intent-primary {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 1;\n      height: 8px;\n    }\n  }\n  &.bp4-vertical {\n    width: 20px;\n    min-width: 20px;\n  }\n  &.bp4-vertical .bp4-slider-track,\n  &.bp4-vertical .bp4-slider-track .bp4-slider-progress {\n    height: initial;\n    width: 8px;\n  }\n  .bp4-slider-handle {\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    border: 2px solid ${Colors.Gray300};\n    background: ${Colors.White};\n    box-shadow: none;\n    &:hover {\n      border: 2px solid ${Colors.Gray400};\n      box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n    }\n\n    .bp4-slider-label {\n      background: ${Colors.Gray900};\n      box-shadow: 0 1px 4px rgba(0,0,0,0.15)\n      padding: 4px 8px;\n    }\n  }\n`;\n\nconst StyledMultiSlider = styled(BlueprintMultiSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\nconst StyledSlider = styled(BlueprintSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {ButtonGroup} from './ButtonGroup';\nimport {Colors} from './Colors';\nimport {Icon} from './Icon';\n\nconst DIVIDER_THICKNESS = 2;\n\ninterface SplitPanelContainerProps {\n  axis?: 'horizontal' | 'vertical';\n  identifier: string;\n  first: React.ReactNode;\n  firstInitialPercent: number;\n  firstMinSize?: number;\n  second: React.ReactNode | null; // Note: pass null to hide / animate away the second panel\n}\n\ninterface SplitPanelContainerState {\n  size: number;\n  key: string;\n  resizing: boolean;\n}\n\nexport class SplitPanelContainer extends React.Component<\n  SplitPanelContainerProps,\n  SplitPanelContainerState\n> {\n  constructor(props: SplitPanelContainerProps) {\n    super(props);\n\n    const key = `dagit.panel-width.${this.props.identifier}`;\n    const value = window.localStorage.getItem(key);\n    let size = Number(value);\n    if (value === null || isNaN(size)) {\n      size = this.props.firstInitialPercent;\n    }\n\n    this.state = {size, key, resizing: false};\n  }\n\n  onChangeSize = (size: number) => {\n    this.setState({size});\n    window.localStorage.setItem(this.state.key, `${size}`);\n  };\n\n  render() {\n    const {firstMinSize, first, second} = this.props;\n    const {size: _size, resizing} = this.state;\n    const axis = this.props.axis || 'horizontal';\n\n    const firstPaneStyles: React.CSSProperties = {flexShrink: 0};\n    const firstSize = second ? _size : 100;\n\n    // Note: The divider appears after the first panel, so making the first panel 100% wide\n    // hides the divider offscreen. To prevent this, we subtract the divider depth.\n    if (axis === 'horizontal') {\n      firstPaneStyles.minWidth = firstMinSize;\n      firstPaneStyles.width = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    } else {\n      firstPaneStyles.minHeight = firstMinSize;\n      firstPaneStyles.height = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    }\n\n    return (\n      <Container axis={axis} id=\"split-panel-container\" resizing={resizing}>\n        <div className=\"split-panel\" style={firstPaneStyles}>\n          {first}\n        </div>\n        <PanelDivider\n          axis={axis}\n          resizing={resizing}\n          onSetResizing={(resizing) => this.setState({resizing})}\n          onMove={this.onChangeSize}\n        />\n        <div className=\"split-panel\" style={{flex: 1}}>\n          {second}\n        </div>\n      </Container>\n    );\n  }\n}\n\ninterface IDividerProps {\n  axis: 'horizontal' | 'vertical';\n  resizing: boolean;\n  onSetResizing: (resizing: boolean) => void;\n  onMove: (vw: number) => void;\n}\n\nclass PanelDivider extends React.Component<IDividerProps> {\n  ref = React.createRef<any>();\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    this.props.onSetResizing(true);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const parent = this.ref.current?.closest('#split-panel-container');\n      if (!parent) {\n        return;\n      }\n      const parentRect = parent.getBoundingClientRect();\n\n      const firstPanelPercent =\n        this.props.axis === 'horizontal'\n          ? ((event.clientX - parentRect.left) * 100) / parentRect.width\n          : ((event.clientY - parentRect.top) * 100) / parentRect.height;\n\n      this.props.onMove(Math.min(100, Math.max(0, firstPanelPercent)));\n    };\n\n    const onMouseUp = () => {\n      this.props.onSetResizing(false);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  render() {\n    const Wrapper = DividerWrapper[this.props.axis];\n    const HitArea = DividerHitArea[this.props.axis];\n    return (\n      <Wrapper resizing={this.props.resizing} ref={this.ref}>\n        <HitArea onMouseDown={this.onMouseDown} />\n      </Wrapper>\n    );\n  }\n}\n\ninterface PanelToggleProps {\n  axis: 'horizontal' | 'vertical';\n  container: React.RefObject<SplitPanelContainer>;\n}\n\nexport const FirstOrSecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const onClick = (id: string) => {\n    let size = 50;\n    if (id === 'first-pane') {\n      size = 100;\n    } else if (id === 'second-pane') {\n      size = 0;\n    }\n    container.current?.onChangeSize(size);\n  };\n\n  return (\n    <ButtonGroup\n      buttons={[\n        {\n          id: 'first-pane',\n          icon: axis === 'vertical' ? 'panel_show_top' : 'panel_show_left',\n          tooltip: axis === 'vertical' ? 'Show only top pane' : 'Show only left pane',\n        },\n        {\n          id: 'split',\n          icon: 'panel_show_both',\n          tooltip: 'Show both panes',\n        },\n        {\n          id: 'second-pane',\n          icon: axis === 'vertical' ? 'panel_show_bottom' : 'panel_show_right',\n          tooltip: axis === 'vertical' ? 'Show only bottom pane' : 'Show only right pane',\n        },\n      ]}\n      onClick={onClick}\n    />\n  );\n};\n\n// Todo: This component attempts to sync itself with the container, but it can't\n// observe the container's width without a React context or adding a listener, etc.\n// If we keep making components that manipulate panel state we may want to move it\n// all to a context consumed by both.\n//\nexport const SecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const [prevSize, setPrevSize] = React.useState<number | 'unknown'>('unknown');\n  const initialIsOpen = (container.current?.state.size || 0) < 100;\n\n  const [open, setOpen] = React.useState<boolean>(initialIsOpen);\n  React.useEffect(() => setOpen(initialIsOpen), [initialIsOpen]);\n\n  return (\n    <Button\n      active={open}\n      title=\"Toggle second pane\"\n      icon={\n        <Icon\n          name={\n            axis === 'horizontal'\n              ? open\n                ? 'panel_hide_right'\n                : 'panel_show_right'\n              : 'panel_show_bottom'\n          }\n        />\n      }\n      onClick={() => {\n        if (!container.current) {\n          return;\n        }\n        const current = container.current.state.size;\n        if (current < 90) {\n          setPrevSize(current);\n          setOpen(false);\n          container.current.onChangeSize(100);\n        } else {\n          setOpen(true);\n          container.current.onChangeSize(\n            prevSize === 'unknown' ? container.current.props.firstInitialPercent : prevSize,\n          );\n        }\n      }}\n    />\n  );\n};\n\n// Note: -1px margins here let the divider cover the last 1px of the previous box, hiding\n// any scrollbar border it might have.\n\nconst DividerWrapper = {\n  horizontal: styled.div<{resizing: boolean}>`\n    width: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-left: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n  vertical: styled.div<{resizing: boolean}>`\n    height: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-top: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n};\n\nconst DividerHitArea = {\n  horizontal: styled.div`\n    width: 17px;\n    height: 100%;\n    z-index: 1;\n    cursor: ew-resize;\n    position: relative;\n    left: -8px;\n  `,\n  vertical: styled.div`\n    height: 17px;\n    width: 100%;\n    z-index: 1;\n    cursor: ns-resize;\n    position: relative;\n    top: -8px;\n  `,\n};\n\nconst Container = styled.div<{\n  axis?: 'horizontal' | 'vertical';\n  resizing: boolean;\n}>`\n  display: flex;\n  overflow: hidden;\n  flex-direction: ${({axis}) => (axis === 'vertical' ? 'column' : 'row')};\n  flex: 1 1;\n  width: 100%;\n  min-width: 0;\n  min-height: 0;\n\n  .split-panel {\n    position: relative;\n    transition: ${({axis, resizing}) =>\n      resizing ? 'none' : axis === 'horizontal' ? 'width' : 'height'}\n      200ms ease-out;\n    flex-direction: column;\n    display: flex;\n    min-${({axis}) => (axis === 'vertical' ? 'height' : 'width')}: 0;\n    z-index: 0;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? '–' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n","import animate from 'amator';\nimport * as React from 'react';\n\nexport interface Viewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\ntype ContainerRef = {\n  element: HTMLDivElement;\n  __sized: boolean;\n};\n\n/**\n * useViewport is a React hook that exposes a viewport (top/left/width/height)\n * representing the currently visible region of a scrolling contaienr <div>.\n * It uses a ResizeObserver and an onScroll handler to monitor the viewport of the\n * container. To use, spread the returned `containerProps` onto the container div.\n */\nexport const useViewport = (\n  options: {\n    initialOffset?: (el: HTMLElement) => {left: number; top: number};\n  } = {},\n) => {\n  const ref = React.useRef<ContainerRef>();\n  const [offset, setOffset] = React.useState<{left: number; top: number}>({\n    left: 0,\n    top: 0,\n  });\n  const [size, setSize] = React.useState<{width: number; height: number}>({\n    width: 0,\n    height: 0,\n  });\n\n  const {initialOffset} = options;\n\n  // Monitor the container for size changes (if possible, otherwise fall back)\n  // to capturing the initial size only. (Only old FF).\n  const measureRef = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const onApplySize = (next: {width: number; height: number}) => {\n      setSize({width: next.width, height: next.height});\n      const container = ref.current;\n      if (container) {\n        const {element, __sized} = container;\n        if (!__sized && next.width !== 0 && initialOffset) {\n          const targetOffset = initialOffset(element);\n          element.scrollTop = targetOffset.top;\n          element.scrollLeft = targetOffset.left;\n          setOffset(targetOffset);\n          container.__sized = true;\n        }\n      }\n    };\n\n    const container = ref.current;\n    const {element} = container;\n\n    let resizeObserver: any;\n    if (element instanceof HTMLElement) {\n      if ('ResizeObserver' in window) {\n        resizeObserver = new window['ResizeObserver']((entries: ResizeObserverEntry[]) => {\n          window.requestAnimationFrame(() => {\n            const target = entries[0]?.target;\n            if (target === element) {\n              onApplySize({width: element.clientWidth, height: element.clientHeight});\n            }\n          });\n        });\n        resizeObserver.observe(element);\n      } else {\n        if (process.env.NODE_ENV !== 'test') {\n          console.warn(`No ResizeObserver support, or useViewport is attached to a non-DOM node?`);\n        }\n        onApplySize({width: element.clientWidth, height: element.clientHeight});\n      }\n    }\n    return () => {\n      resizeObserver?.disconnect();\n    };\n  }, [initialOffset]);\n\n  React.useEffect(measureRef, [measureRef]);\n\n  // Monitor the container for scroll offset changes\n  const animation = React.useRef<any>(null);\n\n  const onScroll = (e: React.UIEvent) => {\n    if (\n      Math.floor(offset.left) === e.currentTarget.scrollLeft &&\n      Math.floor(offset.top) === e.currentTarget.scrollTop\n    ) {\n      return;\n    }\n    if (animation.current) {\n      animation.current.cancel();\n    }\n    setOffset({\n      left: e.currentTarget.scrollLeft,\n      top: e.currentTarget.scrollTop,\n    });\n  };\n\n  const onMoveToViewport = (targetOffset: {left: number; top: number}, animated: boolean) => {\n    const element = ref.current?.element;\n\n    if (!element) {\n      return;\n    }\n\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    if (animation.current) {\n      animation.current.cancel();\n      animation.current = null;\n    }\n\n    targetOffset.left = Math.min(element.scrollWidth - width, Math.max(0, targetOffset.left));\n    targetOffset.top = Math.min(element.scrollHeight - height, Math.max(0, targetOffset.top));\n\n    const onDone = () => {\n      element.scrollTop = targetOffset.top;\n      element.scrollLeft = targetOffset.left;\n      setOffset(targetOffset);\n      animation.current = null;\n    };\n    if (animated) {\n      animation.current = animate(offset, targetOffset, {\n        step: (v: any) => {\n          element.scrollTop = v.top;\n          element.scrollLeft = v.left;\n          setOffset({left: v.left, top: v.top});\n        },\n        done: onDone,\n      });\n    } else {\n      onDone();\n    }\n  };\n\n  // There are scenarios where the exported `container ref` isn't attached to a component immediately\n  // (eg the parent is showing a loading state). This means it may be undefined during our initial render\n  // and we need to measure it when it's actually assigned a value.\n  const setRef = React.useCallback(\n    (el: HTMLDivElement) => {\n      if (el === ref.current?.element) {\n        return;\n      }\n\n      ref.current = {\n        element: el,\n        __sized: false,\n      };\n      measureRef();\n    },\n    [measureRef],\n  );\n\n  return {\n    viewport: {...offset, ...size} as Viewport,\n    containerProps: {\n      ref: setRef,\n      onScroll,\n    },\n    onMoveToViewport,\n  };\n};\n"],"names":["MAX_RENDERED_FOR_EMPTY_QUERY","GraphTraverser","items","_this","_classCallCheck","itemNameMap","forEach","item","name","_createClass","key","value","this","step","depth","_this2","results","arguments","length","undefined","next","traverse","Object","values","_this3","callback","inputs","input","dependsOn","d","itemNamed","solid","_this4","outputs","output","dependedBy","expansionDepthForClause","clause","includes","Number","MAX_SAFE_INTEGER","filterByQuery","query","all","applyingEmptyDefault","focus","_step","traverser","Set","clauses","split","_iterator","_createForOfIteratorHelper","_loop","parts","exec","trim","_step2","_parts","_slicedToArray","_parts$","parentsClause","_parts$2","itemName","_parts$3","descendentsClause","itemsMatching","filter","s","isPlannedDynamicStep","replace","startsWith","dynamicKeyWithoutIndex","test","_iterator2","n","done","upDepth","downDepth","add","fetchUpstream","other","fetchDownstream","err","e","f","Array","from","GanttChartMode","MIN_SCALE","MAX_SCALE","LEFT_INSET","TOP_INSET","BOTTOM_INSET","FLAT_INSET_FROM_PARENT","BOX_HEIGHT","BOX_MARGIN_Y","BOX_SPACING_X","BOX_WIDTH","BOX_DOT_WIDTH_CUTOFF","BOX_SHOW_LABEL_WIDTH_CUTOFF","BOX_DOT_SIZE","BOX_DOT_MARGIN_Y","LINE_SIZE","CSS_DURATION","DEFAULT_OPTIONS","mode","WATERFALL","hideWaiting","hideTimedMode","zoom","hideUnselectedSteps","isDynamicStep","stepKey","endsWith","invocationsOfPlannedDynamicStep","plannedStepKey","runtimeStepKeys","k","replacePlannedIndex","stepKeyWithIndex","match","buildLayout","params","nodes","boxes","g","some","i","find","o","map","node","state","children","x","y","root","width","roots","_toConsumableArray","box","addChildren","deepen","child","parents","boxesByY","idx","target","push","concat","changed","boxesReversed","reverse","highestYParent","sort","a","b","onTargetY","r","parentX","willCross","willCauseCrossing","c","_ret","bottomY","_i","_Object$keys","keys","row","maxY","reduce","m","Math","max","_loop2","_y2","markers","ensureSubtreeAfterParentInArray","parent","parentIdx","indexOf","boxIdx","splice","_step3","_iterator3","_step4","seen","added","_iterator4","_step5","out","_iterator5","_loop3","dep","depNode","depBox","depBoxIdx","findIndex","_i2","_added","TextColorForStates","_TextColorForStates","_defineProperty","IStepState","Colors","BackgroundColorForStates","_BackgroundColorForSt","boxStyleFor","context","metadata","startedPipelineAt","options","color","background","border","positionAndSplitBoxes","positionFor","_loop4","ii","meta","steps","assign","attempts","runBoxes","run","runIdx","_objectSpread","exitState","jj","apply","slice","adjustLayoutWithRunMetadata","layout","scale","nowMs","_cloneLayout","_ref","_step6","WeakMap","nextMarkers","nextBoxes","_iterator6","set","get","cloneLayout","xForMs","time","widthForMs","_ref2","start","end","_box","earliestAllowedX","unstarted","visit","_step7","minXForUnstartedChildren","_iterator7","shift","positionUntimedBoxes","globalMarkers","entries","_ref3","_step8","_ref4","_iterator8","stepBox","_metadata$steps$b$nod","_run","Error","interestingQueriesFor","errorsQuery","join","slowStepsQuery","_metadata$steps$k","_metadata$steps$k2","rightmostCompletedBox","_metadata$steps$b$nod2","subsetTitleForRun","stepsTag","tags","t","DagsterTag","RunGroupPanel","_group$runs","runId","runStatusLastChangedAt","queryResult","useQuery","RUN_GROUP_PANEL_QUERY","variables","notifyOnNetworkStatusChange","data","refetch","useQueryRefreshAtInterval","FIFTEEN_SECONDS","React","group","runGroupOrError","__typename","_jsxs","Group","direction","spacing","padding","_jsx","Icon","style","fontSize","ButtonLink","underline","onClick","showCustomAlert","title","body","message","runs","unsorted","startTime","SidebarSection","pipelineName","_Fragment","RunGroupRun","to","id","selected","ThinLine","height","Box","top","RunStatusIndicator","status","flex","marginLeft","minWidth","display","justifyContent","RunTitle","RootTag","RunTime","RunStateSummary","gql","_templateObject","_taggedTemplateLiteral","PYTHON_ERROR_FRAGMENT","RUN_TIME_FRAGMENT","styled","Link","withConfig","displayName","componentId","FontFamily","borderRadius","lineHeight","fontWeight","userSelect","GanttStatusPanel","graph","selection","onClickStep","onDoubleClickStep","onHighlightStep","_React$useMemo","preparing","executing","errored","succeeded","notExecuted","_keys","_metadata$steps$_name","renderStepItem","stepName","StepItem","onDoubleClick","onHover","overflowY","exitedAt","startedProcessAt","EmptyNotice","collapsedByDefault","StepItemContainer","evt","onMouseEnter","onMouseLeave","Spinner","purpose","Tooltip","modifiers","preventOverflow","enabled","flip","position","content","StepStatusDot","StepLabel","Elapsed","formatElapsedTime","props","_useStateWithStorage","useStateWithStorage","storedValue","_useStateWithStorage2","open","setOpen","onToggle","CollapsingHeaderBar","SidebarTitleTextWrap","size","transform","Collapse","isOpen","SidebarTitle","SectionHeader","SectionSmallHeader","SidebarSubhead","SectionItemContainer","LogLevel","DefaultLogLevels","Row","highlighted","level","_LogLevel$DEBUG$LogLe","bgcolorForLevel","_LogLevel$DEBUG$LogLe2","StructuredContent","OpColumn","widths","ColumnWidthsContext","String","OpColumnContainer","p","OpColumnTooltipStyle","substr","JSON","stringify","fontFamily","left","timestampFormat","memoize","timezone","Intl","DateTimeFormat","navigator","language","hour","minute","second","hourCycle","timeZone","browserTimezone","fractionalSecondFormat","locale","NumberFormat","minimumFractionDigits","maximumFractionDigits","TimestampColumn","runStartTime","stepStartTime","location","useLocation","_React$useContext","TimeContext","canShowTooltip","href","pathname","qs","focusedTime","runElapsedTime","formatElapsedTimeWithMsec","stepElapsedTime","TimestampColumnContainer","timestamp","canShow","MetadataTable","dark","rows","placement","timeNumber","main","format","Date","fractionalSec","timeString","EventTypeColumn","EventTypeColumnContainer","eventType","ColumnWidthsStorageKey","ColumnWidths","getJSONForKey","onChange","_","ColumnWidthsProvider","_React$Component","_inherits","_super","_createSuper","_len","args","_key","call","onWidthsChangedFromContext","columnWidths","window","localStorage","setItem","onWidthsChanged","setState","Provider","Header","_React$Component2","_super2","_len2","_key2","isDragging","screenX","onMouseDown","document","addEventListener","onMouseMove","onMouseUp","_this2$props","onResize","handleSide","_this2$state","dir","removeEventListener","isDraggable","HeaderContainer","HeaderDragHandle","side","HeaderLabel","Headers","HeadersContainer","RunContext","BOX_EXIT_STATES","RETRY_REQUESTED","SUCCEEDED","FAILED","UNKNOWN","EMPTY_RUN_METADATA","firstLogAt","mostRecentLogAt","extractLogCaptureStepsFromLegacySteps","stepKeys","logCaptureSteps","fileKey","fromTimestamp","ts","floor","stepStatusToStepState","StepEventStatus","SKIPPED","refineMarkerEvent","log","RunMetadataProvider","logs","runMetadata","endTime","stepStats","stepStat","transitions","attempt","marker","extractMetadataFromRun","loading","upsertMarker","unshift","upsertState","parseInt","min","_Object$values","RUNNING","markerEvent","markerStart","markerEnd","pid","externalStdoutUrl","externalStderrUrl","PREPARING","operationResult","op","_Object$values2","extractMetadataFromLogs","allNodes","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","METADATA_ENTRY_FRAGMENT","RunStats","stats","RUN_STATS_QUERY","RunStatsDetailsContainer","result","pipelineRunOrError","PythonErrorInfo","error","runPath","stepsSucceeded","stepsFailed","materializations","expectations","RunStatusWithStats","rest","_objectWithoutProperties","_excluded","Popover","interactionKind","hoverOpenDelay","RunStatusDot","pulse","inProgressStatuses","queuedStatuses","pulseAnimation","keyframes","_ref5","_ref6","css","_templateObject2","_ref7","RUN_STATUS_COLORS","statusToIntent","RunStatus","assertUnreachable","runStatusToString","runStatusToBackfillStateString","QUEUED","NOT_STARTED","MANAGED","STARTED","STARTING","SUCCESS","FAILURE","CANCELING","CANCELED","SCHEDULED","RunStatusTag","Tag","intent","alignItems","gap","RunStatusTagWithStats","usePortal","TimestampDisplay","timeFormat","tooltipTimeFormat","userTimezone","mainString","timestampToString","unix","TabularNums","TimestampTooltip","defaultProps","DEFAULT_TIME_FORMAT","showSeconds","showTimezone","ClearButton","IconWrapper","placeholderTextForItems","base","seed","placeholder","ranked","incount","sum","outcount","example","intentToStrokeColor","GraphQueryInput","ref","_props$flattenGraphs","_React$useState","_React$useState2","active","setActive","_React$useState3","_React$useState4","focused","setFocused","_React$useState5","_React$useState6","pendingValue","setPendingValue","inputRef","flattenGraphsEnabled","lastClause","prefix","lastElementName","suffix","suggestions","available","solidItem","isGraph","definition","lastElementLower","toLowerCase","matching","uniq","buildSuggestions","onConfirmSuggestion","suggestion","preceding","index","pos","text","nextIdx","nextText","current","OpSelectionWrapperDivRef","clickListener","event","OpSelectionWrapperDivElement","inputElement","Node","shouldWrapperGetFocus","contains","uncomitted","flattenGraphsFlag","flattenGraphs","opCountInfo","linkToPreview","OpCountWrap","$hasWrap","currentTarget","click","workspacePipelinePath","enforceFocus","popoverPosition","Menu","MenuItem","icon","preventDefault","stopPropagation","TextInput","disabled","strokeColor","autoFocus","autoApplyChanges","onFocus","_props$onFocus","onBlur","_props$onBlur","onKeyDown","_props$onKeyDown","blur","ArrowDown","ArrowUp","paddingRight","className","EnterHint","OpInfoWrap","Checkbox","label","checked","_props$setFlattenGrap","setFlattenGraphs","presets","Button","rightIcon","preset","prevProps","nextProps","isEqual","ButtonGroup","activeItems","buttons","JoinedButtons","button","tooltip","isActive","has","buttonElement","BaseButton","fillColor","textColor","PageHeader","right","tabs","PageHeaderContainer","bottom","wrap","Slider","_ref$fillColor","StyledSlider","$fillColor","BlueprintMultiSlider","SliderStyles","BlueprintSlider","SplitPanelContainer","onChangeSize","identifier","getItem","isNaN","firstInitialPercent","resizing","_this$props","firstMinSize","first","_this$state","_size","axis","firstPaneStyles","flexShrink","firstSize","minHeight","Container","PanelDivider","onSetResizing","onMove","_this3$ref$current","closest","parentRect","getBoundingClientRect","firstPanelPercent","clientX","clientY","Wrapper","DividerWrapper","HitArea","DividerHitArea","FirstOrSecondPanelToggle","container","_container$current","SecondPanelToggle","_container$current2","prevSize","setPrevSize","initialIsOpen","horizontal","vertical","getTabA11yProps","role","tabIndex","getTabContent","count","Count","tabCSS","$size","Tab","containerProps","titleText","type","Tabs","_ref8","selectedTabId","_ref8$size","_ref9","_ref10","useViewport","offset","setOffset","setSize","initialOffset","measureRef","resizeObserver","onApplySize","element","__sized","targetOffset","scrollTop","scrollLeft","HTMLElement","requestAnimationFrame","_entries$","clientWidth","clientHeight","observe","console","warn","_resizeObserver","disconnect","animation","setRef","el","_ref$current2","viewport","onScroll","cancel","onMoveToViewport","animated","_ref$current","scrollWidth","scrollHeight","onDone","animate","v"],"sourceRoot":""}