{"version":3,"file":"static/js/399.d95f0c91.chunk.js","mappings":"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","sources":["../../core/src/instance/useSupportsCapturedLogs.tsx","../../core/src/runs/RawLogContent.tsx","../../core/src/runs/CapturedLogPanel.tsx","../../core/src/runs/useComputeLogs.tsx","../../core/src/runs/ComputeLogPanel.tsx","../../core/src/runs/LogsProvider.tsx","../../core/src/runs/ExecutionStateDot.tsx","../../core/src/runs/LogFilterSelect.tsx","../../core/src/runs/LogsFilterInput.tsx","../../ui/src/components/useSuggestionsForString.tsx","../../core/src/runs/useQueryPersistedLogFilter.ts","../../core/src/runs/LogsToolbar.tsx","../../core/src/runs/Run.tsx","../../core/src/hooks/useFavicon.tsx","../../core/src/runs/RunRoot.tsx","../../core/src/ui/formatters.tsx"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceSupportsCapturedLogsQuery,\n  InstanceSupportsCapturedLogsQueryVariables,\n} from './types/useSupportsCapturedLogs.types';\n\nexport const useSupportsCapturedLogs = () => {\n  const {data} = useQuery<\n    InstanceSupportsCapturedLogsQuery,\n    InstanceSupportsCapturedLogsQueryVariables\n  >(INSTANCE_SUPPORTS_CAPTURED_LOGS);\n  return !!data?.instance.hasCapturedLogManager;\n};\n\nconst INSTANCE_SUPPORTS_CAPTURED_LOGS = gql`\n  query InstanceSupportsCapturedLogs {\n    instance {\n      id\n      hasCapturedLogManager\n    }\n  }\n`;\n","import {Colors, Group, Icon, Spinner, FontFamily} from '@dagster-io/ui';\nimport Ansi from 'ansi-to-react';\nimport * as React from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\nconst TRUNCATE_PREFIX = '\\u001b[33m...logs truncated...\\u001b[39m\\n';\nconst SCROLLER_LINK_TIMEOUT_MS = 3000;\n\nexport const RawLogContent: React.FC<{\n  logData: string | null;\n  isLoading: boolean;\n  isVisible: boolean;\n  downloadUrl?: string | null;\n  location?: string;\n}> = React.memo(({logData, location, isLoading, isVisible, downloadUrl}) => {\n  const contentContainer = React.useRef<ScrollContainer | null>(null);\n  const timer = React.useRef<number>();\n  const [showScrollToTop, setShowScrollToTop] = React.useState(false);\n  const scrollToTop = () => {\n    contentContainer.current && contentContainer.current.scrollToTop();\n  };\n  const cancelHideWarning = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = 0;\n    }\n  };\n  const hideWarning = () => {\n    setShowScrollToTop(false);\n    cancelHideWarning();\n  };\n  const scheduleHideWarning = () => {\n    timer.current = window.setTimeout(hideWarning, SCROLLER_LINK_TIMEOUT_MS);\n  };\n  const onScrollUp = (position: number) => {\n    cancelHideWarning();\n\n    if (!position) {\n      hideWarning();\n    } else {\n      setShowScrollToTop(true);\n      scheduleHideWarning();\n    }\n  };\n  let content = logData;\n  const isTruncated = shouldTruncate(content);\n\n  if (content && isTruncated) {\n    const nextLine = content.indexOf('\\n') + 1;\n    const truncated = nextLine < content.length ? content.slice(nextLine) : content;\n    content = TRUNCATE_PREFIX + truncated;\n  }\n  const warning = isTruncated ? (\n    <FileWarning>\n      <Group direction=\"row\" spacing={8} alignItems=\"center\">\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div>\n          This log has exceeded the 5MB limit.{' '}\n          {downloadUrl ? (\n            <a href={downloadUrl} download>\n              Download the full log file\n            </a>\n          ) : null}\n          .\n        </div>\n      </Group>\n    </FileWarning>\n  ) : null;\n\n  return (\n    <>\n      <FileContainer isVisible={isVisible}>\n        {showScrollToTop ? (\n          <ScrollToast>\n            <ScrollToTop\n              onClick={scrollToTop}\n              onMouseOver={cancelHideWarning}\n              onMouseOut={scheduleHideWarning}\n            >\n              <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                <Icon name=\"arrow_upward\" color={Colors.White} />\n                Scroll to top\n              </Group>\n            </ScrollToTop>\n          </ScrollToast>\n        ) : null}\n        <FileContent>\n          {warning}\n          <RelativeContainer>\n            <LogContent\n              isSelected={true}\n              content={logData}\n              onScrollUp={onScrollUp}\n              onScrollDown={hideWarning}\n              ref={contentContainer}\n            />\n          </RelativeContainer>\n        </FileContent>\n        {isLoading ? (\n          <LoadingContainer>\n            <Spinner purpose=\"page\" />\n          </LoadingContainer>\n        ) : null}\n      </FileContainer>\n      {location ? <FileFooter isVisible={isVisible}>{location}</FileFooter> : null}\n    </>\n  );\n});\n\nconst shouldTruncate = (content: string | null | undefined) => {\n  if (!content) {\n    return false;\n  }\n  const encoder = new TextEncoder();\n  return encoder.encode(content).length >= MAX_STREAMING_LOG_BYTES;\n};\n\ninterface IScrollContainerProps {\n  content: string | null | undefined;\n  isSelected?: boolean;\n  className?: string;\n  onScrollUp?: (position: number) => void;\n  onScrollDown?: (position: number) => void;\n}\n\nclass ScrollContainer extends React.Component<IScrollContainerProps> {\n  private container = React.createRef<HTMLDivElement>();\n  private lastScroll = 0;\n\n  componentDidMount() {\n    this.scrollToBottom();\n    if (this.container.current) {\n      this.container.current.focus();\n      this.container.current.addEventListener('scroll', this.onScroll);\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    if (!this.container.current) {\n      return false;\n    }\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const shouldScroll = offsetHeight + scrollTop >= scrollHeight;\n    return shouldScroll;\n  }\n\n  componentDidUpdate(_props: any, _state: any, shouldScroll: boolean) {\n    if (shouldScroll) {\n      this.scrollToBottom();\n    }\n    if (this.props.isSelected && !_props.isSelected) {\n      this.container.current && this.container.current.focus();\n    }\n  }\n\n  onScroll = () => {\n    if (!this.container.current || !this.props.isSelected) {\n      return;\n    }\n    const {onScrollUp, onScrollDown} = this.props;\n\n    const {scrollHeight, scrollTop, offsetHeight} = this.container.current;\n    const position = scrollTop / (scrollHeight - offsetHeight);\n    if (this.container.current.scrollTop < this.lastScroll) {\n      onScrollUp && onScrollUp(position);\n    } else {\n      onScrollDown && onScrollDown(position);\n    }\n    this.lastScroll = this.container.current.scrollTop;\n  };\n\n  focus() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.focus();\n  }\n\n  scrollToBottom() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = node.scrollHeight - node.offsetHeight;\n  }\n\n  scrollToTop() {\n    const node = this.container.current;\n    if (!node) {\n      return;\n    }\n\n    node.scrollTop = 0;\n    node.focus();\n  }\n\n  render() {\n    const {content, className} = this.props;\n    if (!content) {\n      return (\n        <div className={className} ref={this.container}>\n          <ContentContainer style={{justifyContent: 'center', alignItems: 'center'}}>\n            {content == null ? 'No log file available' : 'No output'}\n          </ContentContainer>\n        </div>\n      );\n    }\n\n    return (\n      <div className={className} style={{outline: 'none'}} ref={this.container} tabIndex={0}>\n        <ContentContainer>\n          <LineNumbers content={content} />\n          <Content>\n            <SolarizedColors />\n            <Ansi linkify={false} useClasses>\n              {content}\n            </Ansi>\n          </Content>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nconst LineNumbers = (props: IScrollContainerProps) => {\n  const {content} = props;\n  if (!content) {\n    return null;\n  }\n  const matches = content.match(/\\n/g);\n  const count = matches ? matches.length : 0;\n  return (\n    <LineNumberContainer>\n      {Array.from(Array(count), (_, i) => (\n        <div key={i}>{String(i + 1)}</div>\n      ))}\n    </LineNumberContainer>\n  );\n};\n\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${Colors.Gray900};\n`;\nconst LineNumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  border-right: 1px solid #5c7080;\n  padding: 10px 10px 10px 20px;\n  margin-right: 5px;\n  background-color: ${Colors.Gray900};\n  opacity: 0.8;\n  color: #858585;\n  min-height: 100%;\n`;\nconst SolarizedColors = createGlobalStyle`\n  .ansi-black {\n    color: #586e75;\n  }\n  .ansi-red {\n    color: #dc322f;\n  }\n  .ansi-green {\n    color: #859900;\n  }\n  .ansi-yellow {\n    color: #b58900;\n  }\n  .ansi-blue {\n    color: #268bd2;\n  }\n  .ansi-magenta {\n    color: #d33682;\n  }\n  .ansi-cyan {\n    color: #2aa198;\n  }\n  .ansi-white {\n    color: #eee8d5;\n  }\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100%;\n  background-color: ${Colors.Gray900};\n`;\nconst FileContainer = styled.div`\n  flex: 1;\n  height: 100%;\n  position: relative;\n  &:first-child {\n    border-right: 0.5px solid #5c7080;\n  }\n  display: flex;\n  flex-direction: column;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\nconst FileFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 30px;\n  background-color: ${Colors.Gray900};\n  border-top: 0.5px solid #5c7080;\n  color: #aaaaaa;\n  padding: 2px 5px;\n  font-size: 0.85em;\n  ${({isVisible}: {isVisible: boolean}) => (isVisible ? null : 'display: none;')}\n`;\n\nconst FileContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nconst RelativeContainer = styled.div`\n  flex: 1;\n  position: relative;\n`;\nconst LogContent = styled(ScrollContainer)`\n  color: #eeeeee;\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  white-space: pre;\n  overflow: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  justifycontent: center;\n  alignitems: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  backgroundcolor: ${Colors.Gray800};\n  opacity: 0.3;\n`;\n\nconst ScrollToast = styled.div`\n  position: absolute;\n  height: 30px;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  z-index: 1;\n`;\nconst ScrollToTop = styled.div`\n  background-color: black;\n  padding: 10px 20px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  color: white;\n  border-bottom: 0.5px solid #5c7080;\n  border-left: 0.5px solid #5c7080;\n  border-right: 0.5px solid #5c7080;\n  cursor: pointer;\n`;\n\nconst FileWarning = styled.div`\n  background-color: #fffae3;\n  padding: 10px 20px;\n  margin: 20px 70px;\n  border-radius: 5px;\n`;\n","import {gql, useQuery, useSubscription} from '@apollo/client';\nimport {Box, Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {WebSocketContext} from '../app/WebSocketProvider';\n\nimport {RawLogContent} from './RawLogContent';\nimport {ILogCaptureInfo} from './RunMetadataProvider';\nimport {\n  CapturedLogFragment,\n  CapturedLogsMetadataQuery,\n  CapturedLogsMetadataQueryVariables,\n  CapturedLogsQuery,\n  CapturedLogsQueryVariables,\n  CapturedLogsSubscription,\n  CapturedLogsSubscriptionVariables,\n} from './types/CapturedLogPanel.types';\n\ninterface CapturedLogProps {\n  logKey: string[];\n  visibleIOType: string;\n  onSetDownloadUrl?: (url: string) => void;\n}\n\ninterface CapturedOrExternalLogPanelProps extends CapturedLogProps {\n  logCaptureInfo?: ILogCaptureInfo;\n}\n\nexport const CapturedOrExternalLogPanel: React.FC<CapturedOrExternalLogPanelProps> = React.memo(\n  ({logCaptureInfo, ...props}) => {\n    const externalUrl =\n      logCaptureInfo &&\n      (props.visibleIOType === 'stdout'\n        ? logCaptureInfo.externalStdoutUrl\n        : logCaptureInfo.externalStderrUrl);\n    if (externalUrl) {\n      return (\n        <Box\n          flex={{direction: 'row', alignItems: 'center', justifyContent: 'center', gap: 1}}\n          background={Colors.Gray900}\n          style={{color: Colors.White, flex: 1, minHeight: 0}}\n        >\n          View logs at\n          <a\n            href={externalUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{\n              color: Colors.White,\n              textDecoration: 'underline',\n              marginLeft: 4,\n              marginRight: 4,\n            }}\n          >\n            {externalUrl}\n          </a>\n          <Icon name=\"open_in_new\" color={Colors.White} size={20} style={{marginTop: 2}} />\n        </Box>\n      );\n    }\n    return props.logKey.length ? <CapturedLogPanel {...props} /> : null;\n  },\n);\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (a?: string | null, b?: string | null): string | null => {\n  if (!b) {\n    return a || null;\n  }\n  if (!a) {\n    return slice(b);\n  }\n  return slice(a + b);\n};\n\ninterface State {\n  stdout: string | null;\n  stderr: string | null;\n  cursor?: string | null;\n  isLoading: boolean;\n  stdoutDownloadUrl?: string;\n  stdoutLocation?: string;\n  stderrDownloadUrl?: string;\n  stderrLocation?: string;\n}\n\ntype Action =\n  | {type: 'update'; logData: CapturedLogFragment}\n  | {type: 'metadata'; metadata: any}\n  | {type: 'reset'};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'update':\n      return {\n        ...state,\n        isLoading: false,\n        cursor: action.logData?.cursor,\n        stdout: merge(state.stdout, action.logData?.stdout),\n        stderr: merge(state.stderr, action.logData?.stderr),\n      };\n    case 'metadata':\n      return {\n        ...state,\n        ...action.metadata,\n      };\n    case 'reset':\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stdout: null,\n  stderr: null,\n  cursor: null,\n  isLoading: true,\n};\n\nconst CapturedLogSubscription: React.FC<{\n  logKey: string[];\n  onLogData: (logData: CapturedLogFragment) => void;\n}> = React.memo(({logKey, onLogData}) => {\n  useSubscription<CapturedLogsSubscription, CapturedLogsSubscriptionVariables>(\n    CAPTURED_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {logKey},\n      onSubscriptionData: ({subscriptionData}) => {\n        if (subscriptionData.data?.capturedLogs) {\n          onLogData(subscriptionData.data.capturedLogs);\n        }\n      },\n    },\n  );\n  return null;\n});\n\nconst CAPTURED_LOGS_SUBSCRIPTION = gql`\n  subscription CapturedLogsSubscription($logKey: [String!]!, $cursor: String) {\n    capturedLogs(logKey: $logKey, cursor: $cursor) {\n      ...CapturedLog\n    }\n  }\n\n  fragment CapturedLog on CapturedLogs {\n    stdout\n    stderr\n    cursor\n  }\n`;\n\nconst CAPTURED_LOGS_METADATA_QUERY = gql`\n  query CapturedLogsMetadataQuery($logKey: [String!]!) {\n    capturedLogsMetadata(logKey: $logKey) {\n      stdoutDownloadUrl\n      stdoutLocation\n      stderrDownloadUrl\n      stderrLocation\n    }\n  }\n`;\n\nconst QUERY_LOG_LIMIT = 100000;\nconst POLL_INTERVAL = 5000;\n\nconst CapturedLogsSubscriptionProvider = ({\n  logKey,\n  children,\n}: {\n  logKey: string[];\n  children: (result: State) => React.ReactChild;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const logKeyString = JSON.stringify(logKey);\n  React.useEffect(() => {\n    dispatch({type: 'reset'});\n  }, [logKeyString]);\n\n  const onLogData = React.useCallback((logData: CapturedLogFragment) => {\n    dispatch({type: 'update', logData});\n  }, []);\n  return (\n    <>\n      <CapturedLogSubscription logKey={logKey} onLogData={onLogData} />\n      {children(state)}\n    </>\n  );\n};\n\nconst CapturedLogsQueryProvider = ({\n  logKey,\n  children,\n}: {\n  logKey: string[];\n  children: (result: State) => React.ReactChild;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const logKeyString = JSON.stringify(logKey);\n  React.useEffect(() => {\n    dispatch({type: 'reset'});\n  }, [logKeyString]);\n  const {cursor} = state;\n\n  const {stopPolling, startPolling} = useQuery<CapturedLogsQuery, CapturedLogsQueryVariables>(\n    CAPTURED_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {logKey, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: CapturedLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n        dispatch({type: 'update', logData: data.capturedLogs});\n        startPolling(POLL_INTERVAL);\n      },\n    },\n  );\n\n  return <>{children(state)}</>;\n};\n\nconst CAPTURED_LOGS_QUERY = gql`\n  query CapturedLogsQuery($logKey: [String!]!, $cursor: String, $limit: Int) {\n    capturedLogs(logKey: $logKey, cursor: $cursor, limit: $limit) {\n      stdout\n      stderr\n      cursor\n    }\n  }\n`;\n\nconst CapturedLogPanel: React.FC<CapturedLogProps> = React.memo(\n  ({logKey, visibleIOType, onSetDownloadUrl}) => {\n    const {rootServerURI} = React.useContext(AppContext);\n    const {availability, disabled} = React.useContext(WebSocketContext);\n    const queryResult = useQuery<CapturedLogsMetadataQuery, CapturedLogsMetadataQueryVariables>(\n      CAPTURED_LOGS_METADATA_QUERY,\n      {\n        variables: {logKey},\n      },\n    );\n\n    React.useEffect(() => {\n      if (!onSetDownloadUrl || !queryResult.data) {\n        return;\n      }\n      const visibleDownloadUrl =\n        visibleIOType === 'stdout'\n          ? queryResult.data.capturedLogsMetadata.stdoutDownloadUrl\n          : queryResult.data.capturedLogsMetadata.stderrDownloadUrl;\n\n      if (!visibleDownloadUrl) {\n        return;\n      }\n      if (visibleDownloadUrl.startsWith('/')) {\n        onSetDownloadUrl(rootServerURI + visibleDownloadUrl);\n      } else {\n        onSetDownloadUrl(visibleDownloadUrl);\n      }\n    }, [onSetDownloadUrl, visibleIOType, rootServerURI, queryResult.data]);\n\n    const stdoutLocation = queryResult.data?.capturedLogsMetadata.stdoutLocation || undefined;\n    const stderrLocation = queryResult.data?.capturedLogsMetadata.stderrLocation || undefined;\n    const websocketsUnavailabile = availability === 'unavailable' || disabled;\n    const Component = websocketsUnavailabile\n      ? CapturedLogsQueryProvider\n      : CapturedLogsSubscriptionProvider;\n    return (\n      <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n        <Component logKey={logKey}>\n          {(_state: State) => (\n            <>\n              <RawLogContent\n                logData={_state.stdout}\n                isLoading={_state.isLoading}\n                location={stdoutLocation}\n                isVisible={visibleIOType === 'stdout'}\n              />\n              <RawLogContent\n                logData={_state.stderr}\n                isLoading={_state.isLoading}\n                location={stderrLocation}\n                isVisible={visibleIOType === 'stderr'}\n              />\n            </>\n          )}\n        </Component>\n      </div>\n    );\n  },\n);\n","import {gql, useSubscription} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ComputeIoType} from '../graphql/types';\n\nimport {\n  ComputeLogForSubscriptionFragment,\n  ComputeLogsSubscription,\n  ComputeLogsSubscriptionVariables,\n} from './types/useComputeLogs.types';\n\nconst MAX_STREAMING_LOG_BYTES = 5242880; // 5 MB\n\nconst slice = (s: string) =>\n  s.length < MAX_STREAMING_LOG_BYTES ? s : s.slice(-MAX_STREAMING_LOG_BYTES);\n\nconst merge = (\n  a: ComputeLogForSubscriptionFragment | null,\n  b: ComputeLogForSubscriptionFragment | null,\n): ComputeLogForSubscriptionFragment | null => {\n  if (!b) {\n    return a;\n  }\n  let data = a?.data;\n  if (a?.data && b?.data) {\n    data = slice(a.data + b.data);\n  } else if (b?.data) {\n    data = slice(b.data);\n  }\n  return {\n    __typename: b.__typename,\n    path: b.path,\n    downloadUrl: b.downloadUrl,\n    data: typeof data === 'string' ? data : null,\n    cursor: b.cursor,\n  };\n};\n\ninterface State {\n  stepKey: string;\n  stdout: ComputeLogForSubscriptionFragment | null;\n  stderr: ComputeLogForSubscriptionFragment | null;\n  isLoading: boolean;\n}\n\ntype Action =\n  | {type: 'stdout'; stepKey: string; log: ComputeLogForSubscriptionFragment | null}\n  | {type: 'stderr'; stepKey: string; log: ComputeLogForSubscriptionFragment | null};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'stdout':\n      const stdout =\n        action.stepKey === state.stepKey ? merge(state.stdout, action.log) : action.log;\n      return {...state, isLoading: false, stdout};\n    case 'stderr':\n      const stderr =\n        action.stepKey === state.stepKey ? merge(state.stderr, action.log) : action.log;\n      return {...state, isLoading: false, stderr};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  stepKey: '',\n  stdout: null,\n  stderr: null,\n  isLoading: true,\n};\n\nexport const useComputeLogs = (runId: string, stepKey: string) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey, ioType: ComputeIoType.STDOUT, cursor: null},\n      onSubscriptionData: ({subscriptionData}) => {\n        dispatch({type: 'stdout', stepKey, log: subscriptionData.data?.computeLogs || null});\n      },\n    },\n  );\n\n  useSubscription<ComputeLogsSubscription, ComputeLogsSubscriptionVariables>(\n    COMPUTE_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables: {runId, stepKey, ioType: ComputeIoType.STDERR, cursor: null},\n      onSubscriptionData: ({subscriptionData}) => {\n        dispatch({type: 'stderr', stepKey, log: subscriptionData.data?.computeLogs || null});\n      },\n    },\n  );\n\n  return state;\n};\n\nconst COMPUTE_LOGS_SUBSCRIPTION = gql`\n  subscription ComputeLogsSubscription(\n    $runId: ID!\n    $stepKey: String!\n    $ioType: ComputeIOType!\n    $cursor: String\n  ) {\n    computeLogs(runId: $runId, stepKey: $stepKey, ioType: $ioType, cursor: $cursor) {\n      ...ComputeLogForSubscription\n    }\n  }\n\n  fragment ComputeLogForSubscription on ComputeLogFile {\n    path\n    cursor\n    data\n    downloadUrl\n  }\n`;\n","import {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\n\nimport {RawLogContent} from './RawLogContent';\nimport {useComputeLogs} from './useComputeLogs';\n\ninterface ComputeLogPanelProps {\n  runId: string;\n  ioType: string;\n  setComputeLogUrl: (url: string | null) => void;\n}\n\ninterface ComputeLogPanelMaybeKeyProps extends ComputeLogPanelProps {\n  computeLogFileKey?: string;\n  stepKeys: string[];\n}\n\nexport const ComputeLogPanel: React.FC<ComputeLogPanelMaybeKeyProps> = (props) => {\n  const {runId, stepKeys, computeLogFileKey, ioType, setComputeLogUrl} = props;\n\n  if (!stepKeys.length || !computeLogFileKey) {\n    return (\n      <Box\n        flex={{justifyContent: 'center', alignItems: 'center'}}\n        style={{flex: 1, height: '100%'}}\n      >\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <ComputeLogsPanelWithKey\n      runId={runId}\n      computeLogFileKey={computeLogFileKey}\n      ioType={ioType}\n      setComputeLogUrl={setComputeLogUrl}\n    />\n  );\n};\n\ninterface ComputeLogPanelWithKeyProps extends ComputeLogPanelProps {\n  computeLogFileKey: string;\n}\n\nconst resolveDownloadUrl = (rootServerURI: string, downloadUrl: string | null) => {\n  if (!downloadUrl) {\n    return null;\n  }\n  const isRelativeUrl = (x?: string) => x && x.startsWith('/');\n  return isRelativeUrl(downloadUrl) ? rootServerURI + downloadUrl : downloadUrl;\n};\n\nconst ComputeLogsPanelWithKey: React.FC<ComputeLogPanelWithKeyProps> = React.memo((props) => {\n  const {runId, computeLogFileKey, ioType, setComputeLogUrl} = props;\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {isLoading, stdout, stderr} = useComputeLogs(runId, computeLogFileKey);\n  const stdoutDownloadUrl = resolveDownloadUrl(rootServerURI, stdout?.downloadUrl || null);\n  const stderrDownloadUrl = resolveDownloadUrl(rootServerURI, stderr?.downloadUrl || null);\n\n  return (\n    <div style={{flex: 1, minHeight: 0, display: 'flex', flexDirection: 'column'}}>\n      <ContentWrapper\n        content={stdout ? stdout.data : null}\n        path={stdout ? stdout.path : undefined}\n        downloadUrl={stdoutDownloadUrl}\n        isLoading={isLoading}\n        isVisible={ioType === 'stdout'}\n        setComputeLogUrl={setComputeLogUrl}\n      />\n      <ContentWrapper\n        content={stderr ? stderr.data : null}\n        path={stderr ? stderr.path : undefined}\n        downloadUrl={stderrDownloadUrl}\n        isLoading={isLoading}\n        isVisible={ioType === 'stderr'}\n        setComputeLogUrl={setComputeLogUrl}\n      />\n    </div>\n  );\n});\n\nconst ContentWrapper = ({\n  isLoading,\n  isVisible,\n  content,\n  path,\n  downloadUrl,\n  setComputeLogUrl,\n}: {\n  isVisible: boolean;\n  isLoading: boolean;\n  content: string | null;\n  path?: string;\n  downloadUrl: string | null;\n  setComputeLogUrl: (url: string | null) => void;\n}) => {\n  React.useEffect(() => {\n    setComputeLogUrl(downloadUrl);\n  }, [setComputeLogUrl, downloadUrl]);\n  return (\n    <RawLogContent\n      logData={content}\n      isLoading={isLoading}\n      isVisible={isVisible}\n      downloadUrl={downloadUrl}\n      location={path}\n    />\n  );\n};\n","import {\n  gql,\n  OnSubscriptionDataOptions,\n  useApolloClient,\n  useQuery,\n  useSubscription,\n} from '@apollo/client';\nimport {TokenizingFieldValue} from '@dagster-io/ui';\nimport throttle from 'lodash/throttle';\nimport * as React from 'react';\n\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {RunStatus} from '../graphql/types';\n\nimport {LogLevelCounts} from './LogsToolbar';\nimport {RUN_DAGSTER_RUN_EVENT_FRAGMENT} from './RunFragments';\nimport {logNodeLevel} from './logNodeLevel';\nimport {LogNode} from './types';\nimport {\n  RunLogsSubscriptionSuccessFragment,\n  PipelineRunLogsSubscriptionStatusFragment,\n  RunLogsQuery,\n  PipelineRunLogsSubscription,\n  RunLogsQueryVariables,\n  PipelineRunLogsSubscriptionVariables,\n} from './types/LogsProvider.types';\nimport {RunDagsterRunEventFragment} from './types/RunFragments.types';\n\nexport interface LogFilterValue extends TokenizingFieldValue {\n  token?: 'step' | 'type' | 'query';\n}\n\nexport interface LogFilter {\n  logQuery: LogFilterValue[];\n  levels: {[key: string]: boolean};\n  focusedTime: number;\n  sinceTime: number;\n  hideNonMatches: boolean;\n}\n\nexport interface LogsProviderLogs {\n  allNodes: LogNode[];\n  counts: LogLevelCounts;\n  loading: boolean;\n}\n\nconst pipelineStatusFromMessages = (messages: RunDagsterRunEventFragment[]) => {\n  const reversed = [...messages].reverse();\n  for (const message of reversed) {\n    const {__typename} = message;\n    switch (__typename) {\n      case 'RunStartEvent':\n        return RunStatus.STARTED;\n      case 'RunEnqueuedEvent':\n        return RunStatus.QUEUED;\n      case 'RunStartingEvent':\n        return RunStatus.STARTING;\n      case 'RunCancelingEvent':\n        return RunStatus.CANCELING;\n      case 'RunCanceledEvent':\n        return RunStatus.CANCELED;\n      case 'RunSuccessEvent':\n        return RunStatus.SUCCESS;\n      case 'RunFailureEvent':\n        return RunStatus.FAILURE;\n    }\n  }\n  return null;\n};\n\nconst BATCH_INTERVAL = 100;\nconst QUERY_LOG_LIMIT = 10000;\n\ntype State = {\n  nodes: LogNode[];\n  cursor: string | null;\n  counts: LogLevelCounts;\n  loading: boolean;\n};\n\ntype Action =\n  | {type: 'append'; queued: RunDagsterRunEventFragment[]; hasMore: boolean; cursor: string}\n  | {type: 'set-cursor'; cursor: string}\n  | {type: 'reset'};\n\nconst emptyCounts = {\n  DEBUG: 0,\n  INFO: 0,\n  WARNING: 0,\n  ERROR: 0,\n  CRITICAL: 0,\n  EVENT: 0,\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'append': {\n      const queuedNodes = action.queued.map((node, ii) => ({\n        ...node,\n        clientsideKey: `csk${node.timestamp}-${ii}`,\n      }));\n      const nodes = [...state.nodes, ...queuedNodes];\n      const counts = {...state.counts};\n      queuedNodes.forEach((node) => {\n        const level = logNodeLevel(node);\n        counts[level]++;\n      });\n      return {nodes, counts, loading: action.hasMore, cursor: action.cursor};\n    }\n    case 'set-cursor':\n      return {...state, cursor: action.cursor};\n    case 'reset':\n      return {nodes: [], counts: emptyCounts, cursor: null, loading: true};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  nodes: [],\n  counts: emptyCounts,\n  cursor: null,\n  loading: true,\n};\n\nconst useLogsProviderWithSubscription = (runId: string) => {\n  const client = useApolloClient();\n  const queue = React.useRef<RunLogsSubscriptionSuccessFragment[]>([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const syncPipelineStatusToApolloCache = React.useCallback(\n    (status: RunStatus) => {\n      const local = client.readFragment<PipelineRunLogsSubscriptionStatusFragment>({\n        fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n        fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n        id: `Run:${runId}`,\n      });\n\n      if (local) {\n        const toWrite = {\n          ...local,\n          canTerminate: status === RunStatus.QUEUED || status === RunStatus.STARTED,\n          status,\n        };\n\n        client.writeFragment({\n          fragmentName: 'PipelineRunLogsSubscriptionStatusFragment',\n          fragment: PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT,\n          id: `Run:${runId}`,\n          data: toWrite,\n        });\n      }\n    },\n    [client, runId],\n  );\n\n  React.useEffect(() => {\n    queue.current = [];\n    dispatch({type: 'reset'});\n  }, [runId]);\n\n  // Batch the nodes together so they don't overwhelm the animation of the Gantt,\n  // which depends on a bit of a timing delay to maintain smoothness.\n  const throttledSetNodes = React.useMemo(() => {\n    return throttle(() => {\n      if (!queue.current.length) {\n        return;\n      }\n      const queuedLogs = [...queue.current];\n      queue.current = [];\n      const queuedMessages = queuedLogs.flatMap((log) => log.messages);\n      const lastLog = queuedLogs[queuedLogs.length - 1]!;\n      const hasMore = lastLog.hasMorePastEvents;\n      const cursor = lastLog.cursor;\n\n      dispatch({type: 'append', queued: queuedMessages, hasMore, cursor});\n      const nextPipelineStatus = pipelineStatusFromMessages(queuedMessages);\n\n      // If we're still loading past events, don't sync to the cache -- event chunks could\n      // give us `status` values that don't match the actual state of the run.\n      if (nextPipelineStatus && !hasMore) {\n        syncPipelineStatusToApolloCache(nextPipelineStatus);\n      }\n    }, BATCH_INTERVAL);\n  }, [syncPipelineStatusToApolloCache]);\n\n  const {nodes, counts, cursor, loading} = state;\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n  const currentInitialCursorRef = React.useRef<string | null>(cursor);\n\n  if (lostWebsocket) {\n    // Record the cursor we're at when disconnecting so that our subscription\n    // picks up where we left off.\n    currentInitialCursorRef.current = cursor;\n  }\n  const currentInitialCursor = currentInitialCursorRef.current;\n\n  const variables = React.useMemo(() => {\n    return {\n      runId,\n      cursor: currentInitialCursor,\n    };\n  }, [runId, currentInitialCursor]);\n\n  const subscriptionComponent = React.useMemo(\n    () => (\n      <SubscriptionComponent\n        variables={variables}\n        onSubscriptionData={({subscriptionData}) => {\n          const logs = subscriptionData.data?.pipelineRunLogs;\n          if (!logs || logs.__typename === 'PipelineRunLogsSubscriptionFailure') {\n            return;\n          }\n          // Maintain a queue of messages as they arrive, and call the throttled setter.\n          queue.current.push(logs);\n          // Wait until end of animation frame to call throttled set nodes\n          // otherwise we wont end up batching anything if rendering takes\n          // longer than the BATCH_INTERVAL\n          requestAnimationFrame(throttledSetNodes);\n        }}\n      />\n    ),\n    [variables, throttledSetNodes],\n  );\n\n  return React.useMemo(\n    () =>\n      nodes !== null\n        ? {allNodes: nodes, counts, loading, subscriptionComponent}\n        : {allNodes: [], counts, loading, subscriptionComponent},\n    [counts, loading, nodes, subscriptionComponent],\n  );\n};\n\n/**\n * Putting useSubscription in a component that returns null avoids re-rendering\n * any children components that aren't completely memoized\n * https://stackoverflow.com/questions/61876931/how-to-prevent-re-rendering-with-usesubscription\n */\nconst SubscriptionComponent = ({\n  variables,\n  onSubscriptionData,\n}: {\n  variables: {\n    runId: string;\n    cursor: string | null;\n  };\n  onSubscriptionData: (options: OnSubscriptionDataOptions<PipelineRunLogsSubscription>) => void;\n}) => {\n  useSubscription<PipelineRunLogsSubscription, PipelineRunLogsSubscriptionVariables>(\n    PIPELINE_RUN_LOGS_SUBSCRIPTION,\n    {\n      fetchPolicy: 'no-cache',\n      variables,\n      onSubscriptionData,\n    },\n  );\n  return null;\n};\n\ninterface LogsProviderProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst LogsProviderWithSubscription: React.FC<LogsProviderProps> = (props) => {\n  const state = useLogsProviderWithSubscription(props.runId);\n  return (\n    <>\n      {state.subscriptionComponent}\n      {props.children(state)}\n    </>\n  );\n};\n\ninterface LogsProviderWithQueryProps {\n  runId: string;\n  children: (result: LogsProviderLogs) => React.ReactChild;\n}\n\nconst POLL_INTERVAL = 5000;\n\nconst LogsProviderWithQuery = (props: LogsProviderWithQueryProps) => {\n  const {children, runId} = props;\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {counts, cursor, nodes} = state;\n\n  const {stopPolling, startPolling} = useQuery<RunLogsQuery, RunLogsQueryVariables>(\n    RUN_LOGS_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n      variables: {runId, cursor, limit: QUERY_LOG_LIMIT},\n      pollInterval: POLL_INTERVAL,\n      onCompleted: (data: RunLogsQuery) => {\n        // We have to stop polling in order to update the `after` value.\n        stopPolling();\n\n        if (\n          data?.pipelineRunOrError.__typename !== 'Run' ||\n          data?.logsForRun.__typename !== 'EventConnection'\n        ) {\n          return;\n        }\n\n        const run = data.pipelineRunOrError;\n        const queued = data.logsForRun.events;\n        const status = run.status;\n        const cursor = data.logsForRun.cursor;\n\n        const hasMore =\n          !!status &&\n          status !== RunStatus.FAILURE &&\n          status !== RunStatus.SUCCESS &&\n          status !== RunStatus.CANCELED;\n\n        dispatch({type: 'append', queued, hasMore, cursor});\n\n        if (hasMore) {\n          startPolling(POLL_INTERVAL);\n        }\n      },\n    },\n  );\n\n  return (\n    <>\n      {children(\n        nodes !== null && nodes.length > 0\n          ? {allNodes: nodes, counts, loading: false}\n          : {allNodes: [], counts, loading: true},\n      )}\n    </>\n  );\n};\n\nexport const LogsProvider: React.FC<LogsProviderProps> = (props) => {\n  const {children, runId} = props;\n  const {availability, disabled} = React.useContext(WebSocketContext);\n\n  // if disabled, drop to query variant immediately\n  if (availability === 'unavailable' || disabled) {\n    return <LogsProviderWithQuery runId={runId}>{children}</LogsProviderWithQuery>;\n  }\n\n  if (availability === 'attempting-to-connect') {\n    return <>{children({allNodes: [], counts: emptyCounts, loading: true})}</>;\n  }\n\n  return <LogsProviderWithSubscription runId={runId}>{children}</LogsProviderWithSubscription>;\n};\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION = gql`\n  subscription PipelineRunLogsSubscription($runId: ID!, $cursor: String) {\n    pipelineRunLogs(runId: $runId, cursor: $cursor) {\n      ... on PipelineRunLogsSubscriptionFailure {\n        missingRunId\n        message\n      }\n      ...RunLogsSubscriptionSuccess\n    }\n  }\n\n  fragment RunLogsSubscriptionSuccess on PipelineRunLogsSubscriptionSuccess {\n    messages {\n      ... on MessageEvent {\n        runId\n      }\n      ...RunDagsterRunEventFragment\n    }\n    hasMorePastEvents\n    cursor\n  }\n\n  ${RUN_DAGSTER_RUN_EVENT_FRAGMENT}\n`;\n\nconst PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT = gql`\n  fragment PipelineRunLogsSubscriptionStatusFragment on Run {\n    id\n    status\n    canTerminate\n  }\n`;\n\nconst RUN_LOGS_QUERY = gql`\n  query RunLogsQuery($runId: ID!, $cursor: String, $limit: Int) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        status\n        canTerminate\n      }\n    }\n    logsForRun(runId: $runId, afterCursor: $cursor, limit: $limit) {\n      ... on EventConnection {\n        events {\n          ... on MessageEvent {\n            runId\n          }\n          ...RunDagsterRunEventFragment\n        }\n        cursor\n      }\n      ... on PythonError {\n        message\n        stack\n      }\n    }\n  }\n\n  ${RUN_DAGSTER_RUN_EVENT_FRAGMENT}\n`;\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nimport {IStepState} from './RunMetadataProvider';\n\nexport const ExecutionStateDot = styled.div<{state: IStepState}>`\n  display: inline-block;\n  width: 11px;\n  height: 11px;\n  border-radius: 5.5px;\n  transition: background 200ms linear;\n  background: ${({state}) =>\n    ({\n      [IStepState.RUNNING]: Colors.Gray400,\n      [IStepState.SUCCEEDED]: Colors.Green700,\n      [IStepState.SKIPPED]: Colors.Yellow500,\n      [IStepState.FAILED]: Colors.Red500,\n      [IStepState.PREPARING]: Colors.Red500,\n      [IStepState.RETRY_REQUESTED]: Colors.Red500,\n      [IStepState.UNKNOWN]: Colors.Red500,\n    }[state])};\n  &:hover {\n    background: ${({state}) =>\n      ({\n        [IStepState.RUNNING]: Colors.Gray400,\n        [IStepState.SUCCEEDED]: Colors.Green700,\n        [IStepState.SKIPPED]: Colors.Yellow500,\n        [IStepState.FAILED]: Colors.Red200,\n        [IStepState.PREPARING]: Colors.Red500,\n        [IStepState.RETRY_REQUESTED]: Colors.Red500,\n        [IStepState.UNKNOWN]: Colors.Red500,\n      }[state])};\n  }\n`;\n","import {Box, Button, Checkbox, Colors, Icon, Menu, MenuItem, Popover} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {LogLevel} from '../graphql/types';\nimport {compactNumber} from '../ui/formatters';\n\nexport type FilterOption = {\n  label: string;\n  count: number;\n  enabled: boolean;\n};\n\ninterface Props {\n  options: Record<LogLevel, FilterOption>;\n  onSetFilter: (level: LogLevel, enabled: boolean) => void;\n}\n\nexport const LogFilterSelect: React.FC<Props> = ({options, onSetFilter}) => {\n  const [showMenu, setShowMenu] = React.useState(false);\n\n  const levels = Object.keys(options);\n  const values = Object.values(options);\n  const enabledCount = values.reduce((accum, {enabled}) => (enabled ? accum + 1 : accum), 0);\n\n  const onChange = (level: string) => {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const checked = e.target.checked;\n      onSetFilter(level as LogLevel, checked);\n    };\n  };\n\n  return (\n    <Popover\n      isOpen={showMenu}\n      placement=\"bottom-start\"\n      canEscapeKeyClose\n      onInteraction={(nextOpenState: boolean) => setShowMenu(nextOpenState)}\n      content={\n        <Menu style={{width: '180px'}} aria-label=\"filter-options\">\n          {levels.map((level) => {\n            const optionForLevel = options[level as keyof typeof options];\n            const {label, count, enabled} = optionForLevel;\n            return (\n              <MenuItem\n                key={level}\n                tagName=\"div\"\n                shouldDismissPopover={false}\n                text={\n                  <Box flex={{direction: 'row', alignItems: 'center'}}>\n                    <MenuCheckbox\n                      id={`menu-check-${level}`}\n                      checked={enabled}\n                      onChange={onChange(level)}\n                      label={\n                        <Box\n                          flex={{\n                            direction: 'row',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                          }}\n                          style={{flex: 1}}\n                        >\n                          <div>{label}</div>\n                          <div style={{color: Colors.Gray500}}>{compactNumber(count)}</div>\n                        </Box>\n                      }\n                    />\n                  </Box>\n                }\n              />\n            );\n          })}\n        </Menu>\n      }\n    >\n      <FilterButton\n        onClick={() => setShowMenu((current) => !current)}\n        icon={<Icon name=\"filter_alt\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n      >\n        Levels ({enabledCount})\n      </FilterButton>\n    </Popover>\n  );\n};\n\nconst FilterButton = styled(Button)`\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst MenuCheckbox = styled(Checkbox)`\n  display: flex;\n  flex: 1;\n`;\n","import {\n  Colors,\n  Popover,\n  TextInput,\n  SuggestionProvider,\n  useSuggestionsForString,\n  Icon,\n} from '@dagster-io/ui';\nimport Fuse from 'fuse.js';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ClearButton} from '../ui/ClearButton';\n\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n  suggestionProviders: SuggestionProvider[];\n}\n\ntype Action =\n  | {type: 'show-popover'}\n  | {type: 'hide-popover'}\n  | {type: 'highlight'; highlight: number}\n  | {type: 'change-query'}\n  | {type: 'select-suggestion'};\n\ntype State = {\n  shown: boolean;\n  highlight: number;\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'show-popover':\n      return {...state, shown: true};\n    case 'hide-popover':\n      return {...state, shown: false};\n    case 'highlight':\n      return {...state, highlight: action.highlight};\n    case 'change-query':\n      return {...state, shown: true, highlight: 0};\n    case 'select-suggestion':\n      return {...state, highlight: 0};\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  shown: false,\n  highlight: 0,\n};\n\nconst fuseOptions = {\n  threshold: 0.3,\n};\n\nexport const LogsFilterInput: React.FC<Props> = (props) => {\n  const {value, onChange, suggestionProviders} = props;\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {shown, highlight} = state;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const {empty, perProvider} = React.useMemo(() => {\n    const perProvider = suggestionProviders.reduce((accum, provider) => {\n      const values = provider.values();\n      return provider.token\n        ? {...accum, [provider.token]: {fuse: new Fuse(values, fuseOptions), all: values}}\n        : accum;\n    }, {} as {[token: string]: {fuse: Fuse<string>; all: string[]}});\n    const providerKeys = suggestionProviders\n      .map((provider) => provider.token)\n      .filter((token) => token) as string[];\n    return {\n      empty: new Fuse(providerKeys, fuseOptions),\n      perProvider,\n    };\n  }, [suggestionProviders]);\n\n  const buildSuggestions = React.useCallback(\n    (queryString: string): string[] => {\n      if (!queryString) {\n        return Object.keys(perProvider);\n      }\n\n      const [token, value] = queryString.split(':');\n      if (token && token in perProvider) {\n        const {fuse, all} = perProvider[token]!;\n        const results = value\n          ? fuse.search(value).map((result) => `${token}:${result.item}`)\n          : all.map((value) => `${token}:${value}`);\n\n        // If the querystring is an exact match, don't suggest anything.\n        return results.map((result) => result.toLowerCase()).includes(queryString) ? [] : results;\n      }\n\n      return empty.search(queryString).map((result) => result.item);\n    },\n    [empty, perProvider],\n  );\n\n  const {suggestions, onSelectSuggestion} = useSuggestionsForString(buildSuggestions, value);\n\n  const numResults = suggestions.length;\n  const highlightedResult = suggestions[highlight] || null;\n\n  const onInputChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({type: 'change-query'});\n      onChange(e.target.value);\n    },\n    [onChange],\n  );\n\n  const onSelect = React.useCallback(\n    (suggestion: string) => {\n      dispatch({type: 'select-suggestion'});\n      onChange(onSelectSuggestion(suggestion));\n    },\n    [onChange, onSelectSuggestion],\n  );\n\n  const onClear = React.useCallback(() => {\n    dispatch({type: 'change-query'});\n    onChange('');\n    inputRef.current?.focus();\n  }, [onChange]);\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const {key} = e;\n    if (key === 'Escape') {\n      dispatch({type: 'hide-popover'});\n      return;\n    }\n\n    if (!numResults) {\n      return;\n    }\n\n    const lastResult = numResults - 1;\n\n    switch (key) {\n      case 'ArrowUp':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === 0 ? lastResult : highlight - 1});\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        dispatch({type: 'highlight', highlight: highlight === lastResult ? 0 : highlight + 1});\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedResult) {\n          onSelect(highlightedResult);\n        }\n    }\n  };\n  return (\n    <Popover\n      isOpen={shown && suggestions.length > 0}\n      position=\"bottom-left\"\n      content={\n        <Results>\n          {suggestions.map((suggestion, ii) => (\n            <ResultItem\n              key={suggestion}\n              suggestion={suggestion}\n              isHighlight={highlight === ii}\n              onSelect={onSelect}\n            />\n          ))}\n        </Results>\n      }\n    >\n      <FilterInput\n        placeholder=\"Filter…\"\n        spellCheck={false}\n        autoCorrect=\"off\"\n        value={value}\n        ref={inputRef}\n        onChange={onInputChange}\n        onFocus={() => dispatch({type: 'show-popover'})}\n        onBlur={() => dispatch({type: 'hide-popover'})}\n        onKeyDown={onKeyDown}\n        rightElement={\n          <ClearButton onClick={onClear}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst ResultItem: React.FC<{\n  suggestion: string;\n  isHighlight: boolean;\n  onSelect: (suggestion: string) => void;\n}> = (props) => {\n  const {suggestion, isHighlight, onSelect} = props;\n  const element = React.useRef<HTMLLIElement>(null);\n\n  React.useEffect(() => {\n    if (element.current && isHighlight) {\n      element.current.scrollIntoView({block: 'nearest'});\n    }\n  }, [isHighlight]);\n\n  return (\n    <Item\n      ref={element}\n      isHighlight={isHighlight}\n      onMouseDown={(e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        onSelect(suggestion);\n      }}\n    >\n      {suggestion}\n    </Item>\n  );\n};\n\nconst FilterInput = styled(TextInput)`\n  width: 300px;\n`;\n\nconst Results = styled.ul`\n  list-style: none;\n  margin: 0;\n  max-height: 200px;\n  max-width: 800px;\n  min-width: 300px;\n  overflow-y: auto;\n  padding: 4px 0;\n`;\n\ninterface HighlightableTextProps {\n  readonly isHighlight: boolean;\n}\n\nconst Item = styled.li<HighlightableTextProps>`\n  align-items: center;\n  background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.White)};\n  color: ${({isHighlight}) => (isHighlight ? Colors.White : 'default')};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  font-size: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 4px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${({isHighlight}) => (isHighlight ? Colors.Blue500 : Colors.Gray100)};\n  }\n`;\n","import * as React from 'react';\n\nexport const useSuggestionsForString = (\n  buildSuggestions: (value: string) => string[],\n  value: string,\n) => {\n  const tokens = value.toLocaleLowerCase().trim().split(/\\s+/);\n  const queryString = tokens[tokens.length - 1] || '';\n\n  const suggestions = React.useMemo(() => buildSuggestions(queryString), [\n    buildSuggestions,\n    queryString,\n  ]);\n\n  const onSelectSuggestion = React.useCallback(\n    (suggestion: string) => {\n      const lastIndex = value.toLocaleLowerCase().lastIndexOf(queryString);\n      if (lastIndex !== -1) {\n        const keep = value.slice(0, lastIndex);\n        return `${keep}${suggestion}`;\n      }\n\n      // Shouldn't really ever fall through to this, since `queryString` should definitely\n      // be the last token in `value`. No-op just in case.\n      return value;\n    },\n    [queryString, value],\n  );\n\n  return React.useMemo(\n    () => ({\n      suggestions,\n      onSelectSuggestion,\n    }),\n    [onSelectSuggestion, suggestions],\n  );\n};\n","import {tokenizedValueFromString} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {DefaultLogLevels, LogLevel} from './LogLevel';\nimport {LogFilter} from './LogsProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\n\nconst DELIMITER = '|';\n\nfunction levelsToQuery(levels: string[]): string {\n  return levels\n    .sort()\n    .map((key) => key.toLowerCase())\n    .join(DELIMITER);\n}\n\nexport const DefaultQuerystring: {[key: string]: string} = {\n  steps: '*',\n  logs: '',\n  levels: levelsToQuery(DefaultLogLevels),\n  hideNonMatches: 'true',\n  focusedTime: '',\n};\n\n/**\n * Query parameter structure, all optional:\n *\n * `steps`\n *   - string (selection syntax)\n *   - Initializes step selection in Gantt chart\n * `logs`\n *   - string (comma-separated foo:bar tokens or free text)\n *   - Initializes log filter input\n * `levels`\n *   - string (comma-separated values)\n *   - Initializes levels in log filter\n * `focusedTime`\n *   - string (unix timestamp with msec)\n *   - Scrolls directly to log with specified time, if no `logs` filter\n */\nexport const decodeRunPageFilters = (qs: {[key: string]: string}) => {\n  const logsQuery = qs['logs'] || '';\n  const focusedTimeQuery = qs['focusedTime'] || '';\n  const hideNonMatchesQuery = qs['hideNonMatches'] || '';\n  const levelsQuery = qs['levels'] || '';\n\n  const logValues = logsQuery.split(DELIMITER);\n  const focusedTime = focusedTimeQuery && !logsQuery ? Number(focusedTimeQuery) : null;\n  const hideNonMatches = hideNonMatchesQuery === 'true';\n\n  const providers = getRunFilterProviders();\n  const logQuery = logValues.map((token) => tokenizedValueFromString(token, providers));\n\n  const levelsValues = levelsQuery.split(DELIMITER);\n\n  return {\n    sinceTime: 0,\n    focusedTime,\n    hideNonMatches,\n    logQuery,\n    levels: levelsValues\n      .map((level) => level.toUpperCase())\n      .filter((level) => LogLevel.hasOwnProperty(level))\n      .reduce((accum, level) => ({...accum, [level]: true}), {}),\n  } as LogFilter;\n};\n\nexport function encodeRunPageFilters(filter: LogFilter) {\n  const logQueryTokenStrings = filter.logQuery.map((v) =>\n    v.token ? `${v.token}:${v.value}` : v.value,\n  );\n\n  return {\n    hideNonMatches: filter.hideNonMatches ? 'true' : 'false',\n    focusedTime: filter.focusedTime || '',\n    logs: logQueryTokenStrings.join(DELIMITER),\n    levels: levelsToQuery(Object.keys(filter.levels).filter((key) => !!filter.levels[key])),\n  };\n}\n\nexport const EnabledRunLogLevelsKey = 'EnabledRunLogLevels';\n\nexport const validateLogLevels = (json: any) => {\n  if (json === undefined || !Array.isArray(json)) {\n    return null;\n  }\n\n  const validLevels = new Set(Object.keys(LogLevel));\n  return json.filter((level) => validLevels.has(level));\n};\n\nexport function useQueryPersistedLogFilter(): [LogFilter, (updates: LogFilter) => void] {\n  // We only read the stored log levels here as defaults, but we do not set them. This is\n  // because we don't want to update the persisted value unless the user interacts with the\n  // LogFilterSelect component. Navigating to a page with levels set in the URL querystring\n  // should *not* implicitly update the persisted values.\n  const [storedLogLevels] = useStateWithStorage(EnabledRunLogLevelsKey, validateLogLevels);\n\n  const defaults = React.useMemo(() => {\n    const levels = storedLogLevels ?? DefaultLogLevels;\n    return {...DefaultQuerystring, levels: levelsToQuery(levels)};\n  }, [storedLogLevels]);\n\n  return useQueryPersistedState<LogFilter>({\n    encode: encodeRunPageFilters,\n    decode: decodeRunPageFilters,\n    defaults,\n  });\n}\n","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Group,\n  IconName,\n  Icon,\n  MenuItem,\n  Select,\n  Spinner,\n  Tab,\n  Tabs,\n  IconWrapper,\n  Colors,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useCopyToClipboard} from '../app/browser';\nimport {OptionsContainer, OptionsDivider} from '../gantt/VizComponents';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {ExecutionStateDot} from './ExecutionStateDot';\nimport {FilterOption, LogFilterSelect} from './LogFilterSelect';\nimport {LogLevel} from './LogLevel';\nimport {LogsFilterInput} from './LogsFilterInput';\nimport {LogFilter, LogFilterValue} from './LogsProvider';\nimport {\n  extractLogCaptureStepsFromLegacySteps,\n  ILogCaptureInfo,\n  IRunMetadataDict,\n  IStepState,\n} from './RunMetadataProvider';\nimport {getRunFilterProviders} from './getRunFilterProviders';\nimport {EnabledRunLogLevelsKey, validateLogLevels} from './useQueryPersistedLogFilter';\n\nexport enum LogType {\n  structured = 'structured',\n  stdout = 'stdout',\n  stderr = 'stderr',\n}\n\ninterface ILogsToolbarProps {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  counts: LogLevelCounts;\n\n  filter: LogFilter;\n  onSetFilter: (filter: LogFilter) => void;\n  logType: LogType;\n  onSetLogType: (logType: LogType) => void;\n  computeLogFileKey?: string;\n  onSetComputeLogKey: (key: string) => void;\n  computeLogUrl: string | null;\n}\n\nconst logQueryToString = (logQuery: LogFilterValue[]) =>\n  logQuery.map(({token, value}) => (token ? `${token}:${value}` : value)).join(' ');\n\nconst INITIAL_COMPUTE_LOG_TYPE = 'initial-compute-log-type';\n\nexport const LogsToolbar: React.FC<ILogsToolbarProps> = (props) => {\n  const {\n    steps,\n    metadata,\n    counts,\n    filter,\n    onSetFilter,\n    logType,\n    onSetLogType,\n    computeLogFileKey,\n    onSetComputeLogKey,\n    computeLogUrl,\n  } = props;\n\n  const [\n    initialComputeLogType,\n    setInitialComputeLogType,\n  ] = useStateWithStorage(INITIAL_COMPUTE_LOG_TYPE, (value: any) =>\n    typeof value === 'string' ? (value as LogType) : LogType.stdout,\n  );\n\n  const activeItems = React.useMemo(\n    () => new Set([logType === LogType.structured ? logType : LogType.stdout]),\n    [logType],\n  );\n\n  const setComputeLogType = React.useCallback(\n    (logType: LogType) => {\n      setInitialComputeLogType(logType);\n      onSetLogType(logType);\n    },\n    [onSetLogType, setInitialComputeLogType],\n  );\n\n  return (\n    <OptionsContainer>\n      <Box margin={{right: 12}}>\n        <ButtonGroup\n          activeItems={activeItems}\n          buttons={[\n            {id: LogType.structured, icon: 'list', tooltip: 'Structured event logs'},\n            {id: initialComputeLogType, icon: 'wysiwyg', tooltip: 'Raw compute logs'},\n          ]}\n          onClick={(id) => onSetLogType(id)}\n        />\n      </Box>\n      {logType === 'structured' ? (\n        <StructuredLogToolbar\n          counts={counts}\n          filter={filter}\n          onSetFilter={onSetFilter}\n          steps={steps}\n        />\n      ) : (\n        <ComputeLogToolbar\n          steps={steps}\n          metadata={metadata}\n          logType={logType}\n          onSetLogType={setComputeLogType}\n          computeLogFileKey={computeLogFileKey}\n          onSetComputeLogKey={onSetComputeLogKey}\n          computeLogUrl={computeLogUrl}\n        />\n      )}\n    </OptionsContainer>\n  );\n};\n\nconst resolveState = (metadata: IRunMetadataDict, logCapture: ILogCaptureInfo) => {\n  // resolves the state of potentially many steps into a single state so that we can show the\n  // execution dot representing the status of this log capture group (potentially at the process\n  // level)\n  if (\n    logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey]!.state === IStepState.RUNNING)\n  ) {\n    return IStepState.RUNNING;\n  }\n  if (\n    logCapture.stepKeys.some((stepKey) => metadata.steps[stepKey]!.state === IStepState.SKIPPED)\n  ) {\n    return IStepState.SKIPPED;\n  }\n  if (\n    logCapture.stepKeys.every((stepKey) => metadata.steps[stepKey]!.state === IStepState.SUCCEEDED)\n  ) {\n    return IStepState.SUCCEEDED;\n  }\n  return IStepState.FAILED;\n};\n\nconst ComputeLogToolbar = ({\n  steps,\n  metadata,\n  computeLogFileKey,\n  onSetComputeLogKey,\n  logType,\n  onSetLogType,\n  computeLogUrl,\n}: {\n  steps: string[];\n  metadata: IRunMetadataDict;\n  computeLogFileKey?: string;\n  onSetComputeLogKey: (step: string) => void;\n  logType: LogType;\n  onSetLogType: (type: LogType) => void;\n  computeLogUrl: string | null;\n}) => {\n  const logCaptureSteps =\n    metadata.logCaptureSteps || extractLogCaptureStepsFromLegacySteps(Object.keys(metadata.steps));\n  const isValidStepSelection = computeLogFileKey && (logCaptureSteps as any)[computeLogFileKey];\n\n  const fileKeyText = (fileKey?: string) => {\n    if (!fileKey || !(logCaptureSteps as any)[fileKey]) {\n      return null;\n    }\n    const captureInfo = (logCaptureSteps as any)[fileKey];\n    if (captureInfo.stepKeys.length === 1 && fileKey === captureInfo.stepKeys[0]) {\n      return fileKey;\n    }\n    if (captureInfo.pid && captureInfo.stepKeys.length === 1) {\n      return captureInfo.stepKeys[0];\n    }\n    if (captureInfo.pid) {\n      return `pid: ${captureInfo.pid} (${captureInfo.stepKeys.length} steps)`;\n    }\n    return `${fileKey} (${captureInfo.stepKeys.length} steps)`;\n  };\n\n  return (\n    <Box\n      flex={{justifyContent: 'space-between', alignItems: 'center', direction: 'row'}}\n      style={{flex: 1}}\n    >\n      <Group direction=\"row\" spacing={24} alignItems=\"center\">\n        <Select\n          disabled={!steps.length}\n          items={Object.keys(logCaptureSteps)}\n          itemPredicate={(query, item) =>\n            item.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n          }\n          itemRenderer={(item: string, options: {handleClick: any; modifiers: any}) => (\n            <MenuItem\n              key={item}\n              onClick={options.handleClick}\n              text={fileKeyText(item)}\n              active={options.modifiers.active}\n            />\n          )}\n          activeItem={computeLogFileKey}\n          onItemSelect={(fileKey) => {\n            onSetComputeLogKey(fileKey);\n          }}\n        >\n          <Button disabled={!steps.length} rightIcon={<Icon name=\"expand_more\" />}>\n            {fileKeyText(computeLogFileKey) || 'Select a step...'}\n          </Button>\n        </Select>\n        {isValidStepSelection ? (\n          <Tabs selectedTabId={logType} onChange={onSetLogType} size=\"small\">\n            <Tab id={LogType.stdout} title=\"stdout\" />\n            <Tab id={LogType.stderr} title=\"stderr\" />\n          </Tabs>\n        ) : null}\n      </Group>\n      {isValidStepSelection ? (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          {computeLogFileKey && (logCaptureSteps as any)[computeLogFileKey] ? (\n            resolveState(metadata, (logCaptureSteps as any)[computeLogFileKey]) ===\n            IStepState.RUNNING ? (\n              <Spinner purpose=\"body-text\" />\n            ) : (\n              <ExecutionStateDot\n                state={resolveState(metadata, (logCaptureSteps as any)[computeLogFileKey])}\n              />\n            )\n          ) : null}\n          {computeLogUrl ? (\n            <Tooltip\n              placement=\"top-end\"\n              content={\n                computeLogFileKey &&\n                (logCaptureSteps as any)[computeLogFileKey]?.stepKeys.length === 1\n                  ? `Download ${\n                      (logCaptureSteps as any)[computeLogFileKey]?.stepKeys[0]\n                    } compute logs`\n                  : `Download compute logs`\n              }\n            >\n              <DownloadLink aria-label=\"Download link\" href={computeLogUrl} download>\n                <Icon name=\"download_for_offline\" color={Colors.Gray600} />\n              </DownloadLink>\n            </Tooltip>\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DownloadLink = styled.a`\n  border-radius: 4px;\n  display: block;\n  text-decoration: none;\n\n  ${IconWrapper} {\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper} {\n    background-color: ${Colors.Gray800};\n  }\n\n  :active ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport type LogLevelCounts = Record<LogLevel, number>;\n\nconst StructuredLogToolbar = ({\n  filter,\n  counts,\n  onSetFilter,\n  steps,\n}: {\n  filter: LogFilter;\n  counts: LogLevelCounts;\n  onSetFilter: (filter: LogFilter) => void;\n  steps: string[];\n}) => {\n  const [copyIcon, setCopyIcon] = React.useState<IconName>('assignment');\n  const logQueryString = logQueryToString(filter.logQuery);\n  const [queryString, setQueryString] = React.useState<string>(() => logQueryString);\n  const copyToClipboard = useCopyToClipboard();\n\n  // Persist the user's selected log level filters as defaults. We only _set_ the value here,\n  // when the filter select changes -- the default is read from localStorage by\n  // useQueryPersistedLogFilter.\n  const [_, setStoredLogLevels] = useStateWithStorage(EnabledRunLogLevelsKey, validateLogLevels);\n\n  const selectedStep = filter.logQuery.find((v) => v.token === 'step')?.value || null;\n  const filterText = filter.logQuery.reduce((accum, value) => accum + value.value, '');\n\n  // Reset the query string if the filter is updated, allowing external behavior\n  // (e.g. clicking a Gantt step) to set the input.\n  React.useEffect(() => {\n    setQueryString(logQueryString);\n  }, [logQueryString]);\n\n  const onChange = (value: string) => {\n    const tokens = value.split(/\\s+/);\n    const logQuery = tokens.map((item) => {\n      const segments = item.split(':');\n      if (segments.length > 1) {\n        return {token: segments[0], value: segments[1]};\n      }\n      return {value: segments[0]};\n    });\n    onSetFilter({...filter, logQuery: logQuery as LogFilterValue[]});\n    setQueryString(value);\n  };\n\n  const onChangeFilter = React.useCallback(\n    (level: LogLevel, enabled: boolean) => {\n      const allEnabledFilters = new Set(\n        Object.keys(filter.levels).filter((level) => !!filter.levels[level]),\n      );\n\n      // When changing log level filters, update localStorage with the selected levels\n      // so that it persists as the default.\n      enabled ? allEnabledFilters.add(level) : allEnabledFilters.delete(level);\n      setStoredLogLevels(Array.from(allEnabledFilters));\n\n      // Then, update the querystring.\n      onSetFilter({\n        ...filter,\n        levels: {\n          ...filter.levels,\n          [level]: enabled,\n        },\n      });\n    },\n    [filter, onSetFilter, setStoredLogLevels],\n  );\n\n  // Restore the clipboard icon after a delay.\n  React.useEffect(() => {\n    let token: any;\n    if (copyIcon === 'assignment_turned_in') {\n      token = setTimeout(() => {\n        setCopyIcon('assignment');\n      }, 2000);\n    }\n    return () => {\n      token && clearTimeout(token);\n    };\n  }, [copyIcon]);\n\n  const filterOptions = Object.fromEntries(\n    Object.keys(LogLevel).map((level) => {\n      return [\n        level,\n        {\n          label: level.toLowerCase(),\n          count: counts[level as LogLevel],\n          enabled: !!filter.levels[level],\n        },\n      ] as [LogLevel, FilterOption];\n    }),\n  );\n\n  return (\n    <>\n      <LogsFilterInput\n        value={queryString}\n        suggestionProviders={getRunFilterProviders(steps)}\n        onChange={onChange}\n      />\n      {filterText ? (\n        <NonMatchCheckbox\n          checked={filter.hideNonMatches}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onSetFilter({...filter, hideNonMatches: event.currentTarget.checked})\n          }\n          label=\"Hide non-matches\"\n        />\n      ) : null}\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}} margin={{left: 12}}>\n        <LogFilterSelect\n          options={filterOptions as Record<LogLevel, FilterOption>}\n          onSetFilter={onChangeFilter}\n        />\n      </Box>\n      {selectedStep && <OptionsDivider />}\n      <div style={{minWidth: 15, flex: 1}} />\n      <Button\n        icon={<Icon name={copyIcon} />}\n        onClick={() => {\n          copyToClipboard(window.location.href);\n          setCopyIcon('assignment_turned_in');\n        }}\n      >\n        Copy URL\n      </Button>\n    </>\n  );\n};\n\nconst NonMatchCheckbox = styled(Checkbox)`\n  &&& {\n    margin: 0 4px 0 12px;\n  }\n\n  white-space: nowrap;\n`;\n","import {\n  Box,\n  NonIdealState,\n  FirstOrSecondPanelToggle,\n  SplitPanelContainer,\n  ErrorBoundary,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {GanttChart, GanttChartLoadingState, GanttChartMode, QueuedState} from '../gantt/GanttChart';\nimport {toGraphQueryItems} from '../gantt/toGraphQueryItems';\nimport {RunStatus} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useFavicon} from '../hooks/useFavicon';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useSupportsCapturedLogs} from '../instance/useSupportsCapturedLogs';\n\nimport {CapturedOrExternalLogPanel} from './CapturedLogPanel';\nimport {ComputeLogPanel} from './ComputeLogPanel';\nimport {LogFilter, LogsProvider, LogsProviderLogs} from './LogsProvider';\nimport {LogsScrollingTable} from './LogsScrollingTable';\nimport {LogsToolbar, LogType} from './LogsToolbar';\nimport {RunActionButtons} from './RunActionButtons';\nimport {RunContext} from './RunContext';\nimport {ILogCaptureInfo, IRunMetadataDict, RunMetadataProvider} from './RunMetadataProvider';\nimport {RunDagsterRunEventFragment, RunPageFragment} from './types/RunFragments.types';\nimport {useJobReExecution} from './useJobReExecution';\nimport {useQueryPersistedLogFilter} from './useQueryPersistedLogFilter';\n\ninterface RunProps {\n  runId: string;\n  run?: RunPageFragment;\n}\n\nconst runStatusFavicon = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return '/favicon-run-failed.svg';\n    case RunStatus.SUCCESS:\n      return '/favicon-run-success.svg';\n    default:\n      return '/favicon-run-pending.svg';\n  }\n};\n\nexport const Run: React.FC<RunProps> = (props) => {\n  const {run, runId} = props;\n  const [logsFilter, setLogsFilter] = useQueryPersistedLogFilter();\n  const [selectionQuery, setSelectionQuery] = useQueryPersistedState<string>({\n    queryKey: 'selection',\n    defaults: {selection: ''},\n  });\n\n  useFavicon(run ? runStatusFavicon(run.status) : '/favicon.svg');\n  useDocumentTitle(\n    run\n      ? `${!isHiddenAssetGroupJob(run.pipelineName) ? run.pipelineName : ''} ${runId.slice(\n          0,\n          8,\n        )} [${run.status}]`\n      : `Run: ${runId}`,\n  );\n\n  const onShowStateDetails = (stepKey: string, logs: RunDagsterRunEventFragment[]) => {\n    const errorNode = logs.find(\n      (node) => node.__typename === 'ExecutionStepFailureEvent' && node.stepKey === stepKey,\n    );\n\n    if (errorNode) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={errorNode} />,\n      });\n    }\n  };\n\n  const onSetSelectionQuery = (query: string) => {\n    setSelectionQuery(query);\n    setLogsFilter({\n      ...logsFilter,\n      logQuery: query !== '*' ? [{token: 'query', value: query}] : [],\n    });\n  };\n\n  return (\n    <RunContext.Provider value={run}>\n      <LogsProvider key={runId} runId={runId}>\n        {(logs) => (\n          <RunMetadataProvider logs={logs}>\n            {(metadata) => (\n              <RunWithData\n                run={run}\n                runId={runId}\n                logs={logs}\n                logsFilter={logsFilter}\n                metadata={metadata}\n                selectionQuery={selectionQuery}\n                onSetLogsFilter={setLogsFilter}\n                onSetSelectionQuery={onSetSelectionQuery}\n                onShowStateDetails={onShowStateDetails}\n              />\n            )}\n          </RunMetadataProvider>\n        )}\n      </LogsProvider>\n    </RunContext.Provider>\n  );\n};\n\ninterface RunWithDataProps {\n  run?: RunPageFragment;\n  runId: string;\n  selectionQuery: string;\n  logs: LogsProviderLogs;\n  logsFilter: LogFilter;\n  metadata: IRunMetadataDict;\n  onSetLogsFilter: (v: LogFilter) => void;\n  onSetSelectionQuery: (query: string) => void;\n  onShowStateDetails: (stepKey: string, logs: RunDagsterRunEventFragment[]) => void;\n}\n\nconst logTypeFromQuery = (queryLogType: string) => {\n  switch (queryLogType) {\n    case 'stdout':\n      return LogType.stdout;\n    case 'stderr':\n      return LogType.stderr;\n    default:\n      return LogType.structured;\n  }\n};\n\nconst matchingComputeLogKeyFromStepKey = (\n  logCaptureSteps: {[fileKey: string]: ILogCaptureInfo} | undefined,\n  stepKey: string,\n) => {\n  const stepsInfo = logCaptureSteps ? Object.values(logCaptureSteps) : [];\n  const matching = stepsInfo.find((info) => info.stepKeys.includes(stepKey));\n  return matching && matching?.fileKey;\n};\n\n/**\n * Note: There are two places we keep a \"step query string\" in the Run view:\n * selectionQuery and logsFilter.logsQuery.\n *\n * - selectionQuery is set when you click around in the Gannt view and is the\n *   selection used for re-execution, etc. When set, we autofill logsFilter.logsQuery.\n *\n * - logsFilter.logsQuery is used for filtering the logs. It can be cleared separately\n *   from the selectionQuery, so you can select a step but navigate elsewhere in the logs.\n *\n * We could revisit this in the future but I believe we iterated quite a bit to get to this\n * solution and we should avoid locking the two filter inputs together completely.\n */\nconst RunWithData: React.FC<RunWithDataProps> = ({\n  run,\n  runId,\n  logs,\n  logsFilter,\n  metadata,\n  selectionQuery,\n  onSetLogsFilter,\n  onSetSelectionQuery,\n}) => {\n  const onLaunch = useJobReExecution(run);\n  const splitPanelContainer = React.createRef<SplitPanelContainer>();\n  const supportsCapturedLogs = useSupportsCapturedLogs();\n\n  const [queryLogType, setQueryLogType] = useQueryPersistedState<string>({\n    queryKey: 'logType',\n    defaults: {logType: 'structured'},\n  });\n\n  const [computeLogFileKey, setComputeLogFileKey] = useQueryPersistedState<string>({\n    queryKey: 'logFileKey',\n  });\n\n  const logType = logTypeFromQuery(queryLogType);\n  const setLogType = (lt: LogType) => setQueryLogType(LogType[lt]);\n  const [computeLogUrl, setComputeLogUrl] = React.useState<string | null>(null);\n\n  const stepKeysJSON = JSON.stringify(Object.keys(metadata.steps).sort());\n  const stepKeys = React.useMemo(() => JSON.parse(stepKeysJSON), [stepKeysJSON]);\n\n  const runtimeGraph = run?.executionPlan && toGraphQueryItems(run?.executionPlan, metadata.steps);\n\n  const selectionStepKeys = React.useMemo(() => {\n    return runtimeGraph && selectionQuery && selectionQuery !== '*'\n      ? filterByQuery(runtimeGraph, selectionQuery).all.map((n) => n.name)\n      : [];\n  }, [runtimeGraph, selectionQuery]);\n\n  React.useEffect(() => {\n    if (!stepKeys?.length || computeLogFileKey) {\n      return;\n    }\n\n    if (metadata.logCaptureSteps) {\n      const logFileKeys = Object.keys(metadata.logCaptureSteps);\n      const selectedLogKey = logFileKeys.find((logFileKey) => {\n        return selectionStepKeys.every(\n          (stepKey) =>\n            metadata.logCaptureSteps &&\n            metadata.logCaptureSteps[logFileKey]!.stepKeys.includes(stepKey),\n        );\n      });\n      setComputeLogFileKey(selectedLogKey || logFileKeys[0]!);\n    } else if (!stepKeys.includes(computeLogFileKey)) {\n      const matching = matchingComputeLogKeyFromStepKey(\n        metadata.logCaptureSteps,\n        selectionStepKeys.length === 1 ? selectionStepKeys[0] : stepKeys[0],\n      );\n      matching && setComputeLogFileKey(matching);\n    } else if (selectionStepKeys.length === 1 && computeLogFileKey !== selectionStepKeys[0]) {\n      const matching = matchingComputeLogKeyFromStepKey(\n        metadata.logCaptureSteps,\n        selectionStepKeys[0]!,\n      );\n      matching && setComputeLogFileKey(matching);\n    }\n  }, [\n    stepKeys,\n    computeLogFileKey,\n    selectionStepKeys,\n    metadata.logCaptureSteps,\n    setComputeLogFileKey,\n  ]);\n\n  const onSetComputeLogKey = (logFileKey: string) => {\n    setComputeLogFileKey(logFileKey);\n  };\n\n  const logsFilterStepKeys = runtimeGraph\n    ? logsFilter.logQuery\n        .filter((v) => v.token && v.token === 'query')\n        .reduce((accum, v) => {\n          return [...accum, ...filterByQuery(runtimeGraph, v.value).all.map((n) => n.name)];\n        }, [] as string[])\n    : [];\n\n  const onClickStep = (stepKey: string, evt: React.MouseEvent<any>) => {\n    const index = selectionStepKeys.indexOf(stepKey);\n    let newSelected: string[];\n    const filterForExactStep = `\"${stepKey}\"`;\n    if (evt.shiftKey) {\n      // shift-click to multi select steps, preserving quotations if present\n      newSelected = [\n        ...selectionStepKeys.map((k) => (selectionQuery.includes(`\"${k}\"`) ? `\"${k}\"` : k)),\n      ];\n\n      if (index !== -1) {\n        // deselect the step if already selected\n        newSelected.splice(index, 1);\n      } else {\n        // select the step otherwise\n        newSelected.push(filterForExactStep);\n      }\n    } else {\n      if (selectionStepKeys.length === 1 && index !== -1) {\n        // deselect the step if already selected\n        newSelected = [];\n      } else {\n        // select the step otherwise\n        newSelected = [filterForExactStep];\n\n        // When only one step is selected, set the compute log key as well.\n        const matchingLogKey = matchingComputeLogKeyFromStepKey(metadata.logCaptureSteps, stepKey);\n        matchingLogKey && setComputeLogFileKey(matchingLogKey);\n      }\n    }\n\n    onSetSelectionQuery(newSelected.join(', ') || '*');\n  };\n\n  const gantt = (metadata: IRunMetadataDict) => {\n    if (!run) {\n      return <GanttChartLoadingState runId={runId} />;\n    }\n\n    if (run.status === 'QUEUED') {\n      return <QueuedState run={run} />;\n    }\n\n    if (run.executionPlan && runtimeGraph) {\n      return (\n        <ErrorBoundary region=\"gantt chart\">\n          <GanttChart\n            options={{\n              mode: GanttChartMode.WATERFALL_TIMED,\n            }}\n            toolbarActions={\n              <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n                <FirstOrSecondPanelToggle axis=\"vertical\" container={splitPanelContainer} />\n                <RunActionButtons\n                  run={run}\n                  onLaunch={onLaunch}\n                  graph={runtimeGraph}\n                  metadata={metadata}\n                  selection={{query: selectionQuery, keys: selectionStepKeys}}\n                />\n              </Box>\n            }\n            runId={runId}\n            graph={runtimeGraph}\n            metadata={metadata}\n            selection={{query: selectionQuery, keys: selectionStepKeys}}\n            onClickStep={onClickStep}\n            onSetSelection={onSetSelectionQuery}\n            focusedTime={logsFilter.focusedTime}\n          />\n        </ErrorBoundary>\n      );\n    }\n\n    return <NonIdealState icon=\"error\" title=\"Unable to build execution plan\" />;\n  };\n\n  const logCaptureInfo: ILogCaptureInfo | undefined =\n    metadata.logCaptureSteps && computeLogFileKey in metadata.logCaptureSteps\n      ? metadata.logCaptureSteps[computeLogFileKey]\n      : undefined;\n\n  return (\n    <>\n      <SplitPanelContainer\n        ref={splitPanelContainer}\n        axis=\"vertical\"\n        identifier=\"run-gantt\"\n        firstInitialPercent={35}\n        firstMinSize={56}\n        first={gantt(metadata)}\n        second={\n          <ErrorBoundary region=\"logs\">\n            <LogsContainer>\n              <LogsToolbar\n                logType={logType}\n                onSetLogType={setLogType}\n                filter={logsFilter}\n                onSetFilter={onSetLogsFilter}\n                steps={stepKeys}\n                metadata={metadata}\n                computeLogFileKey={computeLogFileKey}\n                onSetComputeLogKey={onSetComputeLogKey}\n                computeLogUrl={computeLogUrl}\n                counts={logs.counts}\n              />\n              {logType !== LogType.structured ? (\n                supportsCapturedLogs ? (\n                  <CapturedOrExternalLogPanel\n                    logKey={computeLogFileKey ? [runId, 'compute_logs', computeLogFileKey] : []}\n                    logCaptureInfo={logCaptureInfo}\n                    visibleIOType={LogType[logType]}\n                    onSetDownloadUrl={setComputeLogUrl}\n                  />\n                ) : (\n                  <ComputeLogPanel\n                    runId={runId}\n                    stepKeys={stepKeys}\n                    computeLogFileKey={computeLogFileKey}\n                    ioType={LogType[logType]}\n                    setComputeLogUrl={setComputeLogUrl}\n                  />\n                )\n              ) : (\n                <LogsScrollingTable\n                  logs={logs}\n                  filter={logsFilter}\n                  filterStepKeys={logsFilterStepKeys}\n                  filterKey={`${JSON.stringify(logsFilter)}`}\n                  metadata={metadata}\n                />\n              )}\n            </LogsContainer>\n          </ErrorBoundary>\n        }\n      />\n    </>\n  );\n};\n\nconst LogsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n","import * as React from 'react';\n\nexport const useFavicon = (href: string) => {\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"][type=\"image/svg+xml\"]');\n    if (!el) {\n      return;\n    }\n    const previousHref = el.getAttribute('href');\n    el.setAttribute('href', href);\n    return () => {\n      if (previousHref) {\n        el.setAttribute('href', previousHref);\n      }\n    };\n  }, [href]);\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, NonIdealState, PageHeader, Popover, Tag, Heading, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {useTrackPageView} from '../app/analytics';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\n\nimport {AssetKeyTagCollection} from './AssetKeyTagCollection';\nimport {Run} from './Run';\nimport {RunConfigDialog, RunDetails} from './RunDetails';\nimport {RUN_PAGE_FRAGMENT} from './RunFragments';\nimport {RunStatusTag} from './RunStatusTag';\nimport {assetKeysForRun} from './RunUtils';\nimport {RunRootQuery, RunRootQueryVariables} from './types/RunRoot.types';\n\nexport const RunRoot = () => {\n  useTrackPageView();\n\n  const {runId} = useParams<{runId: string}>();\n  useDocumentTitle(runId ? `Run ${runId.slice(0, 8)}` : 'Run');\n\n  const {data, loading} = useQuery<RunRootQuery, RunRootQueryVariables>(RUN_ROOT_QUERY, {\n    variables: {runId},\n  });\n\n  const run = data?.pipelineRunOrError.__typename === 'Run' ? data.pipelineRunOrError : null;\n  const snapshotID = run?.pipelineSnapshotId;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(run);\n  const repoAddress = repoMatch?.match\n    ? buildRepoAddress(repoMatch.match.repository.name, repoMatch.match.repositoryLocation.name)\n    : null;\n\n  const isJob = React.useMemo(\n    () => !!(run && repoMatch && isThisThingAJob(repoMatch.match, run.pipelineName)),\n    [run, repoMatch],\n  );\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Box\n        flex={{direction: 'row', alignItems: 'flex-start'}}\n        style={{\n          position: 'relative',\n          zIndex: 1,\n        }}\n      >\n        <PageHeader\n          title={\n            <Heading style={{fontFamily: FontFamily.monospace, fontSize: '20px'}}>\n              {runId.slice(0, 8)}\n            </Heading>\n          }\n          tags={\n            run ? (\n              <>\n                <RunStatusTag status={run.status} />\n                {isHiddenAssetGroupJob(run.pipelineName) ? (\n                  <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} useTags />\n                ) : (\n                  <>\n                    <Tag icon=\"run\">\n                      Run of{' '}\n                      <PipelineReference\n                        pipelineName={run?.pipelineName}\n                        pipelineHrefContext={repoAddress || 'repo-unknown'}\n                        snapshotId={snapshotID}\n                        size=\"small\"\n                        isJob={isJob}\n                      />\n                    </Tag>\n                    <AssetKeyTagCollection assetKeys={run.assets.map((a) => a.key)} useTags />\n                  </>\n                )}\n                <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n                  {run?.startTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"schedule\">\n                        <TimestampDisplay\n                          timestamp={run.startTime}\n                          timeFormat={{showSeconds: true, showTimezone: false}}\n                        />\n                      </Tag>\n                    </Popover>\n                  ) : run.updateTime ? (\n                    <Tag icon=\"schedule\">\n                      <TimestampDisplay\n                        timestamp={run.updateTime}\n                        timeFormat={{showSeconds: true, showTimezone: false}}\n                      />\n                    </Tag>\n                  ) : undefined}\n                  {run?.startTime && run?.endTime ? (\n                    <Popover\n                      interactionKind=\"hover\"\n                      placement=\"bottom\"\n                      content={\n                        <Box padding={16}>\n                          <RunDetails run={run} loading={loading} />\n                        </Box>\n                      }\n                    >\n                      <Tag icon=\"timer\">\n                        <span style={{fontVariantNumeric: 'tabular-nums'}}>\n                          {run?.startTime\n                            ? formatElapsedTime(\n                                (run?.endTime * 1000 || Date.now()) - run?.startTime * 1000,\n                              )\n                            : '–'}\n                        </span>\n                      </Tag>\n                    </Popover>\n                  ) : null}\n                </Box>\n              </>\n            ) : null\n          }\n          right={run ? <RunConfigDialog run={run} isJob={isJob} /> : null}\n        />\n      </Box>\n      <RunById data={data} runId={runId} />\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default RunRoot;\n\nconst RunById: React.FC<{data: RunRootQuery | undefined; runId: string}> = (props) => {\n  const {data, runId} = props;\n\n  if (!data || !data.pipelineRunOrError) {\n    return <Run run={undefined} runId={runId} />;\n  }\n\n  if (data.pipelineRunOrError.__typename !== 'Run') {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No run found\"\n          description=\"The run with this ID does not exist or has been cleaned up.\"\n        />\n      </Box>\n    );\n  }\n\n  return <Run run={data.pipelineRunOrError} runId={runId} />;\n};\n\nconst RUN_ROOT_QUERY = gql`\n  query RunRootQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        ...RunPageFragment\n      }\n    }\n  }\n\n  ${RUN_PAGE_FRAGMENT}\n`;\n","const compactFormatter = new Intl.NumberFormat(navigator.language, {\n  compactDisplay: 'short',\n  notation: 'compact',\n});\n\nexport const numberFormatter = new Intl.NumberFormat(navigator.language, {});\n\nexport const compactNumber = (num: number | bigint): string => compactFormatter.format(num);\n"],"names":["INSTANCE_SUPPORTS_CAPTURED_LOGS","gql","_templateObject","_taggedTemplateLiteral","RawLogContent","React","_ref","logData","location","isLoading","isVisible","downloadUrl","contentContainer","timer","_React$useState","_React$useState2","_slicedToArray","showScrollToTop","setShowScrollToTop","cancelHideWarning","current","clearTimeout","hideWarning","scheduleHideWarning","window","setTimeout","content","isTruncated","shouldTruncate","nextLine","indexOf","truncated","length","slice","warning","_jsx","FileWarning","children","_jsxs","Group","direction","spacing","alignItems","Icon","name","color","Colors","href","download","_Fragment","FileContainer","ScrollToast","ScrollToTop","onClick","scrollToTop","onMouseOver","onMouseOut","FileContent","RelativeContainer","LogContent","isSelected","onScrollUp","position","onScrollDown","ref","LoadingContainer","Spinner","purpose","FileFooter","TextEncoder","encode","ScrollContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","container","lastScroll","onScroll","props","_this$props","_this$container$curre","scrollHeight","scrollTop","offsetHeight","_createClass","key","value","this","scrollToBottom","focus","addEventListener","_this$container$curre2","_props","_state","shouldScroll","node","_this$props2","className","style","outline","tabIndex","ContentContainer","LineNumbers","Content","SolarizedColors","Ansi","linkify","useClasses","justifyContent","matches","match","count","LineNumberContainer","from","_","i","String","styled","displayName","componentId","createGlobalStyle","_ref2","_ref3","withConfig","FontFamily","CapturedOrExternalLogPanel","logCaptureInfo","_objectWithoutProperties","_excluded","externalUrl","visibleIOType","externalStdoutUrl","externalStderrUrl","Box","flex","gap","background","minHeight","target","rel","textDecoration","marginLeft","marginRight","size","marginTop","logKey","CapturedLogPanel","_objectSpread","MAX_STREAMING_LOG_BYTES","s","merge","a","b","reducer","state","action","_action$logData","_action$logData2","_action$logData3","type","cursor","stdout","stderr","metadata","initialState","CapturedLogSubscription","onLogData","useSubscription","CAPTURED_LOGS_SUBSCRIPTION","fetchPolicy","variables","onSubscriptionData","_subscriptionData$dat","subscriptionData","data","capturedLogs","CAPTURED_LOGS_METADATA_QUERY","_templateObject2","CapturedLogsSubscriptionProvider","_ref4","_React$useReducer","_React$useReducer2","dispatch","logKeyString","JSON","stringify","CapturedLogsQueryProvider","_ref5","_React$useReducer3","_React$useReducer4","_useQuery","useQuery","CAPTURED_LOGS_QUERY","notifyOnNetworkStatusChange","limit","pollInterval","onCompleted","stopPolling","startPolling","_templateObject3","_ref6","_queryResult$data","_queryResult$data2","onSetDownloadUrl","rootServerURI","AppContext","_React$useContext2","WebSocketContext","availability","disabled","queryResult","visibleDownloadUrl","capturedLogsMetadata","stdoutDownloadUrl","stderrDownloadUrl","startsWith","stdoutLocation","undefined","stderrLocation","Component","display","flexDirection","__typename","path","stepKey","log","COMPUTE_LOGS_SUBSCRIPTION","ComputeLogPanel","runId","stepKeys","computeLogFileKey","ioType","setComputeLogUrl","ComputeLogsPanelWithKey","height","resolveDownloadUrl","x","_useComputeLogs","ComputeIoType","computeLogs","_subscriptionData$dat2","useComputeLogs","ContentWrapper","emptyCounts","DEBUG","INFO","WARNING","ERROR","CRITICAL","EVENT","queuedNodes","queued","map","ii","clientsideKey","timestamp","nodes","_toConsumableArray","counts","forEach","level","logNodeLevel","loading","hasMore","useLogsProviderWithSubscription","client","useApolloClient","queue","syncPipelineStatusToApolloCache","status","local","readFragment","fragmentName","fragment","PIPELINE_RUN_LOGS_SUBSCRIPTION_STATUS_FRAGMENT","id","toWrite","canTerminate","RunStatus","writeFragment","throttledSetNodes","throttle","queuedLogs","queuedMessages","flatMap","messages","lastLog","hasMorePastEvents","nextPipelineStatus","_step","reversed","reverse","_iterator","_createForOfIteratorHelper","n","done","err","e","f","pipelineStatusFromMessages","_React$useContext","lostWebsocket","WebSocket","CLOSED","currentInitialCursorRef","currentInitialCursor","subscriptionComponent","SubscriptionComponent","logs","pipelineRunLogs","push","requestAnimationFrame","allNodes","PIPELINE_RUN_LOGS_SUBSCRIPTION","LogsProviderWithSubscription","LogsProviderWithQuery","RUN_LOGS_QUERY","pipelineRunOrError","logsForRun","run","events","LogsProvider","RUN_DAGSTER_RUN_EVENT_FRAGMENT","ExecutionStateDot","_IStepState$RUNNING$I","_defineProperty","IStepState","_IStepState$RUNNING$I2","LogFilterSelect","options","onSetFilter","showMenu","setShowMenu","levels","Object","keys","enabledCount","values","reduce","accum","enabled","onChange","checked","Popover","isOpen","placement","canEscapeKeyClose","onInteraction","nextOpenState","Menu","width","optionForLevel","label","MenuItem","tagName","shouldDismissPopover","text","MenuCheckbox","compactNumber","FilterButton","icon","rightIcon","Button","Checkbox","shown","highlight","fuseOptions","threshold","LogsFilterInput","suggestionProviders","inputRef","_React$useMemo","perProvider","provider","token","fuse","Fuse","all","providerKeys","filter","empty","buildSuggestions","queryString","_queryString$split","split","_queryString$split2","results","search","result","item","toLowerCase","includes","_useSuggestionsForStr","tokens","toLocaleLowerCase","trim","suggestions","onSelectSuggestion","suggestion","lastIndex","lastIndexOf","keep","useSuggestionsForString","numResults","highlightedResult","onInputChange","onSelect","onClear","_inputRef$current","Results","ResultItem","isHighlight","FilterInput","placeholder","spellCheck","autoCorrect","onFocus","onBlur","onKeyDown","lastResult","preventDefault","rightElement","ClearButton","element","scrollIntoView","block","Item","onMouseDown","TextInput","DELIMITER","levelsToQuery","sort","join","DefaultQuerystring","steps","DefaultLogLevels","hideNonMatches","focusedTime","decodeRunPageFilters","qs","logsQuery","focusedTimeQuery","hideNonMatchesQuery","levelsQuery","logValues","Number","providers","getRunFilterProviders","sinceTime","logQuery","tokenizedValueFromString","toUpperCase","LogLevel","encodeRunPageFilters","logQueryTokenStrings","v","EnabledRunLogLevelsKey","validateLogLevels","json","isArray","validLevels","Set","has","LogType","LogsToolbar","logType","onSetLogType","onSetComputeLogKey","computeLogUrl","_useStateWithStorage","useStateWithStorage","_useStateWithStorage2","initialComputeLogType","setInitialComputeLogType","activeItems","structured","setComputeLogType","OptionsContainer","margin","right","ButtonGroup","buttons","tooltip","StructuredLogToolbar","ComputeLogToolbar","resolveState","logCapture","some","every","_computeLogFileKey","_computeLogFileKey2","logCaptureSteps","extractLogCaptureStepsFromLegacySteps","isValidStepSelection","fileKeyText","fileKey","captureInfo","pid","Select","items","itemPredicate","query","itemRenderer","handleClick","active","modifiers","activeItem","onItemSelect","Tabs","selectedTabId","Tab","title","Tooltip","DownloadLink","IconWrapper","_filter$logQuery$find","copyIcon","setCopyIcon","logQueryString","_React$useState3","_React$useState4","setQueryString","copyToClipboard","useCopyToClipboard","_useStateWithStorage3","_useStateWithStorage4","setStoredLogLevels","selectedStep","find","filterText","onChangeFilter","allEnabledFilters","add","delete","filterOptions","fromEntries","segments","NonMatchCheckbox","event","currentTarget","left","OptionsDivider","minWidth","Run","_useQueryPersistedLog","storedLogLevels","defaults","useQueryPersistedState","decode","useQueryPersistedLogFilter","_useQueryPersistedLog2","logsFilter","setLogsFilter","_useQueryPersistedSta","queryKey","selection","_useQueryPersistedSta2","selectionQuery","setSelectionQuery","runStatusFavicon","el","document","querySelector","previousHref","getAttribute","setAttribute","useDocumentTitle","isHiddenAssetGroupJob","pipelineName","onShowStateDetails","errorNode","showCustomAlert","body","PythonErrorInfo","error","onSetSelectionQuery","RunContext","RunMetadataProvider","RunWithData","onSetLogsFilter","matchingComputeLogKeyFromStepKey","matching","info","onLaunch","useJobReExecution","splitPanelContainer","supportsCapturedLogs","instance","hasCapturedLogManager","useSupportsCapturedLogs","_useQueryPersistedSta3","_useQueryPersistedSta4","queryLogType","setQueryLogType","_useQueryPersistedSta5","_useQueryPersistedSta6","setComputeLogFileKey","logTypeFromQuery","stepKeysJSON","parse","runtimeGraph","executionPlan","toGraphQueryItems","selectionStepKeys","filterByQuery","logFileKeys","selectedLogKey","logFileKey","logsFilterStepKeys","onClickStep","evt","newSelected","index","filterForExactStep","shiftKey","k","splice","matchingLogKey","SplitPanelContainer","axis","identifier","firstInitialPercent","firstMinSize","first","QueuedState","ErrorBoundary","region","GanttChart","mode","GanttChartMode","toolbarActions","FirstOrSecondPanelToggle","RunActionButtons","graph","onSetSelection","NonIdealState","GanttChartLoadingState","gantt","second","LogsContainer","lt","LogsScrollingTable","filterStepKeys","filterKey","RunRoot","useTrackPageView","useParams","RUN_ROOT_QUERY","snapshotID","pipelineSnapshotId","repoMatch","useRepositoryForRunWithParentSnapshot","repoAddress","buildRepoAddress","repository","repositoryLocation","isJob","isThisThingAJob","overflow","zIndex","PageHeader","Heading","fontFamily","fontSize","tags","RunStatusTag","AssetKeyTagCollection","assetKeys","assetKeysForRun","useTags","Tag","PipelineReference","pipelineHrefContext","snapshotId","assets","wrap","startTime","interactionKind","padding","RunDetails","TimestampDisplay","timeFormat","showSeconds","showTimezone","updateTime","endTime","fontVariantNumeric","formatElapsedTime","Date","now","RunConfigDialog","RunById","vertical","description","RUN_PAGE_FRAGMENT","compactFormatter","Intl","NumberFormat","navigator","language","compactDisplay","notation","numberFormatter","num","format"],"sourceRoot":""}