{"version":3,"file":"static/js/723.a083ec8c.chunk.js","mappings":"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","sources":["../../core/src/hooks/useQueryPersistedState.tsx","../../core/src/hooks/useSetStateUpdateCallback.tsx","../../core/src/hooks/useUpdatingRef.tsx","../../core/src/pipelines/PipelineReference.tsx","../../core/src/runs/RunStatuses.tsx","../../core/src/ui/Filters/useSuggestionFilter.tsx","../../core/src/ui/Filters/useTimeRangeFilter.tsx","../../core/src/runs/RunsFilterInput.tsx","../../core/src/ui/Filters/FilterDropdown.tsx","../../core/src/ui/Filters/useFilters.tsx","../../core/src/ui/Filters/useFilter.tsx","../../core/src/ui/Filters/useStaticSetFilter.tsx","../../ui/src/components/NonIdealState.tsx","../../ui/src/components/TokenizingField.tsx"],"sourcesContent":["import isEqual from 'lodash/isEqual';\nimport qs from 'qs';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\n\ntype QueryPersistedDataType =\n  | {[key: string]: any}\n  | Array<any>\n  | (string | undefined | number)\n  | (boolean | undefined)\n  | null;\n\nlet currentQueryString: {[key: string]: any} = {};\n\nexport type QueryPersistedStateConfig<T extends QueryPersistedDataType> = {\n  queryKey?: string;\n  defaults?: {[key: string]: any};\n  decode?: (raw: {[key: string]: any}) => T;\n  encode?: (raw: T) => {[key: string]: any};\n};\n\n/**\n * This goal of this hook is to make it easy to replace `React.useState` with a version\n * that persists the value to the page querystring so it is saved across page reload, etc.\n * Hopefully by making it easy, we'll do this often and improve overall UX.\n *\n * Examples:\n *\n * // Single (string | undefined) key saved to querystring with default value applied inline\n *\n * const [search = '', setSearch] = useQueryPersistedState({queryKey: 'q'})\n *\n * // Object saved to querystring with default values pre-filled\n * // Note: String and boolean values are automatically encoded / decoded, see below for others\n *\n * const [query, setQuery] = useQueryPersistedState<{cursor: string, filter: string}>({\n *   defaults: {cursor: '', filter: ''},\n * })\n *\n * // Custom transformer mapping to / from querystring representation (for our filter tokens)\n * // Note: `setIdeas` will be a different function on every render unless you memoize the options\n * // passed to the hook! Pull the encode/decode functions out into a file constant or use React.useRef\n *\n * const [ideas, setIdeas] = useQueryPersistedState<string[]>({\n *   encode: (ideas) => ({q: ideas.join(',')}),\n *   decode: ({q}) => (q || '').split(','),\n * })\n *\n * Note: if you combine encode/decode with defaults, the defaults are applied to the query\n * string BEFORE decoding.\n */\nexport function useQueryPersistedState<T extends QueryPersistedDataType>(\n  options: QueryPersistedStateConfig<T>,\n): [T, (updates: T) => void] {\n  const {queryKey, defaults} = options;\n  let {encode, decode} = options;\n\n  if (queryKey) {\n    // Just a short-hand way of providing encode/decode that go from qs object => string\n    if (!encode) {\n      encode = (raw: T) => ({[queryKey]: raw});\n    }\n    if (!decode) {\n      decode = (qs: {[key: string]: any}) => inferTypeOfQueryParam<T>(qs[queryKey]);\n    }\n  }\n\n  const location = useLocation();\n  const history = useHistory();\n\n  // Note: If you have provided defaults and no encoder/decoder, the `value` exposed by\n  // useQueryPersistedState only includes those keys so other params don't leak into your value.\n  const qsDecoded = React.useMemo(() => {\n    // We stash the query string into a ref so that the setter can operate on the /current/\n    // location even if the user retains it and calls it after other query string changes.\n    currentQueryString = qs.parse(location.search, {ignoreQueryPrefix: true});\n\n    const qsWithDefaults = {...(defaults || {}), ...currentQueryString};\n    return decode ? decode(qsWithDefaults) : inferTypeOfQueryParams<T>(qsWithDefaults);\n  }, [location.search, decode, defaults]);\n\n  // If `decode` yields a non-primitive type (eg: object or array), by default we yield\n  // an object with a new identity on every render. To prevent possible render loops caused by\n  // our value as a useEffect dependency, etc., we re-use the last yielded object if it isEqual.\n  const valueRef = React.useRef<T>(qsDecoded);\n  const onChangeRef = React.useCallback<(updated: T) => void>(\n    (updated: T) => {\n      const next = {\n        ...currentQueryString,\n        ...(encode ? encode(updated) : (updated as {[key: string]: any})),\n      };\n\n      // omit any keys that are equal to the defaults to keep URLs minimal\n      for (const [key, value] of Object.entries(next)) {\n        if (options.defaults && options.defaults[key] === value) {\n          delete next[key];\n        }\n      }\n\n      currentQueryString = next;\n\n      history.replace(`${location.pathname}?${qs.stringify(next, {arrayFormat: 'brackets'})}`);\n    },\n    [history, encode, location.pathname, options],\n  );\n\n  if (!isEqual(valueRef.current, qsDecoded)) {\n    valueRef.current = qsDecoded;\n  }\n  return [valueRef.current, onChangeRef];\n}\n\nfunction inferTypeOfQueryParam<T>(q: any): T {\n  return q === 'false' ? false : q === 'true' ? true : q;\n}\n\nfunction inferTypeOfQueryParams<T>(qs: {[key: string]: any}) {\n  const result: {[key: string]: any} = {};\n  for (const key of Object.keys(qs)) {\n    result[key] = inferTypeOfQueryParam<any>(qs[key]);\n  }\n  return result as T;\n}\n","import React from 'react';\n\n/**\n * Allows you to easily support updating state based on previous state.\n *\n * usage:\n * function useMyCustomStateHook() {\n *   const [state, setState] = useState(initialState);\n *   const update = (nextState: T) => {\n *     setState(doSomeFancyCalculation(nextState));\n *   };\n *   return [state, useSetStateUpdateCallback(state, update)];\n * }\n */\nexport function useSetStateUpdateCallback<T>(\n  currentState: T,\n  updateCallback: (next: T) => void,\n): (next: React.SetStateAction<T>) => void {\n  const stateRef = React.useRef<T>(currentState);\n  stateRef.current = currentState;\n\n  const updateCallbackRef = React.useRef(updateCallback);\n  updateCallbackRef.current = updateCallback;\n\n  const update = React.useCallback((next: React.SetStateAction<T>) => {\n    if (next instanceof Function) {\n      stateRef.current = next(stateRef.current);\n    } else {\n      stateRef.current = next;\n    }\n    updateCallbackRef.current(stateRef.current);\n  }, []);\n\n  return update;\n}\n","import React from 'react';\n\nexport const useUpdatingRef = <T,>(value: T): React.MutableRefObject<T> => {\n  const ref = React.useRef(value);\n  ref.current = value;\n  return ref;\n};\n","import {Box, Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {PipelineSnapshotLink} from './PipelinePathUtils';\n\nexport interface Props {\n  pipelineName: string;\n  pipelineHrefContext: 'repo-unknown' | RepoAddress | 'no-link';\n  isJob: boolean;\n  snapshotId?: string | null;\n  showIcon?: boolean;\n  truncationThreshold?: number;\n  size?: 'small' | 'normal';\n}\n\nconst DEFAULT_TRUNCATION_THRESHOLD = 40;\nconst TRUNCATION_BUFFER = 5;\n\nexport const PipelineReference: React.FC<Props> = ({\n  pipelineName,\n  pipelineHrefContext,\n  isJob,\n  snapshotId,\n  showIcon,\n  truncationThreshold = DEFAULT_TRUNCATION_THRESHOLD,\n  size = 'normal',\n}) => {\n  const truncatedName =\n    truncationThreshold > 0 && pipelineName.length > truncationThreshold\n      ? `${pipelineName.slice(0, truncationThreshold - TRUNCATION_BUFFER)}…`\n      : pipelineName;\n\n  const pipeline =\n    pipelineHrefContext === 'repo-unknown' ? (\n      <Link to={workspacePipelinePathGuessRepo(pipelineName, isJob)}>{truncatedName}</Link>\n    ) : pipelineHrefContext === 'no-link' ? (\n      <>{truncatedName}</>\n    ) : (\n      <Link\n        to={workspacePipelinePath({\n          repoName: pipelineHrefContext.name,\n          repoLocation: pipelineHrefContext.location,\n          pipelineName,\n          isJob,\n        })}\n      >\n        {truncatedName}\n      </Link>\n    );\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', display: 'inline-flex'}}>\n      {showIcon && (\n        <Box margin={{right: 8}}>\n          <Icon color={Colors.Gray400} name=\"job\" />\n        </Box>\n      )}\n      <span>\n        {pipeline}\n        {snapshotId && ' @ '}\n        {snapshotId && (\n          <PipelineSnapshotLink snapshotId={snapshotId} pipelineName={pipelineName} size={size} />\n        )}\n      </span>\n    </Box>\n  );\n};\n","import {RunStatus} from '../graphql/types';\n\nexport const queuedStatuses = new Set([RunStatus.QUEUED]);\n\nexport const inProgressStatuses = new Set([\n  RunStatus.STARTED,\n  RunStatus.STARTING,\n  RunStatus.CANCELING,\n]);\n\nexport const successStatuses = new Set([RunStatus.SUCCESS]);\nexport const failedStatuses = new Set([RunStatus.FAILURE, RunStatus.CANCELED]);\n\nexport const doneStatuses = new Set([RunStatus.FAILURE, RunStatus.SUCCESS, RunStatus.CANCELED]);\n\nexport const cancelableStatuses = new Set([RunStatus.QUEUED, RunStatus.STARTED]);\n","import {Box, IconName} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {useUpdatingRef} from '../../hooks/useUpdatingRef';\n\nimport {FilterObject} from './useFilter';\nimport {SetFilterActiveState} from './useStaticSetFilter';\n\nexport type SuggestionFilterSuggestion<TValue> = {final?: boolean; value: TValue};\n\ntype Args<TValue> = {\n  name: string;\n  icon: IconName;\n\n  // Allows creating a custom search result from the query\n  freeformSearchResult?: (\n    query: string,\n    suggestionPath: TValue[],\n  ) => SuggestionFilterSuggestion<TValue>;\n\n  state: TValue[]; // Active suggestions\n  setState: (state: TValue[]) => void;\n  initialSuggestions: SuggestionFilterSuggestion<TValue>[];\n\n  onSuggestionClicked: (value: TValue) => Promise<SuggestionFilterSuggestion<TValue>[]> | void;\n  getStringValue: (value: TValue) => string;\n  getKey: (value: TValue) => string;\n  renderLabel: ({value, isActive}: {value: TValue; isActive: boolean}) => JSX.Element;\n  renderActiveStateLabel?: ({value, isActive}: {value: TValue; isActive: boolean}) => JSX.Element;\n  isMatch: (value: TValue, query: string) => boolean;\n  // Whether this is an OR or an AND of these filters. This will affect the wording \"any of\" vs \"all of\"\"\n  matchType?: 'any-of' | 'all-of';\n};\n\nexport type SuggestionFilter<TValue> = FilterObject<SuggestionFilterSuggestion<TValue>> & {\n  state: TValue[];\n};\n\nexport function useSuggestionFilter<TValue>({\n  name,\n  icon,\n  freeformSearchResult,\n  state,\n  setState,\n  initialSuggestions,\n  onSuggestionClicked,\n  getStringValue,\n  getKey,\n  renderLabel,\n  renderActiveStateLabel,\n  isMatch,\n  matchType = 'any-of',\n}: Args<TValue>): SuggestionFilter<TValue> {\n  const [nextSuggestionsLoading, setNextSuggestionsLoading] = React.useState(false);\n  const [nextSuggestions, setNextSuggestions] = React.useState<\n    SuggestionFilterSuggestion<TValue>[] | null\n  >(null);\n  const nextSuggestionsRef = useUpdatingRef(nextSuggestions);\n  const nextSuggestionsLoadingRef = useUpdatingRef(nextSuggestionsLoading);\n  const [suggestionPath, setSuggestionPath] = React.useState<TValue[]>([]);\n\n  const filterObj: SuggestionFilter<TValue> = React.useMemo(\n    () => ({\n      name,\n      icon,\n      state,\n      isActive: state.length > 0,\n      onUnselected: () => {\n        setNextSuggestions(null);\n        setNextSuggestionsLoading(false);\n        setSuggestionPath([]);\n      },\n      isLoadingFilters: nextSuggestionsLoading,\n      getResults: (query: string) => {\n        let results;\n        let hasExactMatch = false;\n        if (nextSuggestionsRef.current || nextSuggestionsLoadingRef.current) {\n          results =\n            nextSuggestionsRef.current\n              ?.filter(({value}) => {\n                if (getStringValue(value) === query) {\n                  hasExactMatch = true;\n                }\n                return query === '' || isMatch(value, query);\n              })\n              .map((value, index) => ({\n                label: (\n                  <SuggestionFilterLabel\n                    value={value.value}\n                    renderLabel={renderLabel}\n                    filter={filterObjRef.current}\n                  />\n                ),\n                key: getKey?.(value.value) || index.toString(),\n                value,\n              })) || [];\n        } else {\n          results = initialSuggestions\n            .filter(({value}) => {\n              if (getStringValue(value) === query) {\n                hasExactMatch = true;\n              }\n              return query === '' || isMatch(value, query);\n            })\n            .map((value, index) => ({\n              label: (\n                <SuggestionFilterLabel\n                  value={value.value}\n                  renderLabel={renderLabel}\n                  filter={filterObjRef.current}\n                />\n              ),\n              key: getKey?.(value.value) || index.toString(),\n              value,\n            }));\n        }\n        if (!hasExactMatch && freeformSearchResult && query.length) {\n          const suggestion = freeformSearchResult(query, suggestionPath);\n          results.unshift({\n            label: (\n              <SuggestionFilterLabel\n                value={suggestion.value}\n                renderLabel={renderLabel}\n                filter={filterObjRef.current}\n              />\n            ),\n            key: getKey?.(suggestion.value) || 'freeform',\n            value: suggestion,\n          });\n        }\n        return results;\n      },\n\n      onSelect: async ({value, clearSearch}) => {\n        if (value.final) {\n          if (state.includes(value.value)) {\n            setState(state.filter((v) => v !== value.value));\n          } else {\n            setState([...state, value.value]);\n          }\n        } else {\n          clearSearch();\n          const result = onSuggestionClicked(value.value);\n          setSuggestionPath((path) => [...path, value.value]);\n          if (result) {\n            setNextSuggestionsLoading(true);\n            const nextSuggestions = await result;\n            setNextSuggestions(nextSuggestions);\n            setNextSuggestionsLoading(false);\n          }\n        }\n      },\n\n      activeJSX: (\n        <SetFilterActiveState\n          name={name}\n          state={new Set(state)}\n          getStringValue={getStringValue}\n          renderLabel={renderActiveStateLabel || renderLabel}\n          onRemove={() => {\n            setState([]);\n          }}\n          icon={icon}\n          matchType={matchType}\n        />\n      ),\n    }),\n    // Missing filterObjRef because it's a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      name,\n      icon,\n      state,\n      nextSuggestionsLoading,\n      getStringValue,\n      renderActiveStateLabel,\n      renderLabel,\n      matchType,\n      nextSuggestionsRef,\n      nextSuggestionsLoadingRef,\n      initialSuggestions,\n      freeformSearchResult,\n      isMatch,\n      getKey,\n      suggestionPath,\n      setState,\n      onSuggestionClicked,\n    ],\n  );\n  const filterObjRef = useUpdatingRef(filterObj);\n  return filterObj;\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\ntype SuggestionFilterLabelProps = {\n  value: any;\n  filter: SuggestionFilter<any>;\n  renderLabel: (value: any) => JSX.Element;\n};\nfunction SuggestionFilterLabel(props: SuggestionFilterLabelProps) {\n  const {value, filter, renderLabel} = props;\n  const isActive = filter.state.includes(value);\n\n  const labelRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    // 4 px of margin to compensate for weird Checkbox CSS whose bounding box is smaller than the actual\n    // SVG it contains with size=\"small\"\n    <Box\n      flex={{direction: 'row', gap: 6, alignItems: 'center'}}\n      ref={labelRef}\n      margin={{left: 4}}\n      style={{maxWidth: '500px', overflow: 'hidden'}}\n    >\n      <div style={{overflow: 'hidden'}}>{renderLabel({value, isActive})}</div>\n    </Box>\n  );\n}\n","import {IconName, Box, Icon, Colors, Dialog, Button, DialogFooter} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\n// eslint-disable-next-line no-restricted-imports\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport {DateRangePicker} from 'react-dates';\nimport styled from 'styled-components/macro';\n\nimport {useUpdatingRef} from '../../hooks/useUpdatingRef';\n\nimport {FilterObject, FilterTag, FilterTagHighlightedText} from './useFilter';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nexport type TimeRangeState = [number | null, number | null];\n\nexport function calculateTimeRanges(timezone: string) {\n  const obj = {\n    TODAY: {\n      label: 'Today',\n      range: [moment().tz(timezone).startOf('day').toDate().valueOf(), null] as TimeRangeState,\n    },\n    YESTERDAY: {\n      label: 'Yesterday',\n      range: [\n        moment().tz(timezone).subtract(1, 'day').startOf('day').toDate().valueOf(),\n        moment().tz(timezone).subtract(1, 'day').endOf('day').toDate().valueOf(),\n      ] as TimeRangeState,\n    },\n    LAST_7_DAYS: {\n      label: 'Within last 7 days',\n      range: [moment().tz(timezone).subtract(7, 'days').toDate().valueOf(), null] as TimeRangeState,\n    },\n    LAST_30_DAYS: {\n      label: 'Within last 30 days',\n      range: [\n        moment().tz(timezone).subtract(30, 'days').toDate().valueOf(),\n        null,\n      ] as TimeRangeState,\n    },\n    CUSTOM: {label: 'Custom...', range: [null, null] as TimeRangeState},\n  };\n  const array = Object.keys(obj).map((keyString) => {\n    const key = keyString as keyof typeof obj;\n    return {\n      key,\n      label: obj[key].label,\n      range: obj[key].range,\n    };\n  });\n  return {timeRanges: obj, timeRangesArray: array};\n}\n\nexport type TimeRangeFilter = FilterObject & {\n  state: [number | null, number | null];\n  setState: (state: TimeRangeState) => void;\n};\ntype TimeRangeKey = keyof ReturnType<typeof calculateTimeRanges>['timeRanges'];\ntype Args = {\n  name: string;\n  icon: IconName;\n  timezone: string;\n  initialState?: TimeRangeState;\n  onStateChanged?: (state: TimeRangeState) => void;\n};\nexport function useTimeRangeFilter({\n  name,\n  icon,\n  timezone,\n  initialState,\n  onStateChanged,\n}: Args): TimeRangeFilter {\n  const [state, setState] = React.useState<TimeRangeState>(initialState || [null, null]);\n  React.useEffect(() => {\n    onStateChanged?.(state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state[0], state[1]]);\n\n  React.useEffect(() => {\n    setState(initialState || [null, null]);\n  }, [initialState]);\n\n  const {timeRanges, timeRangesArray} = React.useMemo(() => calculateTimeRanges(timezone), [\n    timezone,\n    // Recalculate once an hour\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    Math.floor(Date.now() / (1000 * 60 * 60)),\n  ]);\n\n  const onReset = () => {\n    setState([null, null]);\n  };\n\n  const filterObj = React.useMemo(\n    () => ({\n      name,\n      icon,\n      state,\n      setState,\n      isActive: state[0] !== null || state[1] !== null,\n      getResults: (\n        query: string,\n      ): {\n        label: JSX.Element;\n        key: string;\n        value: TimeRangeKey;\n      }[] => {\n        return timeRangesArray\n          .filter(({label}) => query === '' || label.toLowerCase().includes(query.toLowerCase()))\n          .map(({label, key}) => ({\n            label: <TimeRangeResult range={label} />,\n            key,\n            value: key,\n          }));\n      },\n      onSelect: ({\n        value,\n        close,\n        createPortal,\n      }: {\n        value: TimeRangeKey;\n        close: () => void;\n        createPortal: (element: JSX.Element) => () => void;\n      }) => {\n        if (value === 'CUSTOM') {\n          const closeRef = {\n            current: () => {},\n          };\n          closeRef.current = createPortal(\n            <CustomTimeRangeFilterDialog filter={filterObjRef.current} closeRef={closeRef} />,\n          );\n        } else {\n          const nextState = timeRanges[value].range;\n          setState(nextState);\n        }\n        close();\n      },\n      activeJSX: (\n        <ActiveFilterState\n          timeRanges={timeRanges}\n          state={state}\n          timezone={timezone}\n          remove={onReset}\n        />\n      ),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [name, icon, state, timeRanges, timezone, timeRangesArray],\n  );\n  const filterObjRef = useUpdatingRef(filterObj);\n  return filterObj;\n}\n\nfunction TimeRangeResult({range}: {range: string}) {\n  return (\n    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n      <Icon name=\"date\" color={Colors.Dark} />\n      {range}\n    </Box>\n  );\n}\n\nexport function ActiveFilterState({\n  state,\n  remove,\n  timezone,\n  timeRanges,\n}: {\n  state: TimeRangeState;\n  remove: () => void;\n  timezone: string;\n  timeRanges: ReturnType<typeof calculateTimeRanges>['timeRanges'];\n}) {\n  const L_FORMAT = React.useMemo(\n    () =>\n      new Intl.DateTimeFormat(navigator.language, {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric',\n        timeZone:\n          timezone === 'Automatic' ? Intl.DateTimeFormat().resolvedOptions().timeZone : timezone,\n      }),\n    [timezone],\n  );\n  const dateLabel = React.useMemo(() => {\n    if (isEqual(state, timeRanges.TODAY.range)) {\n      return (\n        <>\n          is <FilterTagHighlightedText>Today</FilterTagHighlightedText>\n        </>\n      );\n    } else if (isEqual(state, timeRanges.YESTERDAY.range)) {\n      return (\n        <>\n          is <FilterTagHighlightedText>Yesterday</FilterTagHighlightedText>\n        </>\n      );\n    } else if (isEqual(state, timeRanges.LAST_7_DAYS.range)) {\n      return (\n        <>\n          is within <FilterTagHighlightedText>Last 7 days</FilterTagHighlightedText>\n        </>\n      );\n    } else if (isEqual(state, timeRanges.LAST_30_DAYS.range)) {\n      return (\n        <>\n          is within <FilterTagHighlightedText>Last 30 days</FilterTagHighlightedText>\n        </>\n      );\n    } else {\n      if (!state[0]) {\n        return (\n          <>\n            is before{' '}\n            <FilterTagHighlightedText>{L_FORMAT.format(state[1]!)}</FilterTagHighlightedText>\n          </>\n        );\n      }\n      if (!state[1]) {\n        return (\n          <>\n            is after{' '}\n            <FilterTagHighlightedText>{L_FORMAT.format(state[0]!)}</FilterTagHighlightedText>\n          </>\n        );\n      }\n      return (\n        <>\n          is in range{' '}\n          <FilterTagHighlightedText>{L_FORMAT.format(state[0]!)}</FilterTagHighlightedText>\n          {' - '}\n          <FilterTagHighlightedText>{L_FORMAT.format(state[1]!)}</FilterTagHighlightedText>\n        </>\n      );\n    }\n  }, [L_FORMAT, state, timeRanges]);\n\n  return (\n    <FilterTag\n      iconName=\"date\"\n      label={\n        <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>Timestamp {dateLabel}</Box>\n      }\n      onRemove={remove}\n    />\n  );\n}\n\nexport function CustomTimeRangeFilterDialog({\n  filter,\n  closeRef,\n}: {\n  filter: TimeRangeFilter;\n  closeRef: {current: () => void};\n}) {\n  const [startDate, setStartDate] = React.useState<moment.Moment | null>(null);\n  const [endDate, setEndDate] = React.useState<moment.Moment | null>(null);\n  const [focusedInput, setFocusedInput] = React.useState<'startDate' | 'endDate'>('startDate');\n\n  const [isOpen, setIsOpen] = React.useState(true);\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Select a date range\"\n      onClosed={() => {\n        // close the portal after the animation is done\n        closeRef.current();\n      }}\n      style={{width: '652px'}}\n    >\n      <Container>\n        <Box flex={{direction: 'row', gap: 8}} padding={16}>\n          <DateRangePicker\n            onDatesChange={({startDate, endDate}) => {\n              setStartDate(startDate);\n              setEndDate(endDate);\n            }}\n            onFocusChange={(focusedInput) => {\n              focusedInput && setFocusedInput(focusedInput);\n            }}\n            startDate={startDate}\n            endDate={endDate}\n            startDateId=\"start\"\n            endDateId=\"end\"\n            focusedInput={focusedInput}\n            withPortal={false}\n            keepOpenOnDateSelect\n            isOutsideRange={() => false}\n          />\n        </Box>\n      </Container>\n      <DialogFooter topBorder>\n        <Button\n          onClick={() => {\n            setIsOpen(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          intent=\"primary\"\n          disabled={!startDate || !endDate}\n          onClick={() => {\n            filter.setState([startDate!.valueOf(), endDate!.valueOf()]);\n            setIsOpen(false);\n          }}\n        >\n          Apply\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n\nconst Container = styled.div`\n  height: 430px;\n\n  /* Hide the default date picker for Chrome, Edge, and Safari */\n  input[type='date']::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n\n  /* Hide the default date picker for Firefox */\n  input[type='date']::-moz-calendar-picker-indicator {\n    display: none;\n  }\n\n  /* Hide the default date picker for Internet Explorer */\n  input[type='date']::-ms-calendar-picker-indicator {\n    display: none;\n  }\n\n  .DayPickerKeyboardShortcuts_show {\n    display: none;\n  }\n\n  .CalendarDay__hovered_span,\n  .CalendarDay__hovered_span:hover,\n  .CalendarDay__selected_span,\n  .CalendarDay__selected_span:hover {\n    background: ${Colors.Blue50};\n    color: ${Colors.Blue700};\n    border: 1px solid #e4e7e7;\n  }\n  .CalendarDay__selected,\n  .CalendarDay__selected:active,\n  .CalendarDay__selected:hover {\n    background: ${Colors.Blue200};\n    border: 1px solid #e4e7e7;\n  }\n  .DateInput_input__focused {\n    border-color: ${Colors.Blue500};\n  }\n`;\n","import {gql, useLazyQuery, useApolloClient} from '@apollo/client';\nimport {\n  TokenizingFieldValue,\n  tokensAsStringArray,\n  tokenizedValuesFromStringArray,\n  Box,\n  Icon,\n} from '@dagster-io/ui';\nimport memoize from 'lodash/memoize';\nimport qs from 'qs';\nimport * as React from 'react';\n\nimport {__ASSET_JOB_PREFIX} from '../asset-graph/Utils';\nimport {RunsFilter, RunStatus} from '../graphql/types';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TruncatedTextWithFullTextOnHover} from '../nav/getLeftNavItemsForOption';\nimport {useFilters} from '../ui/Filters';\nimport {FilterObject} from '../ui/Filters/useFilter';\nimport {capitalizeFirstLetter, useStaticSetFilter} from '../ui/Filters/useStaticSetFilter';\nimport {SuggestionFilterSuggestion, useSuggestionFilter} from '../ui/Filters/useSuggestionFilter';\nimport {TimeRangeState, useTimeRangeFilter} from '../ui/Filters/useTimeRangeFilter';\nimport {useRepositoryOptions} from '../workspace/WorkspaceContext';\n\nimport {DagsterTag} from './RunTag';\nimport {\n  RunTagKeysQuery,\n  RunTagValuesQuery,\n  RunTagValuesQueryVariables,\n} from './types/RunsFilterInput.types';\n\nexport interface RunsFilterInputProps {\n  loading?: boolean;\n  tokens: RunFilterToken[];\n  onChange: (tokens: RunFilterToken[]) => void;\n  enabledFilters?: RunFilterTokenType[];\n}\n\nexport const RunsFilterInput = (props: RunsFilterInputProps) => {\n  const {button, activeFiltersJsx} = useRunsFilterInput(props);\n  return (\n    <div>\n      {button}\n      {activeFiltersJsx}\n    </div>\n  );\n};\n\nexport type RunFilterTokenType =\n  | 'id'\n  | 'status'\n  | 'pipeline'\n  | 'job'\n  | 'snapshotId'\n  | 'tag'\n  | 'backfill'\n  | 'created_date_before'\n  | 'created_date_after';\n\nexport type RunFilterToken = {\n  token?: RunFilterTokenType;\n  value: string;\n};\n\nconst RUN_PROVIDERS_EMPTY = [\n  {\n    token: 'id',\n    values: () => [],\n  },\n  {\n    token: 'status',\n    values: () => [],\n  },\n  {\n    token: 'pipeline',\n    values: () => [],\n  },\n  {\n    token: 'job',\n    values: () => [],\n  },\n  {\n    token: 'tag',\n    values: () => [],\n  },\n  {\n    token: 'snapshotId',\n    values: () => [],\n  },\n  {\n    token: 'created_date_before',\n    values: () => [],\n  },\n  {\n    token: 'created_date_after',\n    values: () => [],\n  },\n];\n\n/**\n * This React hook provides run filtering state similar to React.useState(), but syncs\n * the value to the URL query string so that reloading the page / navigating \"back\"\n * maintains your view as expected.\n *\n * @param enabledFilters: This is useful if you want to ignore some filters that could\n * be provided (eg pipeline:, which is not relevant within pipeline scoped views.)\n */\nexport function useQueryPersistedRunFilters(enabledFilters?: RunFilterTokenType[]) {\n  return useQueryPersistedState<RunFilterToken[]>(\n    React.useMemo(\n      () => ({\n        encode: (tokens) => ({q: tokensAsStringArray(tokens), cursor: undefined}),\n        decode: ({q = []}) =>\n          tokenizedValuesFromStringArray(q, RUN_PROVIDERS_EMPTY).filter(\n            (t) =>\n              !t.token || !enabledFilters || enabledFilters.includes(t.token as RunFilterTokenType),\n          ) as RunFilterToken[],\n      }),\n      [enabledFilters],\n    ),\n  );\n}\n\nexport function runsPathWithFilters(filterTokens: RunFilterToken[]) {\n  return `/runs?${qs.stringify({q: tokensAsStringArray(filterTokens)}, {arrayFormat: 'brackets'})}`;\n}\n\nexport function runsFilterForSearchTokens(search: TokenizingFieldValue[]) {\n  if (!search[0]) {\n    return {};\n  }\n\n  const obj: RunsFilter = {};\n\n  for (const item of search) {\n    if (item.token === 'created_date_before') {\n      obj.createdBefore = parseInt(item.value);\n    } else if (item.token === 'created_date_after') {\n      obj.updatedAfter = parseInt(item.value);\n    } else if (item.token === 'pipeline' || item.token === 'job') {\n      obj.pipelineName = item.value;\n    } else if (item.token === 'id') {\n      obj.runIds = obj.runIds || [];\n      obj.runIds.push(item.value);\n    } else if (item.token === 'status') {\n      obj.statuses = obj.statuses || [];\n      obj.statuses.push(item.value as RunStatus);\n    } else if (item.token === 'snapshotId') {\n      obj.snapshotId = item.value;\n    } else if (item.token === 'tag') {\n      const [key, value = ''] = item.value.split('=');\n      if (obj.tags) {\n        obj.tags.push({key: key!, value});\n      } else {\n        obj.tags = [{key: key!, value}];\n      }\n    }\n  }\n\n  return obj;\n}\n\nconst StatusFilterValues = Object.keys(RunStatus).map((x) => ({\n  label: capitalizeFirstLetter(x),\n  value: x,\n  match: [x],\n}));\nconst CREATED_BY_TAGS = [\n  DagsterTag.Automaterialize,\n  DagsterTag.SensorName,\n  DagsterTag.ScheduleName,\n  DagsterTag.User,\n];\n\n// Exclude these tags from the \"tag\" filter because theyre already being fetched by other filters.\nconst tagsToExclude = [...CREATED_BY_TAGS, DagsterTag.Backfill];\n\nexport const useRunsFilterInput = ({tokens, onChange, enabledFilters}: RunsFilterInputProps) => {\n  const {options} = useRepositoryOptions();\n\n  const [fetchTagKeys, {data: tagKeyData}] = useLazyQuery<RunTagKeysQuery>(RUN_TAG_KEYS_QUERY);\n  const client = useApolloClient();\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const fetchTagValues = React.useCallback(\n    async (tagKey: string) => {\n      const {data} = await client.query<RunTagValuesQuery, RunTagValuesQueryVariables>({\n        query: RUN_TAG_VALUES_QUERY,\n        variables: {tagKeys: tagKey ? [tagKey] : []},\n      });\n      if (data?.runTagsOrError?.__typename === 'RunTags') {\n        return (\n          data?.runTagsOrError.tags?.[0]?.values.map((tagValue) =>\n            tagSuggestionValueObject(tagKey, tagValue),\n          ) || []\n        );\n      }\n\n      return [];\n    },\n    [client],\n  );\n\n  const tagSuggestions: SuggestionFilterSuggestion<{\n    value: string;\n    key?: string;\n  }>[] = React.useMemo(() => {\n    if (tagKeyData?.runTagKeysOrError?.__typename === 'RunTagKeys') {\n      return (\n        tagKeyData?.runTagKeysOrError.keys\n          .filter((key) => !tagsToExclude.includes(key as DagsterTag))\n          .map((tagKey) => ({\n            final: false,\n            value: {\n              value: tagKey,\n            },\n          })) || []\n      );\n    }\n    return [];\n  }, [tagKeyData]);\n\n  const [fetchSensorValues, sensorValues] = useTagDataFilterValues(DagsterTag.SensorName);\n  const [fetchScheduleValues, scheduleValues] = useTagDataFilterValues(DagsterTag.ScheduleName);\n  const [fetchUserValues, userValues] = useTagDataFilterValues(DagsterTag.User);\n  const [fetchBackfillValues, backfillValues] = useTagDataFilterValues(DagsterTag.Backfill);\n\n  const isBackfillsFilterEnabled = !enabledFilters || enabledFilters?.includes('backfill');\n\n  const onFocus = React.useCallback(() => {\n    fetchTagKeys();\n    fetchSensorValues();\n    fetchScheduleValues();\n    fetchUserValues();\n    if (isBackfillsFilterEnabled) {\n      fetchBackfillValues();\n    }\n  }, [\n    fetchBackfillValues,\n    fetchScheduleValues,\n    fetchSensorValues,\n    fetchTagKeys,\n    fetchUserValues,\n    isBackfillsFilterEnabled,\n  ]);\n\n  const createdByValues = React.useMemo(\n    () => [\n      tagToFilterValue(DagsterTag.Automaterialize, 'true'),\n      ...sensorValues,\n      ...scheduleValues,\n      ...userValues,\n    ],\n    [sensorValues, scheduleValues, userValues],\n  );\n\n  const isJobFilterEnabled = !enabledFilters || enabledFilters?.includes('job');\n\n  const {pipelines, jobs} = React.useMemo(() => {\n    const pipelineNames = [];\n    const jobNames = [];\n\n    if (!isJobFilterEnabled) {\n      return {pipelines: [], jobs: []};\n    }\n\n    for (const option of options) {\n      const {repository} = option;\n      for (const pipeline of repository.pipelines) {\n        if (pipeline.isJob) {\n          if (!pipeline.name.startsWith(__ASSET_JOB_PREFIX)) {\n            jobNames.push(pipeline.name);\n          }\n        } else {\n          pipelineNames.push(pipeline.name);\n        }\n      }\n    }\n    return {\n      pipelines: pipelineNames.map((name) => ({\n        key: name,\n        value: name,\n        match: [name],\n      })),\n      jobs: jobNames.map((name) => ({\n        key: name,\n        value: name,\n        match: [name],\n      })),\n    };\n  }, [isJobFilterEnabled, options]);\n\n  const isPipelineFilterEnabled =\n    !enabledFilters || (enabledFilters?.includes('job') && pipelines.length);\n\n  const jobFilter = useStaticSetFilter({\n    name: 'Job',\n    icon: 'job',\n    allowMultipleSelections: false,\n    allValues: jobs,\n    renderLabel: ({value}) => (\n      <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n        <Icon name=\"job\" />\n        <TruncatedTextWithFullTextOnHover text={value} />\n      </Box>\n    ),\n    getStringValue: (x) => x,\n    initialState: React.useMemo(\n      () => new Set(tokens.filter((x) => x.token === 'job').map((x) => x.value)),\n      [tokens],\n    ),\n    onStateChanged: (values) => {\n      onChange([\n        ...tokens.filter((x) => x.token !== 'job'),\n        ...Array.from(values).map((value) => ({\n          token: 'job' as const,\n          value,\n        })),\n      ]);\n    },\n  });\n\n  const statusFilter = useStaticSetFilter({\n    name: 'Status',\n    icon: 'status',\n    allValues: StatusFilterValues,\n    renderLabel: ({value}) => <span>{capitalizeFirstLetter(value)}</span>,\n    getStringValue: (x) => capitalizeFirstLetter(x),\n    initialState: React.useMemo(\n      () => new Set(tokens.filter((x) => x.token === 'status').map((x) => x.value)),\n      [tokens],\n    ),\n    onStateChanged: (values) => {\n      onChange([\n        ...tokens.filter((x) => x.token !== 'status'),\n        ...Array.from(values).map((value) => ({\n          token: 'status' as const,\n          value,\n        })),\n      ]);\n    },\n  });\n\n  const pipelinesFilter = useStaticSetFilter({\n    name: 'Pipelines',\n    icon: 'job',\n    allValues: pipelines,\n    allowMultipleSelections: false,\n    renderLabel: ({value}) => (\n      <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n        <Icon name=\"job\" />\n        <TruncatedTextWithFullTextOnHover text={value} />\n      </Box>\n    ),\n    getStringValue: (x) => x,\n    initialState: React.useMemo(\n      () => new Set(tokens.filter((x) => x.token === 'job').map((x) => x.value)),\n      [tokens],\n    ),\n    onStateChanged: (values) => {\n      onChange([\n        ...tokens.filter((x) => x.token !== 'pipeline'),\n        ...Array.from(values).map((value) => ({\n          token: 'pipeline' as const,\n          value,\n        })),\n      ]);\n    },\n  });\n\n  const backfillsFilter = useStaticSetFilter({\n    name: 'Backfill ID',\n    icon: 'backfill',\n    allValues: backfillValues,\n    allowMultipleSelections: false,\n    initialState: React.useMemo(() => {\n      return new Set(\n        tokens\n          .filter(\n            ({token, value}) => token === 'tag' && value.split('=')[0] === DagsterTag.Backfill,\n          )\n          .map(({value}) => tagValueToFilterObject(value)),\n      );\n    }, [tokens]),\n    renderLabel: ({value}) => (\n      <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n        <Icon name=\"job\" />\n        <TruncatedTextWithFullTextOnHover text={value.value!} />\n      </Box>\n    ),\n    getStringValue: ({value}) => value!,\n    onStateChanged: (values) => {\n      onChange([\n        ...tokens.filter(({token, value}) => {\n          if (token !== 'tag') {\n            return true;\n          }\n          return value.split('=')[0] !== DagsterTag.Backfill;\n        }),\n        ...Array.from(values).map((value) => ({\n          token: 'tag' as const,\n          value: `${value.type}=${value.value}`,\n        })),\n      ]);\n    },\n  });\n\n  const {button, activeFiltersJsx} = useFilters({\n    filters: [\n      !enabledFilters || enabledFilters?.includes('status') ? statusFilter : null,\n      useStaticSetFilter({\n        name: 'Launched by',\n        icon: 'add_circle',\n        allValues: createdByValues,\n        renderLabel: ({value}) => {\n          let icon;\n          let labelValue = value.value;\n          if (value.type === DagsterTag.SensorName) {\n            icon = <Icon name=\"sensors\" />;\n          } else if (value.type === DagsterTag.ScheduleName) {\n            icon = <Icon name=\"schedule\" />;\n          } else if (value.type === DagsterTag.User) {\n            return <UserDisplay email={value.value!} isFilter />;\n          } else if (value.type === DagsterTag.Automaterialize) {\n            icon = <Icon name=\"auto_materialize_policy\" />;\n            labelValue = 'Auto-materialize policy';\n          }\n          return (\n            <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n              {icon}\n              <TruncatedTextWithFullTextOnHover text={labelValue!} />\n            </Box>\n          );\n        },\n        getStringValue: (x) => {\n          if (x.type === DagsterTag.Automaterialize) {\n            return 'Auto-materialize policy';\n          }\n          return x.value!;\n        },\n        initialState: React.useMemo(() => {\n          return new Set(\n            tokens\n              .filter(\n                ({token, value}) =>\n                  token === 'tag' && CREATED_BY_TAGS.includes(value.split('=')[0] as DagsterTag),\n              )\n              .map(({value}) => tagValueToFilterObject(value)),\n          );\n        }, [tokens]),\n        onStateChanged: (values) => {\n          onChange([\n            ...tokens.filter((token) => {\n              if (token.token !== 'tag') {\n                return true;\n              }\n              return !CREATED_BY_TAGS.includes(token.value.split('=')[0] as DagsterTag);\n            }),\n            ...Array.from(values).map((value) => ({\n              token: 'tag' as const,\n              value: `${value.type}=${value.value}`,\n            })),\n          ]);\n        },\n      }),\n      useTimeRangeFilter({\n        name: 'Created date',\n        icon: 'date',\n        timezone: 'UTC',\n        initialState: React.useMemo(() => {\n          const before = tokens.find((token) => token.token === 'created_date_before');\n          const after = tokens.find((token) => token.token === 'created_date_after');\n          return [\n            after ? parseInt(after.value) * 1000 : null,\n            before ? parseInt(before.value) * 1000 : null,\n          ] as TimeRangeState;\n        }, [tokens]),\n        onStateChanged: (values) => {\n          onChange([\n            ...tokens.filter(\n              (token) => !['created_date_before', 'created_date_after'].includes(token.token ?? ''),\n            ),\n            ...([\n              values[0] != null\n                ? {token: 'created_date_after', value: `${values[0] / 1000}`}\n                : null,\n              values[1] != null\n                ? {token: 'created_date_before', value: `${values[1] / 1000}`}\n                : null,\n            ].filter((x) => x) as RunFilterToken[]),\n          ]);\n        },\n      }),\n      isJobFilterEnabled ? jobFilter : null,\n      isPipelineFilterEnabled ? pipelinesFilter : null,\n      isBackfillsFilterEnabled ? backfillsFilter : null,\n      useSuggestionFilter({\n        name: 'Tag',\n        icon: 'tag',\n        initialSuggestions: tagSuggestions,\n\n        freeformSearchResult: React.useCallback(\n          (\n            query: string,\n            path: {\n              value: string;\n              key?: string | undefined;\n            }[],\n          ) => {\n            return {\n              ...tagSuggestionValueObject(path[0] ? path[0].value : '', query),\n              final: !!path.length,\n            };\n          },\n          [],\n        ),\n\n        state: React.useMemo(() => {\n          return tokens\n            .filter(({token, value}) => {\n              if (token !== 'tag') {\n                return false;\n              }\n              return !tagsToExclude.includes(value.split('=')[0] as DagsterTag);\n            })\n            .map((token) => {\n              const [key, value] = token.value.split('=');\n              return tagSuggestionValueObject(key!, value!).value;\n            });\n        }, [tokens]),\n\n        setState: (nextState) => {\n          onChange([\n            ...tokens.filter(({token, value}) => {\n              if (token !== 'tag') {\n                return true;\n              }\n              return tagsToExclude.includes(value.split('=')[0] as DagsterTag);\n            }),\n            ...nextState.map(({key, value}) => {\n              return {\n                token: 'tag' as const,\n                value: `${key}=${value}`,\n              };\n            }),\n          ]);\n        },\n        onSuggestionClicked: async ({value}) => {\n          return await fetchTagValues(value);\n        },\n        getStringValue: ({key, value}) => `${key}=${value}`,\n        getKey: ({key, value}) => `${key}: ${value}`,\n        renderLabel: ({value}) => (\n          <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n            <Icon name=\"tag\" />\n            <TruncatedTextWithFullTextOnHover text={value.value} />\n          </Box>\n        ),\n        renderActiveStateLabel: ({value}) => (\n          <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n            <Icon name=\"tag\" />\n            <TruncatedTextWithFullTextOnHover text={`${value.key}=${value.value}`} />\n            {value.key}={value.value}\n          </Box>\n        ),\n        isMatch: ({value}, query) => value.toLowerCase().includes(query.toLowerCase()),\n        matchType: 'all-of',\n      }),\n    ].filter((x) => x) as FilterObject[],\n  });\n\n  return {button: <span onClick={onFocus}>{button}</span>, activeFiltersJsx};\n};\nexport function useTagDataFilterValues(tagKey?: DagsterTag) {\n  const [fetch, {data}] = useLazyQuery<RunTagValuesQuery, RunTagValuesQueryVariables>(\n    RUN_TAG_VALUES_QUERY,\n    {\n      variables: {tagKeys: tagKey ? [tagKey] : []},\n    },\n  );\n\n  const values = React.useMemo(() => {\n    if (!tagKey || data?.runTagsOrError?.__typename !== 'RunTags') {\n      return [];\n    }\n    return data.runTagsOrError.tags\n      .map((x) => x.values)\n      .flat()\n      .map((x) => tagToFilterValue(tagKey, x));\n  }, [data, tagKey]);\n\n  return [fetch, values] as [typeof fetch, typeof values];\n}\n\nfunction tagToFilterValue(key: string, value: string) {\n  return {\n    label: value,\n    value: tagValueToFilterObject(`${key}=${value}`),\n    match: [value],\n  };\n}\n\n// Memoize this object because the static set filter component checks for object equality (set.has)\nexport const tagValueToFilterObject = memoize((value: string) => ({\n  key: value,\n  type: value.split('=')[0] as DagsterTag,\n  value: value.split('=')[1],\n}));\n\nexport const tagSuggestionValueObject = memoize(\n  (key: string, value: string) => ({\n    final: true,\n    value: {\n      key,\n      value,\n    },\n  }),\n  (key, value) => `${key}:${value}`,\n);\n\nexport const RUN_TAG_KEYS_QUERY = gql`\n  query RunTagKeysQuery {\n    runTagKeysOrError {\n      ... on RunTagKeys {\n        keys\n      }\n    }\n  }\n`;\n\nexport const RUN_TAG_VALUES_QUERY = gql`\n  query RunTagValuesQuery($tagKeys: [String!]!) {\n    runTagsOrError(tagKeys: $tagKeys) {\n      ... on RunTags {\n        tags {\n          key\n          values\n        }\n      }\n    }\n  }\n`;\n","import {\n  Box,\n  Button,\n  Colors,\n  Icon,\n  IconWrapper,\n  Menu,\n  MenuItem,\n  Popover,\n  Spinner,\n  TextInput,\n} from '@dagster-io/ui';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport React, {useState, useRef} from 'react';\nimport styled, {createGlobalStyle} from 'styled-components/macro';\nimport {v4 as uuidv4} from 'uuid';\n\nimport {ShortcutHandler} from '../../app/ShortcutHandler';\nimport {useSetStateUpdateCallback} from '../../hooks/useSetStateUpdateCallback';\nimport {useUpdatingRef} from '../../hooks/useUpdatingRef';\nimport {Container, Inner, Row} from '../../ui/VirtualizedTable';\n\nimport {FilterObject} from './useFilter';\n\ninterface FilterDropdownProps {\n  filters: FilterObject[];\n  setIsOpen: (isOpen: boolean) => void;\n  setPortaledElements: React.Dispatch<React.SetStateAction<JSX.Element[]>>;\n}\n\nexport const FilterDropdown = ({filters, setIsOpen, setPortaledElements}: FilterDropdownProps) => {\n  const [menuKey, _] = React.useState(() => uuidv4());\n  const [focusedItemIndex, setFocusedItemIndex] = React.useState(-1);\n  const [search, setSearch] = useState('');\n  const [selectedFilterName, _setSelectedFilterName] = useState<string | null>(null);\n  const selectedFilter = React.useMemo(() => {\n    return filters.find((filter) => filter.name === selectedFilterName);\n  }, [filters, selectedFilterName]);\n\n  const setSelectedFilterName = useSetStateUpdateCallback(selectedFilterName, (nextName) => {\n    _setSelectedFilterName(nextName);\n    if (nextName === null) {\n      if (selectedFilter) {\n        selectedFilter.onUnselected?.();\n      }\n    }\n  });\n\n  const selectedFilterRef = useUpdatingRef(selectedFilter);\n  React.useLayoutEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      selectedFilterRef.current?.onUnselected?.();\n    };\n  }, [selectedFilterRef]);\n\n  const {results, filteredFilters} = React.useMemo(() => {\n    const filteredFilters = selectedFilter\n      ? []\n      : search\n      ? filters.filter((filter) => filter.name.toLowerCase().includes(search.toLowerCase()))\n      : filters;\n\n    const results: Record<string, {label: JSX.Element; key: string; value: any}[]> = {};\n    if (search) {\n      filters.forEach((filter) => {\n        results[filter.name] = filter.getResults(search);\n      });\n    }\n    return {results, filteredFilters};\n  }, [search, filters, selectedFilter]);\n\n  const selectValue = React.useCallback(\n    (filter: FilterObject, value: any) => {\n      filter.onSelect({\n        value,\n        close: () => {\n          setSearch('');\n          setSelectedFilterName(null);\n          setFocusedItemIndex(-1);\n          setIsOpen(false);\n        },\n        clearSearch: () => {\n          setSearch('');\n        },\n        createPortal: (portaledElement) => {\n          const portalElement = (\n            <React.Fragment key={filter.name}>{portaledElement}</React.Fragment>\n          );\n          setPortaledElements((portaledElements) => [...portaledElements, portalElement]);\n          return () => {\n            setPortaledElements((portaledElements) =>\n              portaledElements.filter((element) => element !== portalElement),\n            );\n          };\n        },\n      });\n    },\n    [setIsOpen, setPortaledElements, setSelectedFilterName],\n  );\n\n  const allResultsJsx = React.useMemo(() => {\n    if (selectedFilter) {\n      return selectedFilter\n        .getResults(search)\n        .map((result, resultIndex) => (\n          <FilterDropdownMenuItem\n            key={`filter:${selectedFilter.name}:${result.key}`}\n            onClick={() => selectValue(selectedFilter, result.value)}\n            text={result.label}\n            index={resultIndex}\n            menuKey={menuKey}\n            active={focusedItemIndex === resultIndex}\n          />\n        ));\n    }\n    const jsxResults: JSX.Element[] = [];\n    filters.forEach((filter) => {\n      if (filteredFilters.includes(filter)) {\n        const index = jsxResults.length;\n        jsxResults.push(\n          <FilterDropdownMenuItem\n            key={`filter:${filter.name}`}\n            onClick={() => {\n              setSelectedFilterName(filter.name);\n              setFocusedItemIndex(-1);\n            }}\n            text={\n              <Box flex={{direction: 'row', gap: 12}}>\n                <Icon name={filter.icon} />\n                {filter.name}\n              </Box>\n            }\n            index={index}\n            menuKey={menuKey}\n            active={focusedItemIndex === index}\n          />,\n        );\n      }\n      results[filter.name]?.forEach((result) => {\n        const index = jsxResults.length;\n        jsxResults.push(\n          <FilterDropdownMenuItem\n            key={`filter-result:${filter.name}:${result.key}`}\n            onClick={() => {\n              setSelectedFilterName(filter.name);\n              selectValue(filter, result.value);\n            }}\n            text={result.label}\n            index={index}\n            menuKey={menuKey}\n            active={focusedItemIndex === index}\n          />,\n        );\n      });\n    });\n    return jsxResults;\n  }, [\n    selectedFilter,\n    filters,\n    search,\n    menuKey,\n    focusedItemIndex,\n    selectValue,\n    filteredFilters,\n    results,\n    setSelectedFilterName,\n  ]);\n\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const dropdownRef = useRef<HTMLDivElement | null>(null);\n\n  const handleKeyDown = React.useCallback(\n    async (event: React.KeyboardEvent) => {\n      const maxIndex = allResultsJsx.length - 1;\n      if (event.key === 'ArrowDown' || (event.key === 'Tab' && !event.shiftKey)) {\n        setFocusedItemIndex((prevIndex) => (prevIndex === maxIndex ? -1 : prevIndex + 1));\n        event.preventDefault();\n      } else if (event.key === 'ArrowUp' || (event.key === 'Tab' && event.shiftKey)) {\n        setFocusedItemIndex((prevIndex) => (prevIndex === -1 ? maxIndex : prevIndex - 1));\n        event.preventDefault();\n      } else if (event.key === 'Enter' || event.key === ' ') {\n        if (focusedItemIndex === -1) {\n          // They're typing in the search bar\n          return;\n        }\n        event.preventDefault();\n        allResultsJsx[focusedItemIndex]?.props.onClick?.();\n      } else if (event.key === 'Escape') {\n        if (selectedFilter) {\n          setSelectedFilterName(null);\n          setFocusedItemIndex(-1);\n        } else {\n          setIsOpen(false);\n        }\n      } else if (event.target === inputRef.current) {\n        setFocusedItemIndex(-1);\n      }\n    },\n    [allResultsJsx, focusedItemIndex, selectedFilter, setSelectedFilterName, setIsOpen],\n  );\n\n  const parentRef = React.useRef<HTMLDivElement>(null);\n\n  const rowVirtualizer = useVirtualizer({\n    count: allResultsJsx.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: (_: number) => 32,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const items = rowVirtualizer.getVirtualItems();\n\n  return (\n    <div>\n      <TextInputWrapper>\n        <TextInput\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Search filters...\"\n          ref={(el) => {\n            inputRef.current = el;\n            el?.focus();\n          }}\n          aria-label=\"Search filters\"\n          aria-activedescendant={\n            focusedItemIndex !== -1 ? itemId(menuKey, focusedItemIndex) : undefined\n          }\n          role=\"combobox\"\n          aria-expanded=\"true\"\n          aria-owns={menuKey}\n        />\n        <Box\n          flex={{justifyContent: 'center', alignItems: 'center'}}\n          padding={{vertical: 12, horizontal: 16}}\n        >\n          <SlashShortcut>f</SlashShortcut>\n        </Box>\n      </TextInputWrapper>\n      <Menu>\n        <DropdownMenuContainer id={menuKey} ref={dropdownRef} onKeyDown={handleKeyDown}>\n          {selectedFilter && selectedFilter.isLoadingFilters ? (\n            <Box padding={{vertical: 12, horizontal: 16}}>\n              <Spinner purpose=\"section\" />\n            </Box>\n          ) : allResultsJsx.length ? (\n            <Container\n              ref={parentRef}\n              style={{\n                maxHeight: '500px',\n                overflowY: 'auto',\n                width: selectedFilter?.menuWidth || 'auto',\n              }}\n            >\n              <Inner $totalHeight={totalHeight}>\n                {items.map(({index, end, start}) => {\n                  return (\n                    <Row $height={end - start} $start={start} key={index}>\n                      {allResultsJsx[index]}\n                    </Row>\n                  );\n                })}\n              </Inner>\n            </Container>\n          ) : (\n            <Box padding={{vertical: 12, horizontal: 16}}>No results</Box>\n          )}\n        </DropdownMenuContainer>\n      </Menu>\n    </div>\n  );\n};\n\ntype FilterDropdownButtonProps = {\n  filters: FilterObject[];\n};\nexport const FilterDropdownButton = React.memo(({filters}: FilterDropdownButtonProps) => {\n  const keyRef = React.useRef(0);\n\n  const [isOpen, _setIsOpen] = useState(false);\n  const prevOpenRef = React.useRef(isOpen);\n\n  const setIsOpen = useSetStateUpdateCallback(isOpen, (isOpen) => {\n    _setIsOpen(isOpen);\n    if (isOpen && !prevOpenRef.current) {\n      // Reset the key when the dropdown is opened\n      // But not when its closed because of the closing animation\n      keyRef.current++;\n    }\n    prevOpenRef.current = isOpen;\n  });\n\n  const [portaledElements, setPortaledElements] = useState<JSX.Element[]>([]);\n\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n  const dropdownRef = React.useRef<HTMLDivElement>(null);\n\n  /**\n   * Popover doesn't seem to support canOutsideClickClose, so we have to do this ourselves.\n   */\n  React.useLayoutEffect(() => {\n    const listener = (e: MouseEvent) => {\n      if (\n        buttonRef.current?.contains(e.target as Node) ||\n        dropdownRef.current?.contains(e.target as Node) ||\n        !document.contains(e.target as Node)\n      ) {\n        return;\n      }\n      setIsOpen(false);\n    };\n    document.body.addEventListener('click', listener);\n    return () => {\n      document.body.removeEventListener('click', listener);\n    };\n  }, [setIsOpen]);\n\n  return (\n    <ShortcutHandler\n      shortcutLabel=\"F\"\n      shortcutFilter={(e) => e.code === 'KeyF'}\n      onShortcut={() => setIsOpen((isOpen) => !isOpen)}\n    >\n      <PopoverStyle />\n      <Popover\n        content={\n          <div ref={dropdownRef}>\n            <FilterDropdown\n              filters={filters}\n              setIsOpen={setIsOpen}\n              key={keyRef.current}\n              setPortaledElements={setPortaledElements}\n            />\n          </div>\n        }\n        canEscapeKeyClose\n        popoverClassName=\"filter-dropdown\"\n        isOpen={isOpen}\n        placement=\"bottom-start\"\n        onClosing={() => {\n          prevOpenRef.current = false;\n        }}\n      >\n        <div>\n          <Popover\n            content={<>{portaledElements}</>}\n            canEscapeKeyClose\n            isOpen={!!portaledElements.length}\n            position=\"bottom\"\n          >\n            <Button\n              ref={buttonRef}\n              icon={<Icon name=\"filter_alt\" />}\n              onClick={() => {\n                setIsOpen((isOpen) => !isOpen);\n              }}\n            >\n              Filter\n            </Button>\n          </Popover>\n        </div>\n      </Popover>\n    </ShortcutHandler>\n  );\n});\n\nconst DropdownMenuContainer = styled.div`\n  ${IconWrapper} {\n    margin-left: 0 !important;\n  }\n`;\n\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-gap: 12px;\n  > *:first-child {\n    flex-grow: 1;\n  }\n  input {\n    padding: 12px 16px;\n    &,\n    :focus,\n    :active,\n    :hover {\n      box-shadow: none;\n    }\n  }\n`;\n\ntype FilterDropdownMenuItemProps = React.ComponentProps<typeof MenuItem> & {\n  menuKey: string;\n  index: number;\n};\nexport const FilterDropdownMenuItem = React.memo(\n  ({menuKey, index, ...rest}: FilterDropdownMenuItemProps) => {\n    const divRef = React.useRef<HTMLDivElement | null>(null);\n    React.useLayoutEffect(() => {\n      if (rest.active) {\n        if (divRef.current) {\n          divRef.current?.scrollIntoView?.({block: 'center'});\n        }\n      }\n    }, [rest.active]);\n    return (\n      <div\n        role=\"option\"\n        id={itemId(menuKey, index)}\n        aria-selected={rest.active ? 'true' : 'false'}\n        ref={divRef}\n      >\n        <StyledMenuItem {...rest} />\n      </div>\n    );\n  },\n);\n\nconst StyledMenuItem = styled(MenuItem)`\n  &.bp4-active:focus {\n    color: white;\n    box-shadow: initial;\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst PopoverStyle = createGlobalStyle`\n  .filter-dropdown.filter-dropdown.filter-dropdown.filter-dropdown {\n    border-radius: 8px;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    .bp4-popover2-content {\n      border-radius: 8px;\n    }\n  }\n  \n  .bp4-overlay-content {\n    max-width: 100%;\n  }\n`;\n\nfunction itemId(menuKey: string, index: number) {\n  return `item-${menuKey}-${index}`;\n}\n","import React from 'react';\n\nimport {FilterDropdownButton} from './FilterDropdown';\nimport {FilterObject} from './useFilter';\n\ninterface UseFiltersProps {\n  filters: FilterObject[];\n}\n\nexport const useFilters = ({filters}: UseFiltersProps) => {\n  const activeFilterJsx = React.useMemo(() => {\n    return filters\n      .filter((filter) => filter.isActive)\n      .map((filter, index) => <React.Fragment key={index}>{filter.activeJSX}</React.Fragment>);\n  }, [filters]);\n\n  return {\n    button: React.useMemo(() => <FilterDropdownButton filters={filters} />, [filters]),\n    activeFiltersJsx: activeFilterJsx,\n  };\n};\n","import {BaseTag, Colors, Icon, IconName} from '@dagster-io/ui';\nimport React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {TruncatedTextWithFullTextOnHover} from '../../nav/getLeftNavItemsForOption';\n\nexport type FilterObject<T = any> = {\n  isActive: boolean;\n  activeJSX: JSX.Element;\n  icon: IconName;\n  name: string;\n  getResults: (query: string) => {label: JSX.Element; key: string; value: any}[];\n  onSelect: (selectArg: {\n    value: T;\n    close: () => void;\n    createPortal: (element: JSX.Element) => () => void;\n    clearSearch: () => void;\n  }) => void;\n  onUnselected?: () => void;\n  isLoadingFilters?: boolean;\n  menuWidth?: number | string;\n};\n\nexport const FilterTag = ({\n  iconName,\n  label,\n  onRemove,\n}: {\n  label: JSX.Element;\n  iconName: IconName;\n  onRemove: () => void;\n}) => (\n  <div>\n    <BaseTag\n      icon={<Icon name={iconName} color={Colors.Link} />}\n      rightIcon={\n        <div onClick={onRemove} style={{cursor: 'pointer'}} tabIndex={0}>\n          <Icon name=\"close\" color={Colors.Link} />\n        </div>\n      }\n      label={label}\n      fillColor={Colors.Blue50}\n      textColor={Colors.Link}\n    />\n  </div>\n);\n\nconst FilterTagHighlightedTextSpan = styled(TruncatedTextWithFullTextOnHover)`\n  color: ${Colors.Blue500};\n  font-weight: 600;\n  font-size: 12px;\n  max-width: 100px;\n`;\n\nexport const FilterTagHighlightedText = React.forwardRef(\n  (\n    {\n      children,\n      ...rest\n    }: Omit<React.ComponentProps<typeof TruncatedTextWithFullTextOnHover>, 'text'> & {\n      children: string;\n    },\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) => {\n    return (\n      <FilterTagHighlightedTextSpan\n        text={children}\n        tooltipStyle={LabelTooltipStyles}\n        {...rest}\n        ref={ref}\n      />\n    );\n  },\n);\n\nconst LabelTooltipStyles = JSON.stringify({\n  background: Colors.Blue50,\n  color: Colors.Blue500,\n  border: 'none',\n  borderRadius: 7,\n  overflow: 'hidden',\n  fontSize: 12,\n  padding: '5px 10px',\n  transform: 'translate(-10px,-5px)',\n  fontWeight: 600,\n} as React.CSSProperties);\n","import {Box, Checkbox, IconName, Popover} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {useUpdatingRef} from '../../hooks/useUpdatingRef';\n\nimport {FilterObject, FilterTag, FilterTagHighlightedText} from './useFilter';\n\ntype SetFilterValue<T> = {\n  value: T;\n  match: string[];\n};\ntype Args<TValue> = {\n  name: string;\n  icon: IconName;\n  renderLabel: (props: {value: TValue; isActive: boolean}) => JSX.Element;\n  renderActiveStateLabel?: (props: {value: TValue; isActive: boolean}) => JSX.Element;\n  getKey?: (value: TValue) => string;\n  getStringValue: (value: TValue) => string;\n  allValues: SetFilterValue<TValue>[];\n  initialState?: Set<TValue> | TValue[];\n  onStateChanged?: (state: Set<TValue>) => void;\n  allowMultipleSelections?: boolean;\n  matchType?: 'any-of' | 'all-of';\n  menuWidth?: number | string;\n};\n\nexport type StaticSetFilter<TValue> = FilterObject & {\n  state: Set<TValue>;\n  setState: (state: Set<TValue>) => void;\n};\n\nexport function useStaticSetFilter<TValue>({\n  name,\n  icon,\n  getKey,\n  allValues,\n  renderLabel,\n  renderActiveStateLabel,\n  initialState,\n  getStringValue,\n  onStateChanged,\n  menuWidth,\n  allowMultipleSelections = true,\n  matchType = 'any-of',\n}: Args<TValue>): StaticSetFilter<TValue> {\n  const [state, setState] = React.useState(() => new Set(initialState || []));\n\n  React.useEffect(() => {\n    onStateChanged?.(state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  React.useEffect(() => {\n    setState(initialState ? new Set(initialState) : new Set());\n  }, [initialState]);\n\n  const filterObj: StaticSetFilter<TValue> = React.useMemo(\n    () => ({\n      name,\n      icon,\n      state,\n      isActive: state.size > 0,\n      getResults: (query) => {\n        if (query === '') {\n          return allValues.map(({value}, index) => ({\n            label: (\n              <SetFilterLabel\n                value={value}\n                renderLabel={renderLabel}\n                filter={filterObjRef.current}\n                allowMultipleSelections={allowMultipleSelections}\n              />\n            ),\n            key: getKey?.(value) || index.toString(),\n            value,\n          }));\n        }\n\n        return allValues\n          .filter(({match}) =>\n            match.some((value) => value.toLowerCase().includes(query.toLowerCase())),\n          )\n          .map(({value}, index) => ({\n            label: (\n              <SetFilterLabel\n                value={value}\n                renderLabel={renderLabel}\n                filter={filterObjRef.current}\n                allowMultipleSelections={allowMultipleSelections}\n              />\n            ),\n            key: getKey?.(value) || index.toString(),\n            value,\n          }));\n      },\n      onSelect: ({value}) => {\n        let newState = new Set(filterObjRef.current.state);\n        if (newState.has(value)) {\n          newState.delete(value);\n        } else {\n          if (!allowMultipleSelections) {\n            newState = new Set([value]);\n          } else {\n            newState.add(value);\n          }\n        }\n        setState(newState);\n      },\n\n      activeJSX: (\n        <SetFilterActiveState\n          name={name}\n          state={state}\n          getStringValue={getStringValue}\n          renderLabel={renderActiveStateLabel || renderLabel}\n          onRemove={() => {\n            setState(new Set());\n          }}\n          icon={icon}\n          matchType={matchType}\n        />\n      ),\n      setState,\n      menuWidth,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      name,\n      icon,\n      state,\n      getStringValue,\n      renderActiveStateLabel,\n      renderLabel,\n      matchType,\n      allValues,\n      allowMultipleSelections,\n      getKey,\n    ],\n  );\n  const filterObjRef = useUpdatingRef(filterObj);\n  return filterObj;\n}\n\nconst MAX_VALUES_TO_SHOW = 3;\n\nexport function SetFilterActiveState({\n  name,\n  state,\n  icon,\n  getStringValue,\n  onRemove,\n  renderLabel,\n  matchType,\n}: {\n  name: string;\n  icon: IconName;\n  state: Set<any>;\n  getStringValue: (value: any) => string;\n  onRemove: () => void;\n  renderLabel: (value: any) => JSX.Element;\n  matchType: 'any-of' | 'all-of';\n}) {\n  const isAnyOf = matchType === 'any-of';\n  const arr = React.useMemo(() => Array.from(state), [state]);\n  const label = React.useMemo(() => {\n    if (arr.length === 0) {\n      return null;\n    } else if (arr.length <= MAX_VALUES_TO_SHOW) {\n      return (\n        <>\n          is&nbsp;{arr.length === 1 ? '' : <>{isAnyOf ? 'any of' : 'all of'}&nbsp;</>}\n          {arr.map((value, index) => (\n            <React.Fragment key={index}>\n              <FilterTagHighlightedText>{getStringValue(value)}</FilterTagHighlightedText>\n              {index < arr.length - 1 ? <>,&nbsp;</> : ''}\n            </React.Fragment>\n          ))}\n        </>\n      );\n    } else {\n      return (\n        <Box flex={{direction: 'row', alignItems: 'center'}}>\n          is <>{isAnyOf ? 'any of' : 'all of'}&nbsp;</>\n          <Popover\n            interactionKind=\"hover\"\n            position=\"bottom\"\n            content={\n              <Box padding={{vertical: 8, horizontal: 12}} flex={{direction: 'column', gap: 4}}>\n                {arr.map((value) => (\n                  <div\n                    key={getStringValue(value)}\n                    style={{\n                      maxWidth: '500px',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap',\n                    }}\n                  >\n                    {renderLabel({value, isActive: true})}\n                  </div>\n                ))}\n              </Box>\n            }\n          >\n            <FilterTagHighlightedText>{`${\n              arr.length\n            } ${name.toLowerCase()}s`}</FilterTagHighlightedText>\n          </Popover>\n        </Box>\n      );\n    }\n  }, [arr, getStringValue, isAnyOf, name, renderLabel]);\n\n  if (arr.length === 0) {\n    return null;\n  }\n  return (\n    <FilterTag\n      iconName={icon}\n      label={\n        <Box flex={{direction: 'row', alignItems: 'center'}}>\n          {capitalizeFirstLetter(name)}&nbsp;{label}\n        </Box>\n      }\n      onRemove={onRemove}\n    />\n  );\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase().replace(/_/g, ' ');\n}\n\ntype SetFilterLabelProps = {\n  value: any;\n  filter: StaticSetFilter<any>;\n  renderLabel: (value: any) => JSX.Element;\n  allowMultipleSelections: boolean;\n};\nexport function SetFilterLabel(props: SetFilterLabelProps) {\n  const {value, filter, renderLabel, allowMultipleSelections} = props;\n  const isActive = filter.state.has(value);\n\n  const labelRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    // 4 px of margin to compensate for weird Checkbox CSS whose bounding box is smaller than the actual\n    // SVG it contains with size=\"small\"\n    <Box\n      flex={{direction: 'row', gap: 6, alignItems: 'center'}}\n      ref={labelRef}\n      margin={{left: 4}}\n      style={{maxWidth: '500px'}}\n    >\n      {allowMultipleSelections ? <Checkbox checked={isActive} size=\"small\" readOnly /> : null}\n      <Box\n        flex={{direction: 'row', alignItems: 'center', grow: 1, shrink: 1}}\n        style={{overflow: 'hidden'}}\n      >\n        <div style={{overflow: 'hidden'}}>{renderLabel({value, isActive})}</div>\n      </Box>\n    </Box>\n  );\n}\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon?: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : icon ? (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      ) : null}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n          shrink: 1,\n          grow: 1,\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {TagInput} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {MenuItem, Menu} from './Menu';\nimport {Popover} from './Popover';\nimport {Spinner} from './Spinner';\n\nconst MAX_SUGGESTIONS = 100;\n\nexport interface SuggestionProvider {\n  token?: string;\n  values: () => string[];\n  suggestionFilter?: (query: string, suggestion: Suggestion) => boolean;\n  textOnly?: boolean;\n}\n\nexport interface Suggestion {\n  text: string;\n  final: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\nexport interface TokenizingFieldValue {\n  token?: string;\n  value: string;\n}\n\ninterface TokenizingFieldProps {\n  values: TokenizingFieldValue[];\n  maxValues?: number;\n  onChange: (values: TokenizingFieldValue[]) => void;\n  onChangeBeforeCommit?: boolean;\n  addOnBlur?: boolean;\n  onFocus?: () => void;\n\n  placeholder?: string;\n  loading?: boolean;\n  className?: string;\n  small?: boolean;\n\n  fullwidth?: boolean;\n\n  onTextChange?: (text: string) => void;\n  suggestionProviders: SuggestionProvider[];\n  suggestionRenderer?: (suggestion: Suggestion) => React.ReactNode;\n  suggestionProvidersFilter?: (\n    suggestionProvider: SuggestionProvider[],\n    values: TokenizingFieldValue[],\n  ) => SuggestionProvider[];\n}\n\nfunction findProviderByToken(token: string, providers: SuggestionProvider[]) {\n  return providers.find((p) => p.token && p.token.toLowerCase() === token.toLowerCase());\n}\n\nexport const tokenizedValuesFromString = (str: string, providers: SuggestionProvider[]) => {\n  if (str === '') {\n    return [];\n  }\n  const tokens = str.split(',');\n  return tokenizedValuesFromStringArray(tokens, providers);\n};\n\nexport const tokenizedValuesFromStringArray = (tokens: string[], providers: SuggestionProvider[]) =>\n  tokens.map((token) => tokenizedValueFromString(token, providers));\n\nexport const tokenizeString = (str: string): [string, string] => {\n  const colonAt = str.indexOf(':');\n  if (colonAt === -1) {\n    return [str, ''];\n  }\n  return [str.slice(0, colonAt), str.slice(colonAt + 1)];\n};\n\nexport function tokenizedValueFromString(\n  str: string,\n  providers: SuggestionProvider[],\n): TokenizingFieldValue {\n  const [token, value] = tokenizeString(str);\n  if (findProviderByToken(token, providers)) {\n    if (token && value) {\n      return {token, value};\n    }\n  }\n\n  return {value: str};\n}\n\nexport const tokenToString = (v: TokenizingFieldValue) =>\n  v.token ? `${v.token}:${v.value}` : v.value;\n\nexport const tokensAsStringArray = (value: TokenizingFieldValue[]) =>\n  value.filter((v) => v.value !== '').map(tokenToString);\n\nexport const stringFromValue = (value: TokenizingFieldValue[]) =>\n  tokensAsStringArray(value).join(',');\n\nconst isEqual = (a: TokenizingFieldValue, b?: TokenizingFieldValue) =>\n  b && a.token === b.token && a.value === b.value;\n\n/** Provides a text field with typeahead autocompletion.\n *  This completion either provides a list of standalone tokens\n *  sourced from the `tokens` param, or a set of key value pairs,\n *  sourced from the `suggestionProviders` param. In the latter case, the\n *  key is one of a known set of \"suggestion provider tokens\".\n *\n *  Provide one or more SuggestionProviders or a list of tokens\n *  to build the tree of autocompletions.\n *\n *  The input also allows for freeform typing (`value` items with no token value) */\nexport const TokenizingField: React.FC<TokenizingFieldProps> = ({\n  suggestionProviders,\n  suggestionProvidersFilter,\n  values: externalValues,\n  maxValues,\n  onChange,\n  onChangeBeforeCommit,\n  onFocus,\n  onTextChange,\n  placeholder,\n  addOnBlur,\n  loading,\n  className,\n  fullwidth,\n  suggestionRenderer,\n}) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n  const [typed, setTyped] = React.useState<string>('');\n\n  const values = React.useMemo(() => [...externalValues], [externalValues]);\n  const typedValue = tokenizedValueFromString(typed, suggestionProviders);\n  if (isEqual(typedValue, values[values.length - 1])) {\n    values.pop();\n  }\n\n  const atMaxValues = maxValues !== undefined && values.length >= maxValues;\n\n  const filteredSuggestionProviders = suggestionProvidersFilter\n    ? suggestionProvidersFilter(suggestionProviders, values)\n    : suggestionProviders;\n\n  // Build the set of suggestions that should be displayed for the current input value.\n  // Note: \"typed\" is the text that has not yet been submitted, separate from values[].\n  const parts = typed.split(':');\n  const lastPart = (parts[parts.length - 1] || '').toLowerCase();\n\n  const suggestions = React.useMemo(() => {\n    if (atMaxValues) {\n      return [];\n    }\n\n    let suggestionsArr: Suggestion[] = [];\n\n    const matchesTypedText = (query: string, s: Suggestion) =>\n      !query ||\n      s.text\n        .toLowerCase()\n        .split(':')\n        .some((c) => c.includes(query));\n\n    const availableSuggestionsForProvider = (provider: SuggestionProvider) => {\n      const suggestionNotUsed = (v: string) =>\n        !values.some((e) => e.token === provider.token && e.value === v);\n\n      const suggestionFilter = provider.suggestionFilter || matchesTypedText;\n\n      return provider\n        .values()\n        .filter(suggestionNotUsed)\n        .map((v) => ({\n          text: provider?.token ? `${provider.token}:${v}` : v,\n          final: !provider.textOnly,\n        }))\n        .filter((s) => suggestionFilter(lastPart, s))\n        .slice(0, MAX_SUGGESTIONS); // never show too many suggestions for one provider\n    };\n\n    if (parts.length === 1) {\n      // Suggest providers (eg: `pipeline:`) so users can discover the search space\n\n      suggestionsArr = filteredSuggestionProviders\n        .reduce(\n          (accum: Suggestion[], s) =>\n            s.token ? [...accum, {text: `${s.token}:`, final: false}] : accum,\n          [],\n        )\n        .filter((s) => matchesTypedText(lastPart, s));\n\n      // Suggest value completions so users can type \"airline_\" without the \"pipeline\"\n      // prefix and get the correct suggestion.\n      for (const p of filteredSuggestionProviders) {\n        if (!p.token || typed.length > 0) {\n          suggestionsArr.push(...availableSuggestionsForProvider(p));\n        }\n      }\n    }\n\n    if (parts.length === 2) {\n      const firstPart = parts[0];\n      if (firstPart) {\n        // Suggest values from the chosen provider (eg: `pipeline:abc`)\n        const provider = findProviderByToken(firstPart, filteredSuggestionProviders);\n        suggestionsArr = provider ? availableSuggestionsForProvider(provider) : [];\n      }\n    }\n\n    // Truncate suggestions to the ones currently matching the typed text,\n    // and always sort them in alphabetical order.\n    suggestionsArr.sort((a, b) => a.text.localeCompare(b.text));\n\n    return suggestionsArr;\n  }, [atMaxValues, filteredSuggestionProviders, lastPart, parts, typed.length, values]);\n\n  const _onTextChange = (text: string) => {\n    setTyped(text);\n    onTextChange && onTextChange(text);\n  };\n\n  // We need to manage selection in the dropdown by ourselves. To ensure the\n  // best behavior we store the active item's index and text (the text allows\n  // us to relocate it if it's moved and the index allows us to keep selection\n  // at the same location if the previous item is gone.)\n\n  // This hook keeps the active row state in sync with the suggestions, which\n  // are derived from the current input value.\n\n  React.useEffect(() => {\n    // If suggestions are present, autoselect the first one so the user can press\n    // enter to complete their search. (Esc + enter is how you enter your raw text.)\n    if (!active && suggestions.length) {\n      const item = suggestions[0];\n      if (item) {\n        setActive({text: item.text, idx: 0});\n      }\n      return;\n    }\n    if (!active) {\n      return;\n    }\n    if (suggestions.length === 0) {\n      setActive(null);\n      return;\n    }\n\n    // Relocate the currently active item in the latest suggestions list\n    const pos = suggestions.findIndex((a) => a.text === active.text);\n\n    // The new index is the index of the active item, or whatever item\n    // is now at it's location if it's gone, bounded to the array.\n    let nextIdx = pos !== -1 ? pos : active.idx;\n    nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n    const nextItem = suggestions[nextIdx];\n\n    if (nextItem && (nextIdx !== active.idx || nextItem.text !== active.text)) {\n      setActive({text: nextItem.text, idx: nextIdx});\n    }\n  }, [active, suggestions]);\n\n  const onConfirmSuggestion = (suggestion: Suggestion) => {\n    if (atMaxValues) {\n      return;\n    }\n\n    if (suggestion.final) {\n      // The user has finished a key-value pair\n      onConfirmText(suggestion.text);\n      _onTextChange('');\n      setActive(null);\n      setOpen(false);\n    } else {\n      // The user has finished a key\n      _onTextChange(suggestion.text);\n    }\n  };\n\n  const onConfirmText = (str: string) => {\n    if (atMaxValues) {\n      return;\n    }\n    if (str.endsWith(':')) {\n      return;\n    }\n    if (str === '') {\n      return;\n    }\n\n    _onTextChange('');\n    onChange([...values, tokenizedValueFromString(str, filteredSuggestionProviders)]);\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<any>) => {\n    if (atMaxValues && e.key !== 'Delete' && e.key !== 'Backspace') {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    // Enter and Return confirm the currently selected suggestion or\n    // confirm the freeform text you've typed if no suggestions are shown.\n    if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n      if (active) {\n        const picked = suggestions.find((s) => s.text === active.text);\n        if (!picked) {\n          throw new Error('Selection out of sync with suggestions');\n        }\n        onConfirmSuggestion(picked);\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (typed.length) {\n        onConfirmText(typed);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      return;\n    }\n\n    // Typing space confirms your freeform text\n    if (e.key === ' ') {\n      e.preventDefault();\n      onConfirmText(typed);\n      return;\n    }\n\n    // Escape closes the options. The options re-open if you type another char or click.\n    if (e.key === 'Escape') {\n      setActive(null);\n      setOpen(false);\n      return;\n    }\n\n    if (!open && e.key !== 'Delete' && e.key !== 'Backspace') {\n      setOpen(true);\n    }\n\n    // The up/down arrow keys shift selection in the dropdown.\n    // Note: The first down arrow press activates the first item.\n    const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n    if (shift && suggestions.length > 0) {\n      e.preventDefault();\n      let idx = (active ? active.idx : -1) + shift;\n      idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n      const item = suggestions[idx];\n      if (item) {\n        setActive({text: item.text, idx});\n      }\n    }\n  };\n\n  const menuRef = React.createRef<HTMLDivElement>();\n  React.useEffect(() => {\n    if (menuRef.current && active) {\n      const el = menuRef.current.querySelector(`[data-idx='${active.idx}']`);\n      if (el && el instanceof HTMLElement && 'scrollIntoView' in el) {\n        el.scrollIntoView({block: 'nearest'});\n      }\n    }\n  }, [menuRef, active]);\n\n  const renderSuggestion = suggestionRenderer || ((suggestion) => suggestion.text);\n\n  return (\n    <Popover\n      isOpen={open && suggestions.length > 0 && !atMaxValues}\n      position=\"bottom-left\"\n      content={\n        suggestions.length > 0 ? (\n          <div style={{maxHeight: 235, overflowY: 'scroll'}} ref={menuRef}>\n            <StyledMenu>\n              {suggestions.map((suggestion, idx) => (\n                <MenuItem\n                  data-idx={idx}\n                  key={suggestion.text}\n                  text={renderSuggestion(suggestion)}\n                  shouldDismissPopover={false}\n                  active={active?.idx === idx}\n                  onMouseDown={(e: React.MouseEvent<any>) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onConfirmSuggestion(suggestion);\n                    setActive(null);\n                  }}\n                />\n              ))}\n            </StyledMenu>\n          </div>\n        ) : (\n          <div />\n        )\n      }\n    >\n      <StyledTagInput\n        className={className}\n        values={values.map((v) => (v.token ? `${v.token}:${v.value}` : v.value))}\n        inputValue={typed}\n        onRemove={(_, idx) => {\n          const next = [...values];\n          next.splice(idx, 1);\n          onChange(next);\n        }}\n        onInputChange={(e) => {\n          _onTextChange(e.currentTarget.value);\n\n          if (onChangeBeforeCommit) {\n            const tokenized = tokenizedValueFromString(\n              e.currentTarget.value,\n              filteredSuggestionProviders,\n            );\n            onChange([...values, tokenized]);\n          }\n        }}\n        inputProps={{\n          onFocus: () => {\n            setOpen(true);\n            onFocus && onFocus();\n          },\n          onBlur: () => {\n            // Emulate behavior of addOnBlur for TagInput\n            // When a user clicks outside of the input, finish the current token\n            if (addOnBlur) {\n              onConfirmText(typed);\n            }\n            setOpen(false);\n          },\n        }}\n        $maxWidth={fullwidth ? '100%' : undefined}\n        onAdd={() => false}\n        onKeyDown={onKeyDown}\n        tagProps={{minimal: true}}\n        placeholder={placeholder || 'Filter…'}\n        rightElement={\n          loading && open ? (\n            <Box style={{alignSelf: 'center'}} margin={{right: 4}}>\n              <Spinner purpose=\"body-text\" />\n            </Box>\n          ) : undefined\n        }\n      />\n    </Popover>\n  );\n};\n\nexport const StyledTagInput = styled(TagInput)<{$maxWidth?: any}>`\n  border: none;\n  border-radius: 8px;\n  box-shadow: ${Colors.Gray300} inset 0px 0px 0px 1px, ${Colors.KeylineGray} inset 2px 2px 1.5px;\n  min-width: 400px;\n  max-width: ${(p) => (p.$maxWidth ? p.$maxWidth : '600px')};\n  transition: box-shadow 150ms;\n\n  &.bp4-active {\n    box-shadow: ${Colors.Gray300} inset 0px 0px 0px 1px, ${Colors.KeylineGray} inset 2px 2px 1.5px,\n      rgba(58, 151, 212, 0.6) 0 0 0 3px;\n  }\n\n  input {\n    font-size: 14px;\n    font-weight: 400;\n    padding-left: 4px;\n    padding-bottom: 2px;\n    padding-top: 2px;\n  }\n\n  && .bp4-tag-input-values:first-child .bp4-input-ghost:first-child {\n    padding-left: 8px;\n  }\n\n  && .bp4-tag-input-values {\n    margin-right: 4px;\n    margin-top: 4px;\n  }\n\n  && .bp4-tag-input-values > * {\n    margin-bottom: 4px;\n  }\n\n  .bp4-tag {\n    border-radius: 6px;\n    display: inline-flex;\n    flex-direction: row;\n    font-size: 12px;\n    line-height: 16px;\n    align-items: center;\n    max-width: 400px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding: 4px 8px;\n    user-select: none;\n  }\n\n  .bp4-tag.bp4-minimal:not([class*='bp4-intent-']) {\n    background-color: ${Colors.Gray100};\n    color: ${Colors.Gray900};\n  }\n\n  .bp4-tag.bp4-minimal.bp4-intent-success {\n    background-color: ${Colors.Green50};\n    color: ${Colors.Green700};\n  }\n\n  .bp4-tag.bp4-minimal.bp4-intent-warning {\n    background-color: ${Colors.Yellow50};\n    color: ${Colors.Yellow700};\n  }\n\n  .bp4-tag.bp4-minimal.bp4-intent-danger {\n    background-color: ${Colors.Red50};\n    color: ${Colors.Red700};\n  }\n`;\n\nconst StyledMenu = styled(Menu)`\n  width: 400px;\n`;\n"],"names":["currentQueryString","useQueryPersistedState","options","queryKey","defaults","encode","decode","raw","_defineProperty","qs","inferTypeOfQueryParam","location","useLocation","history","useHistory","qsDecoded","React","search","ignoreQueryPrefix","qsWithDefaults","_objectSpread","result","_i2","_Object$keys","Object","keys","length","key","inferTypeOfQueryParams","valueRef","onChangeRef","updated","next","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","value","replace","concat","pathname","arrayFormat","isEqual","current","q","useSetStateUpdateCallback","currentState","updateCallback","stateRef","updateCallbackRef","Function","useUpdatingRef","ref","PipelineReference","_ref","pipelineName","pipelineHrefContext","isJob","snapshotId","showIcon","_ref$truncationThresh","truncationThreshold","_ref$size","size","truncatedName","slice","pipeline","_jsx","Link","to","workspacePipelinePathGuessRepo","children","_Fragment","workspacePipelinePath","repoName","name","repoLocation","_jsxs","Box","flex","direction","alignItems","display","margin","right","Icon","color","Colors","PipelineSnapshotLink","queuedStatuses","Set","RunStatus","inProgressStatuses","successStatuses","failedStatuses","doneStatuses","cancelableStatuses","useSuggestionFilter","icon","freeformSearchResult","state","setState","initialSuggestions","onSuggestionClicked","getStringValue","getKey","renderLabel","renderActiveStateLabel","isMatch","_ref$matchType","matchType","_React$useState","_React$useState2","nextSuggestionsLoading","setNextSuggestionsLoading","_React$useState3","_React$useState4","nextSuggestions","setNextSuggestions","nextSuggestionsRef","nextSuggestionsLoadingRef","_React$useState5","_React$useState6","suggestionPath","setSuggestionPath","filterObj","isActive","onUnselected","isLoadingFilters","getResults","query","results","_nextSuggestionsRef$c","hasExactMatch","filter","_ref2","map","index","label","SuggestionFilterLabel","filterObjRef","toString","_ref3","suggestion","unshift","onSelect","_onSelect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref4","clearSearch","_nextSuggestions","wrap","_context","prev","final","includes","v","_toConsumableArray","path","sent","stop","_x","apply","arguments","activeJSX","SetFilterActiveState","onRemove","props","labelRef","gap","left","style","maxWidth","overflow","useTimeRangeFilter","timezone","initialState","onStateChanged","_React$useMemo","obj","TODAY","range","moment","tz","startOf","toDate","valueOf","YESTERDAY","subtract","endOf","LAST_7_DAYS","LAST_30_DAYS","CUSTOM","array","keyString","timeRanges","timeRangesArray","calculateTimeRanges","Math","floor","Date","now","onReset","toLowerCase","TimeRangeResult","close","createPortal","closeRef","CustomTimeRangeFilterDialog","nextState","ActiveFilterState","remove","_ref5","_ref6","L_FORMAT","Intl","DateTimeFormat","navigator","language","year","month","day","timeZone","resolvedOptions","dateLabel","FilterTagHighlightedText","format","FilterTag","iconName","_ref7","startDate","setStartDate","endDate","setEndDate","_React$useState7","_React$useState8","focusedInput","setFocusedInput","_React$useState9","_React$useState10","isOpen","setIsOpen","Dialog","title","onClosed","width","Container","padding","DateRangePicker","onDatesChange","_ref8","onFocusChange","startDateId","endDateId","withPortal","keepOpenOnDateSelect","isOutsideRange","DialogFooter","topBorder","Button","onClick","intent","disabled","styled","displayName","componentId","RunsFilterInput","_useRunsFilterInput","useRunsFilterInput","button","activeFiltersJsx","RUN_PROVIDERS_EMPTY","token","values","useQueryPersistedRunFilters","enabledFilters","tokens","tokensAsStringArray","cursor","undefined","_ref$q","tokenizedValuesFromStringArray","t","runsPathWithFilters","filterTokens","runsFilterForSearchTokens","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","createdBefore","parseInt","updatedAfter","runIds","push","statuses","_item$value$split","split","_item$value$split2","_item$value$split2$","tags","err","e","f","StatusFilterValues","x","capitalizeFirstLetter","match","CREATED_BY_TAGS","DagsterTag","tagsToExclude","onChange","useRepositoryOptions","_useLazyQuery","useLazyQuery","RUN_TAG_KEYS_QUERY","_useLazyQuery2","fetchTagKeys","tagKeyData","data","client","useApolloClient","UserDisplay","useLaunchPadHooks","fetchTagValues","tagKey","_data$runTagsOrError","_yield$client$query","_data$runTagsOrError$","_data$runTagsOrError$2","RUN_TAG_VALUES_QUERY","variables","tagKeys","runTagsOrError","__typename","abrupt","tagValue","tagSuggestionValueObject","tagSuggestions","_tagKeyData$runTagKey","runTagKeysOrError","_useTagDataFilterValu","useTagDataFilterValues","_useTagDataFilterValu2","fetchSensorValues","sensorValues","_useTagDataFilterValu3","_useTagDataFilterValu4","fetchScheduleValues","scheduleValues","_useTagDataFilterValu5","_useTagDataFilterValu6","fetchUserValues","userValues","_useTagDataFilterValu7","_useTagDataFilterValu8","fetchBackfillValues","backfillValues","isBackfillsFilterEnabled","onFocus","createdByValues","tagToFilterValue","isJobFilterEnabled","pipelineNames","jobNames","pipelines","jobs","_step2","_iterator2","_step3","repository","_iterator3","startsWith","__ASSET_JOB_PREFIX","isPipelineFilterEnabled","jobFilter","useStaticSetFilter","allowMultipleSelections","allValues","TruncatedTextWithFullTextOnHover","text","Array","from","statusFilter","pipelinesFilter","backfillsFilter","tagValueToFilterObject","_ref9","_ref10","_ref11","type","_useFilters","useFilters","filters","_ref12","labelValue","email","isFilter","_ref13","_ref14","before","find","after","_token$token","_ref15","_token$value$split","_token$value$split2","_ref16","_ref17","_onSuggestionClicked","_callee2","_ref18","_context2","_x2","_ref19","_ref20","_ref21","_ref22","_ref23","_useLazyQuery3","_useLazyQuery4","fetch","_data$runTagsOrError2","flat","memoize","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","FilterDropdown","setPortaledElements","uuidv4","menuKey","focusedItemIndex","setFocusedItemIndex","_useState","useState","_useState2","setSearch","_useState3","_useState4","selectedFilterName","_setSelectedFilterName","selectedFilter","setSelectedFilterName","nextName","_selectedFilter$onUns","call","selectedFilterRef","_selectedFilterRef$cu","_selectedFilterRef$cu2","filteredFilters","forEach","selectValue","portaledElement","portalElement","portaledElements","element","allResultsJsx","resultIndex","FilterDropdownMenuItem","active","jsxResults","_results$filter$name","inputRef","useRef","dropdownRef","handleKeyDown","event","maxIndex","_allResultsJsx$focuse","_allResultsJsx$focuse2","_allResultsJsx$focuse3","shiftKey","prevIndex","preventDefault","target","parentRef","rowVirtualizer","useVirtualizer","count","getScrollElement","estimateSize","_","overscan","totalHeight","getTotalSize","items","getVirtualItems","TextInputWrapper","TextInput","onKeyDown","placeholder","el","focus","itemId","role","justifyContent","vertical","horizontal","SlashShortcut","Menu","DropdownMenuContainer","id","Spinner","purpose","maxHeight","overflowY","menuWidth","Inner","$totalHeight","end","start","Row","$height","$start","FilterDropdownButton","keyRef","_useState5","_useState6","_setIsOpen","prevOpenRef","_useState7","_useState8","buttonRef","listener","_buttonRef$current","_dropdownRef$current","contains","document","body","addEventListener","removeEventListener","ShortcutHandler","shortcutLabel","shortcutFilter","code","onShortcut","PopoverStyle","Popover","content","canEscapeKeyClose","popoverClassName","placement","onClosing","position","IconWrapper","rest","_objectWithoutProperties","_excluded","divRef","_divRef$current","_divRef$current$scrol","scrollIntoView","block","StyledMenuItem","MenuItem","withConfig","createGlobalStyle","activeFilterJsx","BaseTag","rightIcon","tabIndex","fillColor","textColor","FilterTagHighlightedTextSpan","tooltipStyle","LabelTooltipStyles","JSON","stringify","background","border","borderRadius","fontSize","transform","fontWeight","_ref$allowMultipleSel","SetFilterLabel","some","newState","has","delete","add","MAX_VALUES_TO_SHOW","isAnyOf","arr","interactionKind","textOverflow","whiteSpace","string","charAt","toUpperCase","Checkbox","checked","readOnly","grow","shrink","NonIdealState","description","action","shrinkable","singleContentElement","Boolean","Subheading","findProviderByToken","providers","p","tokenizedValuesFromString","str","tokenizedValueFromString","tokenizeString","colonAt","indexOf","_tokenizeString","_tokenizeString2","tokenToString","stringFromValue","join","TokenizingField","a","b","suggestionProviders","suggestionProvidersFilter","externalValues","maxValues","onChangeBeforeCommit","onTextChange","addOnBlur","loading","className","fullwidth","suggestionRenderer","open","setOpen","setActive","typed","setTyped","typedValue","pop","atMaxValues","filteredSuggestionProviders","parts","lastPart","suggestions","suggestionsArr","matchesTypedText","c","availableSuggestionsForProvider","provider","suggestionFilter","textOnly","reduce","accum","_suggestionsArr","firstPart","sort","localeCompare","_onTextChange","pos","findIndex","nextIdx","idx","max","min","nextItem","onConfirmSuggestion","onConfirmText","endsWith","menuRef","querySelector","HTMLElement","renderSuggestion","StyledMenu","shouldDismissPopover","onMouseDown","stopPropagation","StyledTagInput","inputValue","splice","onInputChange","currentTarget","tokenized","inputProps","onBlur","$maxWidth","onAdd","shift","ArrowDown","ArrowUp","picked","Error","tagProps","minimal","rightElement","alignSelf","TagInput"],"sourceRoot":""}